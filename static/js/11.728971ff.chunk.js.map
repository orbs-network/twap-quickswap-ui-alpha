{"version":3,"sources":["assets/images/HelpIcon1.svg","assets/images/SettingsIcon.svg","pages/SwapPage/Twap/LimitPriceInput.tsx","pages/SwapPage/Twap/TimeSelect.tsx","pages/SwapPage/Twap/Duration.tsx","pages/SwapPage/Twap/Interval.tsx","pages/SwapPage/Twap/useValidation.ts","pages/SwapPage/Twap/ChunkSize.tsx","pages/SwapPage/Twap/ErrorNotification.tsx","pages/SwapPage/Twap/useTwapCallback.ts","pages/SwapPage/Twap/ConfirmTwapModal/TxDetails.tsx","pages/SwapPage/Twap/ConfirmTwapModal/Disclaimer.tsx","pages/SwapPage/Twap/PriceIndication.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ModalContent.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ConfirmTwapModal.tsx","pages/SwapPage/Twap/useWrapCallback.ts","pages/SwapPage/Twap/Twap.tsx","pages/SwapPage/SwapMain.tsx","pages/SwapPage/LiquidityPoolRow.tsx","pages/SwapPage/LiquidityPools.tsx","pages/SwapPage/SwapProChart.tsx","pages/SwapPage/SwapProChartTrade.tsx","pages/SwapPage/SwapInfoTx.tsx","pages/SwapPage/SwapProInfo.tsx","pages/SwapPage/SwapProFilter.tsx","pages/SwapPage/SwapPage.tsx"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHelpIcon1","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","d","transform","style","fill","ForwardRef","SvgSettingsIcon","rx","LimitPriceInput","useDerivedTwapInfo","currencies","marketPrice","allowLimitPrice","useTwapState","invertLimitPriceValue","price","t","useTranslation","dispatch","useDispatch","onChange","value","currency","Field","INPUT","setPrice","formattedPrice","tryParseAmount","undefined","currenciesMemoized","useMemo","inputCurrency","OUTPUT","outputCurrency","StyledContainer","className","StyledTop","StyledTitle","toggled","onToggle","setAllowLimitPrice","setInvertLimitPriceValue","invert","toSignificant","InfoTooltip","text","Typography","StyledInputContainer","StyledCurrencyDetails","marginRight","size","symbol","disabled","align","placeholder","onUserInput","val","IconButton","onClick","marginLeft","PriceExchangeIcon","styled","Box","display","alignItems","justifyContent","borderBottom","gap","marginTop","flexDirection","TimeSelect","selected","onUpdate","tooltip","margin","StyledRight","displayValue","milliseconds","timeToMilliseconds","type","format","getFormatTypeFromMilliseconds","millisecondsToTime","console","log","StyledSelect","event","color","opacity","MenuItem","TimeSelectFormat","DAYS","HOURS","MINUTES","Select","theme","palette","primary","main","whiteSpace","Duration","onDuration","useTwapActionHandlers","duration","onInterval","interval","selfEdit","partialFillWarning","totalChunks","Number","usePartialFillWarning","useEffect","StyledCard","setSelfEdit","StyledWarning","fontWeight","ChunkSize","chunkSize","parsedAmount","onChunkSize","usdPrice","useUSDCPrice","invalidChunkSize","toExact","StyledCurrency","marginBottom","StyledBottom","toString","toLocaleString","ErrorNotification","SwapCallbackState","error","handleClose","setTimeout","setError","Snackbar","open","autoHideDuration","onClose","Alert","severity","variant","useTwapCallArguments","trade","allowedSlippage","GlobalConst","utils","INITIAL_ALLOWED_SLIPPAGE","recipientAddressOrName","useActiveWeb3React","account","chainId","library","useENS","recipientAddress","address","recipient","deadline","useTransactionDeadline","contract","useRouterContract","tradeVersion","Version","v2","swapMethods","push","Router","swapCallParameters","feeOnTransfer","Percent","JSBI","BigInt","BIPS_BASE","ttl","toNumber","DEFAULT_DEADLINE_FROM_NOW","tradeType","TradeType","EXACT_INPUT","map","parameters","calculateInterval","time","moment","days","hours","minutes","str","TxDetails","outputAmount","limitOrderAllowed","StyledDetails","add","formatTokenAmount","fontSize","Row","StyledRow","placement","Disclaimer","link","href","PriceIndication","executionPrice","customText","useState","mainPrice","setMainPrice","ModalContent","onConfirm","typedPriceOutputValue","priceAsCurrencyAmount","StyledCards","currencyAmount","Button","Card","StyledCardTop","getTokenValue","StyledCardBottom","WrapType","ConfirmTwapModal","originalTrade","onAcceptChanges","onDismiss","swapErrorMessage","isOpen","attemptingTxn","txHash","txPending","modalContent","useCallback","confirmationContent","message","content","hash","pendingText","NOT_APPLICABLE","wrapType","Twap","currency0","currency1","currencyBgClass","typedValue","currencyBalances","swapInputError","inputError","finalizedTransaction","useTransactionFinalizer","wrapLoading","setWrapLoading","allTokens","useAllTokens","wethContract","useWETHContract","balance","useCurrencyBalance","inputAmount","addTransaction","useTransactionAdder","sufficientBalance","lessThan","ETHER","WRAP","execute","a","deposit","raw","txReceipt","summary","wait","useTwapWrapCallback","onWrap","wrapInputError","onSwitchTokens","onCurrencySelection","searchToken","useToken","handleCurrencySelect","setApprovalSubmitted","onWrapHandler","showWrap","useUserSlippageTolerance","approving","setApproving","useApproveCallbackFromTrade","approval","approveCallback","inputsError","useInputsValidation","parsedAmounts","formattedAmounts","userHasSpecifiedInputOutput","Boolean","parseUnits","decimals","gt","approvalSubmitted","ethereum","window","isValid","showApproveFlow","ApprovalState","NOT_APPROVED","PENDING","APPROVED","toggleWalletModal","useWalletModalToggle","handleOtherCurrencySelect","input","output","swapCalls","state","INVALID","callback","LOADING","VALID","Promise","all","methodName","args","options","isZero","estimateGas","then","gasEstimate","catch","gasError","debug","callStatic","result","Error","callError","errorMessage","reason","estimatedCalls","successfulEstimation","find","el","ix","list","errorCalls","filter","gasLimit","calculateGasMargin","from","response","inputSymbol","outputSymbol","base","withRecipient","isAddress","shortenAddress","withVersion","toUpperCase","code","useTwapCallback","twapCallback","twapCallbackError","swapButtonText","UNWRAP","isSupportedNetwork","twapButtonDisabled","showConfirm","tradeToConfirm","setTwapState","handleTypeInput","maxAmountInput","maxAmountSpend","handleMaxInput","handleHalfInput","atMaxAmountInput","equalTo","Token","handleAcceptChanges","handleConfirmDismiss","handleTwap","receipt","onHalf","onMax","showHalfButton","showMaxButton","otherCurrency","amount","setAmount","bgClass","ExchangeIcon","showPrice","StyledFlex","Interval","fullWidth","CircularProgress","StyledButtonContainer","addMaticToMetamask","zoom","backgroundImage","SwapMain","swapIndex","setSwapIndex","openSettingsModal","setOpenSettingsModal","useIsProMode","isProMode","updateIsProMode","parsedQuery","useParsedQueryString","useCurrency","my","mr","SettingsIcon","padding","mt","textAlign","Trans","i18nKey","components","bold","alink","rel","LiquidityPoolRow","pair","breakpoints","useTheme","daysCurrentYear","getDaysCurrentYear","isMobile","useMediaQuery","down","dayVolumeUSD","oneDayVolumeUSD","oneDayVolumeUntracked","FEEPERCENT","trackReserveUSD","trackedReserveUSD","reserveUSD","apy","isNaN","liquidity","volume","token0","token1","formatCompact","toFixed","React","memo","LiquidityPools","token2","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","toLowerCase","token2Address","allTokenList","ethPrice","useEthPrice","liquidityPairs","slice","whiteListAddressList","item","getTokenPairs","formattedPairs","includes","getBulkPairData","pairData","KeyboardArrowDown","KeyboardArrowUp","Divider","ind","SwapProChart","pairAddress","pairName","pairTokenReversed","src","frameBorder","SwapProChartTrade","showChart","showTrades","transactions","TradesTable","data","Table","fixedHeaderContent","itemContent","index","tx","txType","amount0In","txAmount0","amount0Out","txAmount1","amount1In","amount1Out","token1Amount","token2Amount","txPrice","amountUSD","dayjs","unix","transaction","timestamp","formatNumber","getEtherscanLink","shortenTx","orientation","minSize","Height","extend","utc","SwapInfoTx","txFilter","setTxFilter","subtractTimeAmount","split","subtractTimeType","firstTime","subtract","filteredTxs","filteredBuyTxs","filteredSellTxs","reduce","total","items","label","Skeleton","SwapProInfo","token1Data","setToken1Data","token2Data","setToken2Data","unwrappedToken","currency2","oneDayPrice","getTokenInfo","tokenInfo","TokenInfo","tokenData","priceUpPercent","priceChangeUSD","p","ml","flex","priceUSD","py","px","mb","SwapHoriz","SwapProFilter","infoPos","setInfoPos","setShowChart","setShowTrades","infoPosItems","pos","condition","Checkbox","checked","evt","Replay","SwapPage","isTablet","pairId","useDerivedSwapInfo","wrappedCurrency","minHeight","Grid","container","spacing","xs","sm","md","lg","token"],"mappings":"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","file":"static/js/11.728971ff.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHelpIcon1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Path 11469\",\n    d: \"M10.78-7.061c0-1.268-.918-1.919-2.319-1.919a3.829 3.829 0 0 0-2.353.78l.167 1.068a3.446 3.446 0 0 1 2.069-.8c.767 0 1.2.334 1.2.918 0 .617-.417.968-1.6 1.4l-.334.117.133 1.518.784-.15.067-.734c1.218-.396 2.186-.997 2.186-2.198zm-2 5.306V-3.09H7.493v1.335zM.352-5.192a7.851 7.851 0 0 0 7.992 8.008 7.855 7.855 0 0 0 8.008-8.008 7.831 7.831 0 0 0-8.008-7.992A7.827 7.827 0 0 0 .352-5.192zm1.1 0a6.789 6.789 0 0 1 6.891-6.941 6.789 6.789 0 0 1 6.891 6.941 6.793 6.793 0 0 1-6.89 6.957 6.793 6.793 0 0 1-6.891-6.957z\",\n    transform: \"translate(-.352 13.184)\",\n    style: {\n      fill: \"#636780\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpIcon1);\nexport default __webpack_public_path__ + \"static/media/HelpIcon1.66c8c791.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettingsIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Component 37 \\\\u2013 6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    \"data-name\": \"Rectangle 18293\",\n    width: 40,\n    height: 40,\n    rx: 20,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Settings 2\",\n    d: \"M20 11.823V8.177c-1.79-.638-2.272-.668-2.522-1.274s.069-.974.882-2.686L15.782 1.64c-1.688.8-2.073 1.137-2.687.883S12.456 1.782 11.823 0H8.177C7.541 1.787 7.511 2.271 6.9 2.522c-.627.261-1-.083-2.686-.883L1.64 4.217c.814 1.713 1.135 2.078.882 2.683S1.788 7.541 0 8.177v3.646c1.783.633 2.271.667 2.523 1.273s-.068.972-.883 2.686l2.577 2.578c1.666-.792 2.058-1.144 2.686-.882.607.252.637.733 1.274 2.522h3.645c.632-1.776.666-2.269 1.281-2.526s.988.083 2.679.885l2.578-2.578c-.812-1.708-1.135-2.077-.882-2.686s.733-.635 2.522-1.272zm-4.062.637a3.3 3.3 0 0 0 .407 2.982l-.9.9a3.288 3.288 0 0 0-2.978-.408 3.309 3.309 0 0 0-1.823 2.4H9.362a3.3 3.3 0 0 0-1.819-2.4 3.307 3.307 0 0 0-2.983.407l-.9-.9a3.3 3.3 0 0 0 .406-2.983 3.307 3.307 0 0 0-2.4-1.818V9.362a3.3 3.3 0 0 0 2.4-1.82 3.3 3.3 0 0 0-.407-2.983l.9-.9a3.3 3.3 0 0 0 2.983.407 3.3 3.3 0 0 0 1.819-2.4h1.279a3.3 3.3 0 0 0 1.82 2.4 3.308 3.308 0 0 0 2.983-.407l.9.9a3.307 3.307 0 0 0-.407 2.983 3.3 3.3 0 0 0 2.4 1.819v1.279a3.3 3.3 0 0 0-2.4 1.819zM10 7.5A2.5 2.5 0 1 1 7.5 10 2.5 2.5 0 0 1 10 7.5zm0-1.667A4.167 4.167 0 1 0 14.167 10 4.166 4.166 0 0 0 10 5.833z\",\n    transform: \"translate(10 10)\",\n    style: {\n      fill: \"#696c80\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettingsIcon);\nexport default __webpack_public_path__ + \"static/media/SettingsIcon.5b7ed28d.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, IconButton, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Trade } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput, ToggleSwitch } from 'components';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Field,\n  setAllowLimitPrice,\n  setInvertLimitPriceValue,\n  setPrice,\n} from 'state/twap/actions';\nimport {\n  tryParseAmount,\n  useDerivedTwapInfo,\n  useTwapState,\n} from 'state/twap/hooks';\nimport InfoTooltip from './InfoTooltip';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { useTranslation } from 'react-i18next';\n\nfunction LimitPriceInput() {\n  const { currencies, marketPrice } = useDerivedTwapInfo();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n  const invertLimitPriceValue = useTwapState().invertLimitPriceValue;\n  const price = useTwapState().price;\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const onChange = (value: string) => {\n    const currency = currencies[Field.INPUT];\n    if (currency) {\n      dispatch(\n        setPrice({\n          price: value,\n          formattedPrice: value ? tryParseAmount(value, currency) : undefined,\n        }),\n      );\n    }\n  };\n\n  const onToggle = () => {\n    dispatch(setAllowLimitPrice(!allowLimitPrice));\n    if (invertLimitPriceValue) {\n      dispatch(setInvertLimitPriceValue(false));\n      onChange('');\n    } else {\n      onChange(marketPrice?.invert().toSignificant(6) || '');\n    }\n  };\n\n  const toggleInvert = () => {\n    dispatch(setInvertLimitPriceValue(!invertLimitPriceValue));\n  };\n\n  const currenciesMemoized = useMemo(() => {\n    if (!invertLimitPriceValue) {\n      return {\n        inputCurrency: currencies[Field.INPUT],\n        outputCurrency: currencies[Field.OUTPUT],\n      };\n    }\n    return {\n      inputCurrency: currencies[Field.OUTPUT],\n      outputCurrency: currencies[Field.INPUT],\n    };\n  }, [currencies, invertLimitPriceValue]);\n\n  const { inputCurrency, outputCurrency } = currenciesMemoized;\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <StyledTitle>\n          <ToggleSwitch toggled={!!allowLimitPrice} onToggle={onToggle} />\n          <InfoTooltip\n            text={allowLimitPrice ? t('limitPriceOn') : t('limitPriceOff')}\n          >\n            <Typography>Limit Price</Typography>\n          </InfoTooltip>\n        </StyledTitle>\n        {!allowLimitPrice && <Typography>None</Typography>}\n      </StyledTop>\n      {allowLimitPrice && (\n        <StyledInputContainer>\n          <StyledCurrencyDetails style={{ marginRight: 5 }}>\n            <CurrencyLogo currency={inputCurrency} size={'28px'} />\n            <Typography>1</Typography>\n            <Typography>{inputCurrency?.symbol}</Typography>\n          </StyledCurrencyDetails>{' '}\n          <Typography>=</Typography>\n          <NumericalInput\n            disabled={!allowLimitPrice}\n            value={price || ''}\n            align='center'\n            placeholder={allowLimitPrice ? '0.00' : 'None'}\n            onUserInput={(val) => {\n              onChange(val);\n            }}\n          />\n          <StyledCurrencyDetails>\n            <Typography>{outputCurrency?.symbol}</Typography>\n            <CurrencyLogo currency={outputCurrency} size={'28px'} />\n          </StyledCurrencyDetails>\n          <IconButton onClick={toggleInvert} style={{ marginLeft: 10 }}>\n            <PriceExchangeIcon />\n          </IconButton>\n        </StyledInputContainer>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default LimitPriceInput;\n\nconst StyledInputContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  marginLeft: 'auto',\n  '& .styledInput': {\n    width: 150,\n    borderBottom: '1px solid white',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n});\n\nconst StyledCurrencyDetails = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n});\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 20,\n});\n\nconst StyledTitle = styled(Box)({\n  marginRight: 10,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 15,\n});\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, MenuItem, Select, Theme, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { NumericalInput } from 'components';\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { TimeSelectFormat, TwapTimeSelect } from 'state/twap/reducer';\nimport InfoTooltip from './InfoTooltip';\nimport {\n  getFormatTypeFromMilliseconds,\n  millisecondsToTime,\n  timeToMilliseconds,\n} from './utils';\n\ninterface Props {\n  selected: TwapTimeSelect;\n  title: string;\n  disabled?: boolean;\n  tooltip: string | ReactNode;\n\n  onUpdate: ({\n    type,\n    displayValue,\n    milliseconds,\n  }: {\n    type: TimeSelectFormat;\n    displayValue?: string;\n    milliseconds?: number;\n  }) => void;\n}\n\nfunction TimeSelect({ selected, title, onUpdate, disabled, tooltip }: Props) {\n  const onChange = (value: string) => {\n    const milliseconds = timeToMilliseconds(selected.type, value) || 0;\n    let displayValue = value;\n\n    if (!milliseconds) {\n      onUpdate({\n        type: selected.type,\n        displayValue,\n        milliseconds,\n      });\n      return;\n    }\n\n    const format = getFormatTypeFromMilliseconds(milliseconds || 0);\n\n    if (format !== selected.type) {\n      displayValue = millisecondsToTime(format, milliseconds) || '';\n      console.log(displayValue, milliseconds);\n    }\n    onUpdate({\n      type: format,\n      displayValue,\n      milliseconds,\n    });\n  };\n\n  const onSelect = (event: any) => {\n    onUpdate({\n      type: event.target.value,\n    });\n  };\n  return (\n    <>\n      <InfoTooltip text={tooltip}>\n        <StyledTitle style={{ margin: 0 }}>{title}</StyledTitle>\n      </InfoTooltip>\n\n      <StyledRight>\n        <NumericalInput\n          disabled={disabled}\n          value={selected.displayValue || ''}\n          align='right'\n          placeholder='0'\n          onUserInput={(val) => {\n            if (val !== '0' && val !== '.') {\n              onChange(val);\n            }\n          }}\n        />\n        <StyledSelect\n          disabled={disabled}\n          value={selected.type}\n          onChange={onSelect}\n          color='primary'\n          style={{\n            opacity: disabled ? 0.7 : 1,\n          }}\n        >\n          <MenuItem value={TimeSelectFormat.DAYS}>Days</MenuItem>\n          <MenuItem value={TimeSelectFormat.HOURS}>Hours</MenuItem>\n          <MenuItem value={TimeSelectFormat.MINUTES}>Minutes</MenuItem>\n        </StyledSelect>\n      </StyledRight>\n    </>\n  );\n}\n\nexport default TimeSelect;\n\nconst StyledSelect = styled(Select)(({ theme }: { theme: Theme }) => ({\n  color: 'white!important',\n  '&:before': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '&:after': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '& svg': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst StyledRight = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  gap: 20,\n  '& .styledInput': {},\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n","import { Box, styled } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\n\nfunction Duration() {\n  const { onDuration } = useTwapActionHandlers();\n  const duration = useTwapState().duration;\n  const { t } = useTranslation();\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <TimeSelect\n        onUpdate={onDuration}\n        selected={duration}\n        title='Duration'\n        tooltip={t('durationInput')}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, IconButton, styled, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { useDispatch } from 'react-redux';\nimport { setSelfEdit } from 'state/twap/actions';\nimport { usePartialFillWarning } from './useValidation';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { useTranslation } from 'react-i18next';\nimport { getFormatTypeFromMilliseconds, millisecondsToTime } from './utils';\nfunction Duration() {\n  const { onInterval } = useTwapActionHandlers();\n  const interval = useTwapState().interval;\n  const duration = useTwapState().duration;\n\n  const selfEdit = useTwapState().selfEdit;\n  const { t } = useTranslation();\n\n  const partialFillWarning = usePartialFillWarning();\n\n  const dispatch = useDispatch();\n\n  const onEdit = () => {\n    dispatch(setSelfEdit(true));\n  };\n\n  useEffect(() => {\n    if (\n      duration.milliseconds &&\n      interval.milliseconds &&\n      interval.milliseconds > duration.milliseconds\n    ) {\n      const type = getFormatTypeFromMilliseconds(duration.milliseconds);\n      onInterval({\n        milliseconds: duration.milliseconds,\n        type,\n        displayValue: millisecondsToTime(type, duration.milliseconds),\n      });\n    }\n  }, [interval, duration, onInterval]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledCard>\n        <TimeSelect\n          tooltip={t('tradeInterval')}\n          disabled={!selfEdit}\n          onUpdate={onInterval}\n          selected={interval}\n          title='Trade Interval'\n        />\n        {!selfEdit && (\n          <IconButton onClick={onEdit}>\n            <EditOutlinedIcon color='primary' />\n          </IconButton>\n        )}\n      </StyledCard>\n      {partialFillWarning && (\n        <StyledWarning>\n          <ErrorOutlineIcon color='error' />\n          <Typography color='error'>Partial fill warning</Typography>\n        </StyledWarning>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst StyledContainer = styled(Box)({});\n\nconst StyledWarning = styled(Box)({\n  marginTop: 15,\n  fontWeight: 500,\n  display: 'flex',\n  gap: 10,\n  opacity: 0.7,\n});\n","import React, { useMemo } from 'react';\nimport { useTwapState } from 'state/twap/hooks';\n\nexport const useInputsValidation = (): string | undefined => {\n  const { duration, interval, totalChunks } = useTwapState();\n\n  return useMemo(() => {\n    if (!duration.milliseconds) {\n      return 'Fill duration';\n    }\n    if (!totalChunks) {\n      return 'Missing Trades';\n    }\n    if (!interval.milliseconds) {\n      return 'Fill Interval';\n    }\n\n    return undefined;\n  }, [duration, interval, totalChunks]);\n};\n\nexport const usePartialFillWarning = (): boolean => {\n  const { duration, interval, totalChunks } = useTwapState();\n\n  return useMemo(() => {\n    if (\n      interval.milliseconds &&\n      duration.milliseconds &&\n      totalChunks &&\n      interval.milliseconds * Number(totalChunks) > duration.milliseconds\n    ) {\n      return true;\n    }\n    return false;\n  }, [interval, duration, totalChunks]);\n};\n","import { Avatar, Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Currency } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput } from 'components';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { invalidChunkSize } from 'state/twap/utils';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport InfoTooltip from './InfoTooltip';\n\ninterface Props {\n  currency: Currency | undefined;\n}\n\nfunction ChunkSize({ currency }: Props) {\n  const { totalChunks, chunkSize } = useTwapState();\n  const { parsedAmount } = useDerivedTwapInfo();\n  const { onChunkSize } = useTwapActionHandlers();\n  const { t } = useTranslation();\n  const usdPrice = Number(useUSDCPrice(currency)?.toSignificant() ?? 0);\n\n  const onChange = (value: string) => {\n    onChunkSize(value);\n  };\n\n  useEffect(() => {\n    if (\n      parsedAmount &&\n      invalidChunkSize(parsedAmount, chunkSize) &&\n      chunkSize !== parsedAmount.toExact()\n    ) {\n      onChunkSize(parsedAmount.toExact());\n    }\n  }, [parsedAmount, chunkSize, onChunkSize]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <InfoTooltip text={t('tradeSizeInput')}>\n          <StyledTitle style={{ margin: 0 }}>Trade Size</StyledTitle>\n        </InfoTooltip>\n        <NumericalInput\n          value={chunkSize || ''}\n          align='right'\n          placeholder='0.00'\n          onUserInput={(val) => {\n            onChange(val);\n          }}\n        />\n        {currency && (\n          <StyledCurrency style={{ marginBottom: 0 }}>\n            <CurrencyLogo currency={currency} size={'24px'} />\n            {currency?.symbol}\n          </StyledCurrency>\n        )}\n      </StyledTop>\n      <StyledBottom>\n        <small className='text-secondary'>\n          Total trades: {totalChunks?.toString() ?? 0}\n        </small>\n        <small className='text-secondary'>\n          ${chunkSize ? (usdPrice * Number(chunkSize)).toLocaleString() : '0'}\n        </small>\n      </StyledBottom>\n    </StyledContainer>\n  );\n}\n\nexport default ChunkSize;\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n});\n\nconst StyledBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 10,\n});\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n\nconst StyledCurrency = styled(Typography)({\n  marginLeft: 20,\n  display: 'flex',\n  gap: 10,\n});\n","import { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport { setError } from 'state/twap/actions';\nimport { useTwapState } from 'state/twap/hooks';\nimport React from 'react';\n\nfunction ErrorNotification() {\n  const { error } = useTwapState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setTimeout(() => {\n      dispatch(setError(undefined));\n    }, 400);\n  };\n\n  return (\n    <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity='error' variant='filled'>\n        {error}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport default ErrorNotification;\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Contract } from '@ethersproject/contracts';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport {\n  CurrencyAmount,\n  JSBI,\n  Percent,\n  Router,\n  SwapParameters,\n  Trade,\n  TradeType,\n} from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { GlobalConst } from 'constants/index';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport {\n  calculateGasMargin,\n  isZero,\n  isAddress,\n  shortenAddress,\n  formatTokenAmount,\n} from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { useRouterContract } from 'hooks/useContract';\nimport useENS from 'hooks/useENS';\nimport { Version } from 'hooks/useToggledVersion';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract;\n  parameters: SwapParameters;\n}\n\ninterface SuccessfulCall {\n  call: SwapCall;\n  gasEstimate: BigNumber;\n}\n\ninterface FailedCall {\n  call: SwapCall;\n  error: Error;\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall;\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useTwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = GlobalConst.utils.INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React();\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\n  const recipient =\n    recipientAddressOrName === null ? account : recipientAddress;\n  const deadline = useTransactionDeadline();\n  const contract = useRouterContract();\n\n  return useMemo(() => {\n    const tradeVersion = Version.v2;\n    if (\n      !trade ||\n      !recipient ||\n      !library ||\n      !account ||\n      !tradeVersion ||\n      !chainId\n    )\n      return [];\n\n    if (!contract) {\n      return [];\n    }\n\n    const swapMethods = [];\n\n    switch (tradeVersion) {\n      case Version.v2:\n        swapMethods.push(\n          Router.swapCallParameters(trade, {\n            feeOnTransfer: false,\n            allowedSlippage: new Percent(\n              JSBI.BigInt(allowedSlippage),\n              GlobalConst.utils.BIPS_BASE,\n            ),\n            recipient,\n            ttl: deadline\n              ? deadline.toNumber()\n              : GlobalConst.utils.DEFAULT_DEADLINE_FROM_NOW,\n          }),\n        );\n\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\n          swapMethods.push(\n            Router.swapCallParameters(trade, {\n              feeOnTransfer: true,\n              allowedSlippage: new Percent(\n                JSBI.BigInt(allowedSlippage),\n                GlobalConst.utils.BIPS_BASE,\n              ),\n              recipient,\n              ttl: deadline\n                ? deadline.toNumber()\n                : GlobalConst.utils.DEFAULT_DEADLINE_FROM_NOW,\n            }),\n          );\n        }\n        break;\n    }\n    return swapMethods.map((parameters) => ({ parameters, contract }));\n  }, [\n    account,\n    allowedSlippage,\n    chainId,\n    deadline,\n    library,\n    recipient,\n    trade,\n    contract,\n  ]);\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useTwapCallback(\n  { input, output }: { input?: CurrencyAmount; output?: CurrencyAmount }, // trade to execute, required\n  allowedSlippage: number = GlobalConst.utils.INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): {\n  state: SwapCallbackState;\n  callback:\n    | null\n    | (() => Promise<{ response: TransactionResponse; summary: string }>);\n  error: string | null;\n} {\n  const { account, chainId, library } = useActiveWeb3React();\n\n  const swapCalls = useTwapCallArguments(\n    undefined,\n    allowedSlippage,\n    recipientAddressOrName,\n  );\n\n  const addTransaction = useTransactionAdder();\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\n  const recipient =\n    recipientAddressOrName === null ? account : recipientAddress;\n\n  return useMemo(() => {\n    if (!library || !account || !chainId) {\n      return {\n        state: SwapCallbackState.INVALID,\n        callback: null,\n        error: 'Missing dependencies',\n      };\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return {\n          state: SwapCallbackState.INVALID,\n          callback: null,\n          error: 'Invalid recipient',\n        };\n      } else {\n        return {\n          state: SwapCallbackState.LOADING,\n          callback: null,\n          error: null,\n        };\n      }\n    }\n\n    const tradeVersion = Version.v2;\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<{\n        response: TransactionResponse;\n        summary: string;\n      }> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call;\n            const options = !value || isZero(value) ? {} : { value };\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate: gasEstimate.add(100000),\n                };\n              })\n              .catch((gasError) => {\n                console.debug(\n                  'Gas estimate failed, trying eth_call to extract error',\n                  call,\n                );\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.debug(\n                      'Unexpected successful call after failed estimate gas',\n                      call,\n                      gasError,\n                      result,\n                    );\n                    return {\n                      call,\n                      error: new Error(\n                        'Unexpected issue with estimating the gas. Please try again.',\n                      ),\n                    };\n                  })\n                  .catch((callError) => {\n                    console.debug('Call threw error', call, callError);\n                    let errorMessage: string;\n                    switch (callError.reason) {\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                        errorMessage =\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.';\n                        break;\n                      default:\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`;\n                    }\n                    return { call, error: new Error(errorMessage) };\n                  });\n              });\n          }),\n        );\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el &&\n            (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        );\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter(\n            (call): call is FailedCall => 'error' in call,\n          );\n          if (errorCalls.length > 0)\n            throw errorCalls[errorCalls.length - 1].error;\n          throw new Error(\n            'Unexpected error. Please contact support: none of the calls threw an error',\n          );\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation;\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value)\n            ? { value, from: account }\n            : { from: account }),\n        })\n          .then((response: TransactionResponse) => {\n            const inputSymbol = input?.currency.symbol;\n            const outputSymbol = output?.currency.symbol;\n            const inputAmount = formatTokenAmount(input);\n            const outputAmount = formatTokenAmount(output);\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`;\n\n            const withVersion =\n              tradeVersion === Version.v2\n                ? withRecipient\n                : `${withRecipient} on ${(tradeVersion as any).toUpperCase()}`;\n\n            addTransaction(response, {\n              summary: withVersion,\n            });\n\n            return { response, summary: withVersion };\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.');\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value);\n              throw new Error(`Swap failed: ${error.message}`);\n            }\n          });\n      },\n      error: null,\n    };\n  }, [\n    library,\n    account,\n    chainId,\n    recipient,\n    recipientAddressOrName,\n    swapCalls,\n    addTransaction,\n    input,\n    output,\n  ]);\n}\n","import { Box, styled, Typography } from '@material-ui/core';\nimport { CurrencyAmount } from '@uniswap/sdk';\nimport { CustomTooltip } from 'components';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTwapState } from 'state/twap/hooks';\nimport { formatTokenAmount } from 'utils';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { useTranslation } from 'react-i18next';\nconst calculateInterval = (value?: number) => {\n  if (!value) {\n    return '0';\n  }\n  const time = moment.duration(value);\n  const days = time.days();\n  const hours = time.hours();\n  const minutes = time.minutes();\n\n  let str = '';\n\n  if (days) {\n    str += `${days} Days `;\n  }\n  if (hours) {\n    str += `${hours} Hours `;\n  }\n  if (minutes) {\n    str += `${minutes} Minutes`;\n  }\n  return str;\n};\n\ninterface Props {\n  outputAmount: CurrencyAmount;\n  limitOrderAllowed?: boolean;\n}\n\nfunction TxDetails({ outputAmount, limitOrderAllowed }: Props) {\n  const { duration, totalChunks, interval } = useTwapState();\n  const { t } = useTranslation();\n\n  return (\n    <StyledDetails className='swapBox bg-secondary2'>\n      <Row\n        title='Expiration date:'\n        value={moment()\n          .add(duration.milliseconds, 'milliseconds')\n          .format('DD/MM/YYYY HH:mm')}\n        tooltip={t('confirmationModal.expiration')}\n      />\n      <Row\n        title='Minimum Received Per Trade:'\n        value={limitOrderAllowed ? formatTokenAmount(outputAmount) : 'None'}\n        tooltip={\n          limitOrderAllowed\n            ? t('minimumReceivedWithLimit')\n            : t('minimumReceivedNoLimit')\n        }\n      />\n\n      <Row\n        title='Total Trades:'\n        value={totalChunks || 0}\n        tooltip={t('totalTrades')}\n      />\n      <Row\n        title='Trade Interval:'\n        value={calculateInterval(interval.milliseconds)}\n        tooltip={t('tradeInterval')}\n      />\n    </StyledDetails>\n  );\n}\n\nexport default TxDetails;\n\nconst StyledDetails = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n  '& p': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: 10,\n    fontSize: 14,\n    '& span': {\n      fontWeight: 600,\n    },\n  },\n});\n\ntype RowProps = {\n  title: string;\n  value: string | number;\n  tooltip?: string;\n};\n\nconst Row = ({ title, value, tooltip }: RowProps) => {\n  return (\n    <StyledRow>\n      {tooltip ? (\n        <CustomTooltip title={tooltip} placement='right'>\n          <Typography>\n            {title} <HelpOutlineIcon style={{ width: 15 }} />\n          </Typography>\n        </CustomTooltip>\n      ) : (\n        <Typography>{title}</Typography>\n      )}\n      <Typography>\n        <span>{value}</span>\n      </Typography>\n    </StyledRow>\n  );\n};\n\nconst StyledRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useTwapState } from 'state/twap/hooks';\n\nfunction Disclaimer() {\n  const { t } = useTranslation();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n\n  return (\n    <StyledContainer className='swapBox bg-secondary2'>\n      <Typography>{t('confirmationModal.disclaimer.p1')}</Typography>\n      {allowLimitPrice ? (\n        <Typography>\n          {t('confirmationModal.disclaimer.p2LimitOrderSelected')}\n        </Typography>\n      ) : (\n        <Typography>\n          {t('confirmationModal.disclaimer.p2LimitOrderNotSelected')}\n        </Typography>\n      )}\n      <Typography>{t('confirmationModal.disclaimer.p3')}</Typography>\n      <Typography>{t('confirmationModal.disclaimer.p4')}</Typography>\n      <Typography>{t('confirmationModal.disclaimer.p5')}</Typography>\n      <Typography>\n        {t('confirmationModal.disclaimer.p6', {\n          link: <a href='/test'>test</a>,\n        })}\n      </Typography>\n      <Typography>{t('confirmationModal.disclaimer.p7')}</Typography>\n    </StyledContainer>\n  );\n}\n\nexport default Disclaimer;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 15,\n  '& h2': {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n});\n","import React, { ReactNode, useState } from 'react';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { Box } from '@material-ui/core';\nimport { Fraction, Price, Trade } from '@uniswap/sdk';\nimport { Field } from 'state/twap/actions';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport { useTranslation } from 'react-i18next';\nimport InfoTooltip from './InfoTooltip';\n\ninterface Props {\n  executionPrice?: Fraction;\n  title?: string;\n  customText?: string;\n  tooltip?: string | ReactNode;\n}\n\nfunction PriceIndication({\n  executionPrice,\n  title,\n  customText,\n  tooltip,\n}: Props) {\n  const [mainPrice, setMainPrice] = useState(false);\n  const { currencies } = useDerivedTwapInfo();\n\n  return (\n    <Box className='swapPrice'>\n      {tooltip ? (\n        <InfoTooltip text={tooltip}>\n          <small>{title}:</small>\n        </InfoTooltip>\n      ) : (\n        <small>{title}</small>\n      )}\n      {customText ? (\n        <small>{customText}</small>\n      ) : (\n        <>\n          <small>\n            1{' '}\n            {\n              (mainPrice ? currencies[Field.INPUT] : currencies[Field.OUTPUT])\n                ?.symbol\n            }{' '}\n            ={' '}\n            {executionPrice ? (\n              <>\n                {(mainPrice\n                  ? executionPrice.invert()\n                  : executionPrice\n                ).toSignificant(6)}{' '}\n                {\n                  (mainPrice\n                    ? currencies[Field.OUTPUT]\n                    : currencies[Field.INPUT]\n                  )?.symbol\n                }{' '}\n              </>\n            ) : (\n              'Market price '\n            )}\n            <PriceExchangeIcon\n              onClick={() => {\n                setMainPrice(!mainPrice);\n              }}\n            />\n          </small>\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default PriceIndication;\n","import { CurrencyAmount, Trade } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box, Button, styled, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { getTokenValue } from 'state/twap/utils';\nimport TxDetails from './TxDetails';\nimport Disclaimer from './Disclaimer';\nimport InfoTooltip from '../InfoTooltip';\nimport PriceIndication from '../PriceIndication';\n\ninterface ModalContentProps {\n  onConfirm: () => void;\n}\n\nconst ModalContent: React.FC<ModalContentProps> = ({ onConfirm }) => {\n  const { t } = useTranslation();\n  const {\n    typedPriceOutputValue,\n    parsedAmount,\n    marketPrice,\n  } = useDerivedTwapInfo();\n  const { allowLimitPrice, priceAsCurrencyAmount } = useTwapState();\n\n  return (\n    <StyledContainer>\n      <StyledCards>\n        {parsedAmount && <Card currencyAmount={parsedAmount} title='From' />}\n        {typedPriceOutputValue && (\n          <Card\n            tooltip={t('confirmationModalToInputTooltip')}\n            currencyAmount={typedPriceOutputValue}\n            title='To'\n          />\n        )}\n      </StyledCards>\n      {allowLimitPrice ? (\n        <PriceIndication\n          tooltip={t('confirmationModalLimitOrderTooltip')}\n          executionPrice={priceAsCurrencyAmount}\n          title='Limit Price'\n        />\n      ) : (\n        <PriceIndication\n          tooltip={t('confirmationModalLimitOrderTooltip')}\n          executionPrice={marketPrice}\n          title='Limit Price'\n          customText='None'\n        />\n      )}\n      {typedPriceOutputValue && (\n        <TxDetails\n          outputAmount={typedPriceOutputValue}\n          limitOrderAllowed={allowLimitPrice}\n        />\n      )}\n      <Disclaimer />\n      <Box className='transactionText'>\n        <Button onClick={onConfirm} className='swapButton'>\n          Confirm Order\n        </Button>\n      </Box>\n    </StyledContainer>\n  );\n};\n\nexport default ModalContent;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCards = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\ntype CardProps = {\n  currencyAmount: CurrencyAmount;\n  title: string;\n  tooltip?: string;\n};\n\nconst Card = ({ currencyAmount, title, tooltip }: CardProps) => {\n  const usdPrice = useUSDCPrice(currencyAmount.currency);\n\n  return (\n    <StyledCard className='swapBox bg-secondary2'>\n      <StyledCardTop>\n        {tooltip ? (\n          <InfoTooltip text={tooltip}>\n            <Typography>{title}</Typography>\n          </InfoTooltip>\n        ) : (\n          <Typography>{title}</Typography>\n        )}\n        <Typography>\n          ~$\n          {usdPrice && getTokenValue(usdPrice, currencyAmount)}\n        </Typography>\n      </StyledCardTop>\n      <StyledCardBottom>\n        <StyledCurrency>\n          <CurrencyLogo currency={currencyAmount.currency} size={'24px'} />\n          <Typography>{currencyAmount.currency?.symbol}</Typography>\n        </StyledCurrency>\n        <Typography>{formatTokenAmount(currencyAmount)}</Typography>\n      </StyledCardBottom>\n    </StyledCard>\n  );\n};\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCardBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 18,\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n\nconst StyledCardTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  width: '100%',\n});\n","import { currencyEquals, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  TransactionConfirmationModal,\n  TransactionErrorContent,\n  ConfirmationModalContent,\n} from 'components';\nimport { formatTokenAmount } from 'utils';\nimport 'components/styles/ConfirmSwapModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport ModalContent from './ModalContent';\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(\n      tradeA.outputAmount.currency,\n      tradeB.outputAmount.currency,\n    ) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  );\n}\n\ninterface ConfirmTwapModalProps {\n  isOpen: boolean;\n  originalTrade: Trade | undefined;\n  attemptingTxn: boolean;\n  txPending?: boolean;\n  txHash: string | undefined;\n  recipient: string | null;\n  allowedSlippage: number;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n  swapErrorMessage: string | undefined;\n  onDismiss: () => void;\n}\n\nconst ConfirmTwapModal: React.FC<ConfirmTwapModalProps> = ({\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  txPending,\n}) => {\n  const { t } = useTranslation();\n\n  const modalContent = useCallback(() => {\n    return <ModalContent onConfirm={onConfirm} />;\n  }, [onConfirm]);\n\n  // text to show while loading\n  const pendingText = '';\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <ConfirmationModalContent\n          title={t('confirmTx')}\n          onDismiss={onDismiss}\n          content={modalContent}\n        />\n      ),\n    [t, onDismiss, modalContent, swapErrorMessage],\n  );\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      txPending={txPending}\n      content={confirmationContent}\n      pendingText={pendingText}\n      modalContent={txPending ? t('submittedTxSwap') : t('swapSuccess')}\n    />\n  );\n};\n\nexport default ConfirmTwapModal;\n","import { Currency, ETHER, WETH } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useCurrencyBalance } from 'state/wallet/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { formatTokenAmount } from 'utils';\nimport { useWETHContract } from 'hooks/useContract';\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE };\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useTwapWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): {\n  wrapType: WrapType;\n  execute?: undefined | (() => Promise<void>);\n  inputError?: string;\n} {\n  const { chainId, account } = useActiveWeb3React();\n  const wethContract = useWETHContract();\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency);\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [\n    inputCurrency,\n    typedValue,\n  ]);\n  const addTransaction = useTransactionAdder();\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) {\n      return NOT_APPLICABLE;\n    }\n\n    const sufficientBalance =\n      inputAmount && balance && !balance.lessThan(inputAmount);\n\n    if (inputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  });\n\n                  addTransaction(txReceipt, {\n                    summary: `Wrap ${formatTokenAmount(\n                      inputAmount,\n                    )} MATIC to WMATIC`,\n                  });\n                  await txReceipt.wait();\n                } catch (error) {\n                  console.error('Could not deposit', error);\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient ETH balance',\n      };\n    } else {\n      return NOT_APPLICABLE;\n    }\n  }, [\n    wethContract,\n    chainId,\n    inputCurrency,\n    outputCurrency,\n    inputAmount,\n    balance,\n    addTransaction,\n  ]);\n}\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { Currency, CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk';\nimport { Box, Button, CircularProgress, styled } from '@material-ui/core';\nimport { useWalletModalToggle } from 'state/application/hooks';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useAllTokens, useToken } from 'hooks/Tokens';\nimport { CurrencyInput } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport {\n  ApprovalState,\n  useApproveCallbackFromTrade,\n} from 'hooks/useApproveCallback';\nimport { useTransactionFinalizer } from 'state/transactions/hooks';\nimport { addMaticToMetamask, isSupportedNetwork, maxAmountSpend } from 'utils';\nimport { ReactComponent as ExchangeIcon } from 'assets/images/ExchangeIcon.svg';\nimport 'components/styles/Swap.scss';\nimport { useTranslation } from 'react-i18next';\nimport LimitPriceInput from './LimitPriceInput';\nimport Duration from './Duration';\nimport Interval from './Interval';\nimport ChunkSize from './ChunkSize';\nimport ErrorNotification from './ErrorNotification';\nimport { useTwapCallback } from './useTwapCallback';\nimport ConfirmTwapModal from './ConfirmTwapModal';\nimport PriceIndication from './PriceIndication';\nimport { parseUnits } from 'ethers/lib/utils';\nimport useTwapWrapCallback, { WrapType } from './useWrapCallback';\nimport { useInputsValidation } from './useValidation';\n\nconst Twap: React.FC<{\n  currency0?: Currency;\n  currency1?: Currency;\n  currencyBgClass?: string;\n}> = ({ currency0, currency1, currencyBgClass }) => {\n  const { t } = useTranslation();\n  const { account } = useActiveWeb3React();\n  const { typedValue, recipient, allowLimitPrice } = useTwapState();\n  const {\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    typedPriceOutputValue,\n    marketPrice,\n  } = useDerivedTwapInfo();\n\n  const finalizedTransaction = useTransactionFinalizer();\n  const [wrapLoading, setWrapLoading] = useState(false);\n\n  const allTokens = useAllTokens();\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useTwapWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue,\n  );\n\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n  } = useTwapActionHandlers();\n  const searchToken = useToken('0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270');\n\n  const handleCurrencySelect = useCallback(\n    (inputCurrency) => {\n      console.log({ inputCurrency });\n\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection],\n  );\n\n  const onWrapHandler = async () => {\n    if (!onWrap) {\n      return;\n    }\n    try {\n      setWrapLoading(true);\n      await onWrap();\n      handleCurrencySelect(searchToken);\n    } catch (error) {\n    } finally {\n      setWrapLoading(false);\n    }\n  };\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const [approving, setApproving] = useState(false);\n  const [approval, approveCallback] = useApproveCallbackFromTrade();\n\n  const inputsError = useInputsValidation();\n\n  const parsedAmounts = useMemo(() => {\n    return {\n      [Field.INPUT]: parsedAmount,\n      [Field.OUTPUT]: typedPriceOutputValue,\n    };\n  }, [parsedAmount, typedPriceOutputValue]);\n\n  const formattedAmounts = useMemo(() => {\n    return {\n      [Field.INPUT]: typedValue || '',\n      [Field.OUTPUT]: typedPriceOutputValue?.toSignificant(6) || '',\n    };\n  }, [typedValue, typedPriceOutputValue]);\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] &&\n      currencyBalances[Field.INPUT] &&\n      currencyBalances[Field.INPUT]?.toExact() &&\n      typedValue &&\n      parseUnits(typedValue, parsedAmounts[Field.INPUT]?.currency.decimals).gt(\n        parseUnits(\n          currencyBalances[Field.INPUT]?.toExact() || '0',\n          parsedAmounts[Field.INPUT]?.currency.decimals,\n        ),\n      ),\n  );\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n  const { ethereum } = window as any;\n  const isValid = !swapInputError;\n\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED));\n\n  const toggleWalletModal = useWalletModalToggle();\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const connectWallet = () => {\n    if (ethereum && !isSupportedNetwork(ethereum)) {\n      addMaticToMetamask();\n    } else {\n      toggleWalletModal();\n    }\n  };\n\n  const handleOtherCurrencySelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection],\n  );\n\n  const { callback: twapCallback, error: twapCallbackError } = useTwapCallback(\n    { input: parsedAmount, output: typedPriceOutputValue },\n    allowedSlippage,\n    recipient,\n  );\n\n  console.log(inputsError);\n\n  const swapButtonText = useMemo(() => {\n    if (account) {\n      if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n        return t('selectToken');\n      } else if (\n        formattedAmounts[Field.INPUT] === '' &&\n        formattedAmounts[Field.OUTPUT] === ''\n      ) {\n        return t('enterAmount');\n      } else if (showWrap) {\n        return wrapType === WrapType.WRAP\n          ? t('wrap')\n          : wrapType === WrapType.UNWRAP\n          ? t('unWrap')\n          : '';\n      } else if (userHasSpecifiedInputOutput) {\n        return t('insufficientLiquidityTrade');\n      } else if (inputsError) {\n        return inputsError;\n      } else {\n        return swapInputError ?? 'Place order';\n      }\n    } else {\n      return ethereum && !isSupportedNetwork(ethereum)\n        ? t('switchPolygon')\n        : t('connectWallet');\n    }\n  }, [\n    t,\n    formattedAmounts,\n    currencies,\n    account,\n    ethereum,\n    userHasSpecifiedInputOutput,\n    showWrap,\n    wrapType,\n    swapInputError,\n    inputsError,\n  ]);\n\n  const twapButtonDisabled = useMemo(() => {\n    if (account) {\n      if (showWrap) {\n        return Boolean(wrapInputError);\n      } else if (userHasSpecifiedInputOutput) {\n        return true;\n      } else if (showApproveFlow) {\n        return !isValid || approval !== ApprovalState.APPROVED;\n      } else if (inputsError) {\n        return Boolean(inputsError);\n      } else {\n        return !isValid || !!twapCallbackError;\n      }\n    } else {\n      return false;\n    }\n  }, [\n    account,\n    showWrap,\n    wrapInputError,\n    userHasSpecifiedInputOutput,\n    showApproveFlow,\n    approval,\n    isValid,\n    twapCallbackError,\n    inputsError,\n  ]);\n\n  const [\n    {\n      showConfirm,\n      txPending,\n      tradeToConfirm,\n      swapErrorMessage,\n      attemptingTxn,\n      txHash,\n    },\n    setTwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    txPending?: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    txPending: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(value);\n    },\n    [onUserInput],\n  );\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(\n    currencyBalances[Field.INPUT],\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleHalfInput = useCallback(() => {\n    maxAmountInput &&\n      onUserInput((Number(maxAmountInput.toExact()) / 2).toString());\n  }, [maxAmountInput, onUserInput]);\n\n  const atMaxAmountInput = Boolean(\n    maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput),\n  );\n\n  const onSwap = () => {\n    if (showWrap) {\n      onWrapHandler();\n    } else {\n      setTwapState({\n        tradeToConfirm: undefined,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        showConfirm: true,\n        txHash: undefined,\n      });\n    }\n  };\n\n  useEffect(() => {\n    onCurrencySelection(Field.INPUT, Token.ETHER);\n  }, [onCurrencySelection, allTokens]);\n\n  useEffect(() => {\n    if (currency0) {\n      onCurrencySelection(Field.INPUT, currency0);\n    }\n    if (currency1) {\n      onCurrencySelection(Field.OUTPUT, currency1);\n    }\n  }, [onCurrencySelection, currency0, currency1]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setTwapState({\n      tradeToConfirm: undefined,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash]);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setTwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput('');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleTwap = useCallback(() => {\n    if (!twapCallback) {\n      return;\n    }\n    setTwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined,\n    });\n    twapCallback()\n      .then(async ({ response, summary }) => {\n        setTwapState({\n          attemptingTxn: false,\n          txPending: true,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: undefined,\n          txHash: response.hash,\n        });\n\n        try {\n          const receipt = await response.wait();\n          finalizedTransaction(receipt, {\n            summary,\n          });\n          setTwapState({\n            attemptingTxn: false,\n            txPending: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: undefined,\n            txHash: response.hash,\n          });\n        } catch (error) {\n          setTwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: (error as any).message,\n            txHash: undefined,\n          });\n        }\n      })\n      .catch((error) => {\n        setTwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [tradeToConfirm, showConfirm, twapCallback, finalizedTransaction]);\n\n  return (\n    <Box>\n      <ErrorNotification />\n      {showConfirm && (\n        <ConfirmTwapModal\n          isOpen={showConfirm}\n          originalTrade={tradeToConfirm}\n          onAcceptChanges={handleAcceptChanges}\n          attemptingTxn={attemptingTxn}\n          txPending={txPending}\n          txHash={txHash}\n          recipient={recipient}\n          allowedSlippage={allowedSlippage}\n          onConfirm={handleTwap}\n          swapErrorMessage={swapErrorMessage}\n          onDismiss={handleConfirmDismiss}\n        />\n      )}\n      <CurrencyInput\n        title={`${t('from')}:`}\n        id='swap-currency-input'\n        currency={currencies[Field.INPUT]}\n        onHalf={handleHalfInput}\n        onMax={handleMaxInput}\n        showHalfButton={true}\n        showMaxButton={!atMaxAmountInput}\n        otherCurrency={currencies[Field.OUTPUT]}\n        handleCurrencySelect={handleCurrencySelect}\n        amount={formattedAmounts[Field.INPUT]}\n        setAmount={handleTypeInput}\n        bgClass={currencyBgClass}\n      />\n\n      <Box className='exchangeSwap'>\n        <ExchangeIcon onClick={onSwitchTokens} />\n      </Box>\n      <CurrencyInput\n        title={`${t('toEstimate')}:`}\n        id='swap-currency-output'\n        currency={currencies[Field.OUTPUT]}\n        showPrice={Boolean(marketPrice)}\n        showMaxButton={false}\n        otherCurrency={currencies[Field.INPUT]}\n        handleCurrencySelect={handleOtherCurrencySelect}\n        amount={formattedAmounts[Field.OUTPUT] || ''}\n        setAmount={() => null}\n        bgClass={currencyBgClass}\n        disabled\n        tooltip={\n          allowLimitPrice ? t('twapToInputLimitOrder') : t('twapToInput')\n        }\n      />\n      {marketPrice && (\n        <PriceIndication executionPrice={marketPrice} title='Current Price' />\n      )}\n      <StyledFlex>\n        <LimitPriceInput />\n        <Duration />\n        <ChunkSize currency={currencies[Field.INPUT]} />\n        <Interval />\n      </StyledFlex>\n\n      <Box className='swapButtonWrapper'>\n        {showApproveFlow && (\n          <Box width='48%'>\n            <Button\n              fullWidth\n              disabled={\n                approving ||\n                approval !== ApprovalState.NOT_APPROVED ||\n                approvalSubmitted\n              }\n              onClick={async () => {\n                setApproving(true);\n                try {\n                  await approveCallback();\n                  setApproving(false);\n                } catch (err) {\n                  setApproving(false);\n                }\n              }}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Box className='content'>\n                  {t('approving')} <CircularProgress size={16} />\n                </Box>\n              ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                t('approved')\n              ) : (\n                `${t('approve')} ${currencies[Field.INPUT]?.symbol}`\n              )}\n            </Button>\n          </Box>\n        )}\n        <StyledButtonContainer width={showApproveFlow ? '48%' : '100%'}>\n          <Button\n            fullWidth\n            disabled={(twapButtonDisabled as boolean) || wrapLoading}\n            onClick={account ? onSwap : connectWallet}\n          >\n            {wrapLoading ? (\n              <CircularProgress style={{ color: 'white', zoom: 0.8 }} />\n            ) : (\n              swapButtonText\n            )}\n          </Button>\n        </StyledButtonContainer>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Twap;\n\nconst StyledButtonContainer = styled(Box)({\n  '& .Mui-disabled': {\n    backgroundImage: 'unset!important',\n    color: 'white!important',\n  },\n});\n\nconst StyledFlex = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SettingsIcon } from 'assets/images/SettingsIcon.svg';\nimport { useIsProMode } from 'state/application/hooks';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { useCurrency } from 'hooks/Tokens';\nimport { Swap, SettingsModal, ToggleSwitch } from 'components';\nimport {\n  GelatoLimitOrderPanel,\n  GelatoLimitOrdersHistoryPanel,\n} from '@gelatonetwork/limit-orders-react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Twap from './Twap/Twap';\n\nconst SWAP_NORMAL = 0;\nconst SWAP_LIMIT = 1;\nconst TWAP = 2;\n\nconst SwapMain: React.FC = () => {\n  const [swapIndex, setSwapIndex] = useState(TWAP);\n  const [openSettingsModal, setOpenSettingsModal] = useState(false);\n  const { isProMode, updateIsProMode } = useIsProMode();\n\n  const parsedQuery = useParsedQueryString();\n  const currency0 = useCurrency(\n    parsedQuery && parsedQuery.currency0\n      ? (parsedQuery.currency0 as string)\n      : undefined,\n  );\n  const currency1 = useCurrency(\n    parsedQuery && parsedQuery.currency1\n      ? (parsedQuery.currency1 as string)\n      : undefined,\n  );\n  const { t } = useTranslation();\n\n  console.log(t('market'));\n\n  return (\n    <>\n      {openSettingsModal && (\n        <SettingsModal\n          open={openSettingsModal}\n          onClose={() => setOpenSettingsModal(false)}\n        />\n      )}\n      <Box\n        className={`flex flex-wrap items-center justify-between ${\n          isProMode ? ' proModeWrapper' : ''\n        }`}\n      >\n        <Box display='flex'>\n          <Box\n            className={`${\n              swapIndex === SWAP_NORMAL ? 'activeSwap' : ''\n            } swapItem headingItem\n            `}\n            onClick={() => setSwapIndex(SWAP_NORMAL)}\n          >\n            <p>{t('market')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === SWAP_LIMIT ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(SWAP_LIMIT)}\n          >\n            <p>{t('limit')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === TWAP ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(TWAP)}\n          >\n            <p>{t('twap')}</p>\n          </Box>\n        </Box>\n        <Box my={1} className='flex items-center'>\n          {!isProMode && (\n            <Box className='flex items-center' mr={1}>\n              <span\n                className='text-secondary text-uppercase'\n                style={{ marginRight: 8 }}\n              >\n                {t('proMode')}\n              </span>\n              <ToggleSwitch\n                toggled={isProMode}\n                onToggle={() => updateIsProMode(!isProMode)}\n              />\n            </Box>\n          )}\n          <Box className='headingItem' marginRight={isProMode ? 2.5 : 0}>\n            <SettingsIcon onClick={() => setOpenSettingsModal(true)} />\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={isProMode ? '0 24px' : '0'} mt={3.5}>\n        {swapIndex === SWAP_NORMAL && (\n          <Swap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n        {swapIndex === SWAP_LIMIT && (\n          <Box className='limitOrderPanel'>\n            <GelatoLimitOrderPanel />\n            <GelatoLimitOrdersHistoryPanel />\n            <Box mt={2} textAlign='center'>\n              <small>\n                <Trans\n                  i18nKey='limitOrderDisclaimer'\n                  components={{\n                    bold: <b />,\n                    alink: (\n                      <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://www.certik.org/projects/gelato'\n                      />\n                    ),\n                  }}\n                />\n              </small>\n            </Box>\n          </Box>\n        )}\n        {swapIndex === TWAP && (\n          <Twap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default SwapMain;\n","import React from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { GlobalConst } from 'constants/index';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatCompact, getDaysCurrentYear } from 'utils';\nimport { useCurrency } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\n\nconst LiquidityPoolRow: React.FC<{\n  pair: any;\n  key: number;\n}> = ({ pair, key }) => {\n  const { breakpoints } = useTheme();\n  const daysCurrentYear = getDaysCurrentYear();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const { t } = useTranslation();\n\n  const dayVolumeUSD =\n    Number(\n      pair.oneDayVolumeUSD ? pair.oneDayVolumeUSD : pair.oneDayVolumeUntracked,\n    ) *\n    GlobalConst.utils.FEEPERCENT *\n    daysCurrentYear *\n    100;\n  const trackReserveUSD = Number(\n    pair.oneDayVolumeUSD ? pair.trackedReserveUSD : pair.reserveUSD,\n  );\n  const apy =\n    isNaN(dayVolumeUSD) || trackReserveUSD === 0\n      ? 0\n      : dayVolumeUSD / trackReserveUSD;\n  const liquidity = pair.trackedReserveUSD\n    ? pair.trackedReserveUSD\n    : pair.reserveUSD;\n  const volume = pair.oneDayVolumeUSD\n    ? pair.oneDayVolumeUSD\n    : pair.oneDayVolumeUntracked;\n  const token0 = useCurrency(pair.token0.id);\n  const token1 = useCurrency(pair.token1.id);\n  return (\n    <Box key={key} className='liquidityContent'>\n      <Box className='flex items-center' width={isMobile ? 1 : 0.5}>\n        <DoubleCurrencyLogo\n          currency0={token0 ?? undefined}\n          currency1={token1 ?? undefined}\n          size={28}\n        />\n        <small style={{ marginLeft: 12 }}>\n          {pair.token0.symbol.toUpperCase()} /{' '}\n          {pair.token1.symbol.toUpperCase()}\n        </small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.2}\n        mt={isMobile ? 2.5 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('tvl')}</small>}\n        <small>${formatCompact(liquidity)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('24hVol')}</small>}\n        <small>${formatCompact(volume)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className={`flex ${isMobile ? 'justify-between' : 'justify-end'}`}\n      >\n        {isMobile && <small className='text-secondary'>{t('apy')}</small>}\n        <small\n          className={`text-right ${apy < 0 ? 'text-error' : 'text-success'}`}\n        >\n          {apy.toFixed(2)}%\n        </small>\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(LiquidityPoolRow);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport { Token } from '@uniswap/sdk';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst LiquidityPools: React.FC<{\n  token1: Token;\n  token2: Token;\n}> = ({ token1, token2 }) => {\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const { t } = useTranslation();\n  const { ethPrice } = useEthPrice();\n\n  const liquidityPairs = useMemo(\n    () =>\n      tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              if (liquidityFilterIndex === 0) {\n                return true;\n              } else if (liquidityFilterIndex === 1) {\n                return (\n                  pair.token0.id === token1Address ||\n                  pair.token1.id === token1Address\n                );\n              } else {\n                return (\n                  pair.token0.id === token2Address ||\n                  pair.token1.id === token2Address\n                );\n              }\n            })\n            .slice(0, 5)\n        : [],\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\n  );\n\n  const whiteListAddressList = useMemo(\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\n    [allTokenList],\n  );\n\n  useEffect(() => {\n    if (!ethPrice.price) return;\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n\n      const formattedPairs = tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              return (\n                whiteListAddressList.includes(pair?.token0?.id) &&\n                whiteListAddressList.includes(pair?.token1?.id)\n              );\n            })\n            .map((pair: any) => {\n              return pair.id;\n            })\n        : [];\n\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n\n  return (\n    <>\n      <Box\n        className='flex items-center justify-between'\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\n      >\n        <Box className='flex items-center'>\n          <p className='weight-600' style={{ marginRight: 8 }}>\n            {t('liquidityPools')}\n          </p>\n          <small className='text-secondary'>\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\n          </small>\n        </Box>\n        <Box\n          className='flex cursor-pointer text-secondary'\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\n        >\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n        </Box>\n      </Box>\n      {!liquidityPoolClosed && (\n        <>\n          <Divider />\n          <Box width={1}>\n            <Box padding={2} className='flex liquidityMain'>\n              <Box width={0.5} className='flex liquidityFilter'>\n                <small\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(0)}\n                >\n                  {t('all')}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(1)}\n                >\n                  {token1.symbol?.toUpperCase()}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(2)}\n                >\n                  {token2.symbol?.toUpperCase()}\n                </small>\n              </Box>\n              {!isMobile && (\n                <>\n                  <Box width={0.2}>\n                    <small>{t('tvl')}</small>\n                  </Box>\n                  <Box width={0.15}>\n                    <small>{t('24hVol')}</small>\n                  </Box>\n                  <Box width={0.15} className='text-right'>\n                    <small>{t('apy')}</small>\n                  </Box>\n                </>\n              )}\n            </Box>\n            {liquidityPairs.map((pair: any, ind: any) => (\n              <LiquidityPoolRow pair={pair} key={ind} />\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LiquidityPools;\n","import React from 'react';\n\nconst SwapProChart: React.FC<{\n  pairName: string;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n}> = ({ pairAddress, pairName, pairTokenReversed }) => {\n  return (\n    <iframe\n      src={`https://mode.quickswap.exchange?pairAddress=${pairAddress}&pairName=${pairName}&tokenReversed=${pairTokenReversed}`}\n      height='100%'\n      width='100%'\n      frameBorder='0'\n    />\n  );\n};\n\nexport default React.memo(SwapProChart);\n","import React from 'react';\nimport SwapProChart from './SwapProChart';\nimport { Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { Height } from '@material-ui/icons';\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex';\nimport 'react-reflex/styles.css';\nimport { formatNumber, shortenTx, getEtherscanLink } from 'utils';\nimport dayjs from 'dayjs';\nimport { useActiveWeb3React } from 'hooks';\nimport { TableVirtuoso } from 'react-virtuoso';\nimport { useTranslation } from 'react-i18next';\n\nconst SwapProChartTrade: React.FC<{\n  showChart: boolean;\n  showTrades: boolean;\n  token1: Token;\n  token2: Token;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n  transactions?: any[];\n}> = ({\n  showChart,\n  showTrades,\n  token1,\n  token2,\n  pairAddress,\n  pairTokenReversed,\n  transactions,\n}) => {\n  const { chainId } = useActiveWeb3React();\n  const { t } = useTranslation();\n\n  const TradesTable = () => (\n    <TableVirtuoso\n      data={transactions}\n      components={{\n        Table: ({ ...props }) => <table className='tradeTable' {...props} />,\n      }}\n      fixedHeaderContent={() => (\n        <tr>\n          <th align='left'>{t('date')}</th>\n          <th align='left'>{t('type')}</th>\n          <th align='right'>{t('usd')}</th>\n          <th align='right'>{token1.symbol}</th>\n          <th align='right'>{token2.symbol}</th>\n          <th align='right'>{t('price')}</th>\n          <th align='right'>{t('txn')}</th>\n        </tr>\n      )}\n      itemContent={(index, tx) => {\n        const txType = Number(tx.amount0In) > 0 ? 'sell' : 'buy';\n        const txAmount0 =\n          Number(tx.amount0In) > 0 ? tx.amount0In : tx.amount0Out;\n        const txAmount1 =\n          Number(tx.amount1In) > 0 ? tx.amount1In : tx.amount1Out;\n        const token1Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount0\n            : txAmount1;\n        const token2Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount1\n            : txAmount0;\n        const txPrice = Number(tx.amountUSD) / token1Amount;\n        return (\n          <>\n            <td align='left'>\n              {dayjs\n                .unix(tx.transaction.timestamp)\n                .format('MMM DD, hh:mm:ss a')}\n            </td>\n            <td className={txType} align='left'>\n              {txType.toUpperCase()}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(tx.amountUSD)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token1Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token2Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(txPrice)}\n            </td>\n            <td className={txType} align='right'>\n              {chainId ? (\n                <a\n                  href={getEtherscanLink(\n                    chainId,\n                    tx.transaction.id,\n                    'transaction',\n                  )}\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  {shortenTx(tx.transaction.id)}\n                </a>\n              ) : (\n                shortenTx(tx.transaction.id)\n              )}\n            </td>\n          </>\n        );\n      }}\n    />\n  );\n\n  return (\n    <ReflexContainer orientation='horizontal'>\n      {showChart && (\n        <ReflexElement className='top-pane' minSize={200}>\n          <SwapProChart\n            pairName={`${token1.symbol}/${token2.symbol}`}\n            pairAddress={pairAddress}\n            pairTokenReversed={pairTokenReversed}\n          />\n        </ReflexElement>\n      )}\n      {showChart && showTrades && (\n        <ReflexSplitter>\n          <Box\n            width={1}\n            height='2px'\n            className='flex justify-center items-center'\n          >\n            <Height />\n          </Box>\n        </ReflexSplitter>\n      )}\n      {showTrades && (\n        <ReflexElement className='bottom-pane' minSize={200}>\n          <TradesTable />\n        </ReflexElement>\n      )}\n    </ReflexContainer>\n  );\n};\n\nexport default React.memo(SwapProChartTrade);\n","import React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\ndayjs.extend(utc);\n\nconst SwapInfoTx: React.FC<{\n  transactions?: any[];\n}> = ({ transactions }) => {\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime\n    .subtract(subtractTimeAmount, subtractTimeType)\n    .unix();\n\n  const filteredTxs = transactions?.filter(\n    (tx) => tx.transaction.timestamp >= firstTime,\n  );\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\n  const volume = filteredTxs\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\n    : undefined;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ButtonSwitch\n        height={32}\n        value={txFilter}\n        onChange={setTxFilter}\n        items={[\n          { label: `5${t('min')}`, value: '5_minute' },\n          { label: `1${t('hour')}`, value: '1_hour' },\n          { label: `6${t('hour')}`, value: '6_hour' },\n          { label: `24${t('hour')}`, value: '24_hour' },\n        ]}\n      />\n      <Box className='swapTxInfo'>\n        <Box>\n          <small className='text-secondary'>{t('transactions')}:</small>\n          {filteredTxs ? (\n            <small>{filteredTxs.length}</small>\n          ) : (\n            <Skeleton width={60} height={14} />\n          )}\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('buys')}:</small>\n          <small>\n            {filteredBuyTxs ? (\n              filteredBuyTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('sells')}:</small>\n          <small>\n            {filteredSellTxs ? (\n              filteredSellTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('volume')}:</small>\n          <small>\n            {filteredTxs ? (\n              volume > 1000 ? (\n                formatCompact(volume)\n              ) : (\n                formatNumber(volume)\n              )\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default React.memo(SwapInfoTx);\n","import React, { useState, useEffect } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { SwapHoriz } from '@material-ui/icons';\nimport { Currency, Token } from '@uniswap/sdk';\nimport { CurrencyLogo } from 'components';\nimport { getTokenInfo, formatNumber } from 'utils';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwapInfoTx from './SwapInfoTx';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst SwapProInfo: React.FC<{\n  token1?: Token;\n  token2?: Token;\n  transactions?: any[];\n}> = ({ token1, token2, transactions }) => {\n  const { t } = useTranslation();\n  const [token1Data, setToken1Data] = useState<any>(null);\n  const [token2Data, setToken2Data] = useState<any>(null);\n  const token1Address = token1?.address;\n  const token2Address = token2?.address;\n  const currency1 = token1 ? unwrappedToken(token1) : undefined;\n  const currency2 = token2 ? unwrappedToken(token2) : undefined;\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    (async () => {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        if (token1Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token1Address,\n          );\n          if (tokenInfo) {\n            setToken1Data(tokenInfo[0]);\n          }\n        }\n        if (token2Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token2Address,\n          );\n          if (tokenInfo) {\n            setToken2Data(tokenInfo[0]);\n          }\n        }\n      }\n    })();\n  }, [token1Address, token2Address, ethPrice.price, ethPrice.oneDayPrice]);\n\n  const TokenInfo: React.FC<{ currency: Currency; tokenData: any }> = ({\n    currency,\n    tokenData,\n  }) => {\n    const priceUpPercent = Number(tokenData?.priceChangeUSD);\n    return (\n      <>\n        <Box p={1} display='flex'>\n          <CurrencyLogo currency={currency} />\n          <Box ml={1} flex={1}>\n            <Box className='flex justify-between'>\n              <small>{currency.symbol}</small>\n              {tokenData ? (\n                <small>${formatNumber(tokenData?.priceUSD)}</small>\n              ) : (\n                <Skeleton width={60} height={14} />\n              )}\n            </Box>\n            {tokenData ? (\n              <span>\n                {t('24h')}:{' '}\n                <span\n                  className={priceUpPercent > 0 ? 'text-success' : 'text-error'}\n                >\n                  {formatNumber(priceUpPercent)}%\n                </span>\n              </span>\n            ) : (\n              <Skeleton width={60} height={12} />\n            )}\n          </Box>\n        </Box>\n        <Divider />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Box p={1}>\n        <p className='text-uppercase'>{t('info')}:</p>\n      </Box>\n      <Divider />\n      {currency1 && <TokenInfo currency={currency1} tokenData={token1Data} />}\n      {currency2 && <TokenInfo currency={currency2} tokenData={token2Data} />}\n      {currency1 && currency2 && (\n        <>\n          <Box py={2} px={1}>\n            <Box mb={1} px={1} className='flex items-center justify-between'>\n              <small>\n                {currency1.symbol} / {currency2.symbol}\n              </small>\n              <Box className='swapIcon'>\n                <SwapHoriz />\n              </Box>\n            </Box>\n            <SwapInfoTx transactions={transactions} />\n          </Box>\n          <Divider />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SwapProInfo);\n","import React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface SwapProFilterProps {\n  infoPos: string;\n  setInfoPos: (pos: string) => void;\n  showChart: boolean;\n  setShowChart: (value: boolean) => void;\n  showTrades: boolean;\n  setShowTrades: (value: boolean) => void;\n}\n\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\n  infoPos,\n  setInfoPos,\n  showChart,\n  setShowChart,\n  showTrades,\n  setShowTrades,\n}) => {\n  const { t } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n\n  const infoPosItems = swapPositions.map((pos) => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos,\n    };\n  });\n\n  return (\n    <Box className='swapFilter'>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showChart}\n          disabled={!showTrades}\n          onChange={(evt) => setShowChart(evt.target.checked)}\n        />\n        <small>{t('chart')}</small>\n      </Box>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showTrades}\n          disabled={!showChart}\n          onChange={(evt) => setShowTrades(evt.target.checked)}\n        />\n        <small>{t('trades')}</small>\n      </Box>\n      <Box className='flex items-center'>\n        <small className='text-uppercase'>{t('info')}:</small>\n        <Box ml={1}>\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\n        </Box>\n      </Box>\n      <Box\n        className='replayButton'\n        onClick={() => {\n          setInfoPos(t('right'));\n          setShowChart(true);\n          setShowTrades(true);\n        }}\n      >\n        <Replay />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwapProFilter;\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\n\nconst SwapPage: React.FC = () => {\n  const { isProMode, updateIsProMode } = useIsProMode();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState<any[] | undefined>(\n    undefined,\n  );\n  const [infoPos, setInfoPos] = useState('right');\n\n  const { currencies } = useDerivedSwapInfo();\n  const { chainId } = useActiveWeb3React();\n\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\n\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3} id='swap-page'>\n      {!isProMode && (\n        <Box className='pageHeading'>\n          <h4>{t('swap')}</h4>\n          <Box className='helpWrapper'>\n            <small>{t('help')}</small>\n            <HelpIcon />\n          </Box>\n        </Box>\n      )}\n      {!isProMode ? (\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={12} md={6} lg={5}>\n            <Box className='wrapper'>\n              <SwapMain />\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={7}>\n            <Box className='flex flex-wrap justify-between fullWidth'>\n              {token1 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token1} />\n                </Box>\n              )}\n              {token2 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token2} />\n                </Box>\n              )}\n            </Box>\n            {token1 && token2 && (\n              <Box className='wrapper' marginTop='32px'>\n                <LiquidityPools token1={token1} token2={token2} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box\n          className='border-top border-bottom bg-palette flex flex-wrap'\n          minHeight='calc(100vh - 140px)'\n        >\n          <Box\n            width={isMobile ? 1 : '450px'}\n            padding='20px 0'\n            className={isMobile ? '' : 'border-right'}\n          >\n            <Box\n              className='flex justify-between items-center'\n              padding='0 24px'\n              mb={3}\n            >\n              <h4>{t('swap')}</h4>\n              <Box className='flex items-center' mr={1}>\n                <span\n                  className='text-secondary text-uppercase'\n                  style={{ marginRight: 8 }}\n                >\n                  {t('proMode')}\n                </span>\n                <ToggleSwitch\n                  toggled={isProMode}\n                  onToggle={() => updateIsProMode(!isProMode)}\n                />\n              </Box>\n            </Box>\n            <SwapMain />\n          </Box>\n          {infoPos === 'left' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left border-right'}\n              width={isMobile ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n          <Box className='swapProWrapper'>\n            <SwapProFilter\n              infoPos={infoPos}\n              setInfoPos={setInfoPos}\n              showChart={showChart}\n              setShowChart={setShowChart}\n              showTrades={showTrades}\n              setShowTrades={setShowTrades}\n            />\n            {token1 && token2 && pairId && (\n              <SwapProChartTrade\n                showChart={showChart}\n                showTrades={showTrades}\n                token1={token1}\n                token2={token2}\n                pairAddress={pairId}\n                pairTokenReversed={pairTokenReversed}\n                transactions={transactions}\n              />\n            )}\n          </Box>\n          {infoPos === 'right' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left'}\n              width={isTablet ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SwapPage;\n"],"sourceRoot":""}