{"version":3,"sources":["assets/images/HelpIcon1.svg","assets/images/SettingsIcon.svg","pages/SwapPage/Twap/PriceInput.tsx","pages/SwapPage/Twap/TimeSelect.tsx","pages/SwapPage/Twap/Duration.tsx","pages/SwapPage/Twap/Interval.tsx","pages/SwapPage/Twap/ChunkSize.tsx","pages/SwapPage/Twap/ErrorNotification.tsx","pages/SwapPage/Twap/Orders/OrderTx.tsx","pages/SwapPage/Twap/Orders/Orders.tsx","pages/SwapPage/Twap/useTwapCallback.ts","pages/SwapPage/Twap/ConfirmTwapModal/LimitPriceSection.tsx","pages/SwapPage/Twap/ConfirmTwapModal/TxDetails.tsx","pages/SwapPage/Twap/ConfirmTwapModal/Disclaimer.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ModalContent.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ConfirmTwapModal.tsx","pages/SwapPage/Twap/Twap.tsx","pages/SwapPage/SwapMain.tsx","pages/SwapPage/LiquidityPoolRow.tsx","pages/SwapPage/LiquidityPools.tsx","pages/SwapPage/SwapProChart.tsx","pages/SwapPage/SwapProChartTrade.tsx","pages/SwapPage/SwapInfoTx.tsx","pages/SwapPage/SwapProInfo.tsx","pages/SwapPage/SwapProFilter.tsx","pages/SwapPage/SwapPage.tsx"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHelpIcon1","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","d","transform","style","fill","ForwardRef","SvgSettingsIcon","rx","PriceInput","calculatedPrice","useDerivedTwapInfo","useState","isReverse","setIsReverse","dispatch","useDispatch","StyledContainer","className","StyledPrice","margin","Typography","StyledToggle","onClick","value","togglePriceAmount","align","placeholder","onUserInput","val","setPrice","styled","Box","marginTop","display","alignItems","marginRight","gap","cursor","TimeSelect","selected","onUpdate","StyledTitle","StyledRight","displayValue","milliseconds","timeToMilliseconds","type","format","getFormatTypeFromMilliseconds","millisecondsToTime","console","log","onChange","StyledSeletct","event","color","MenuItem","TimeSelectFormat","DAYS","HOURS","MINUTES","Select","theme","borderBottom","palette","primary","main","justifyContent","marginLeft","Duration","onDuration","useTwapActionHandlers","duration","useTwapState","onInterval","interval","ChunkSize","currency","totalChunks","chunkSize","inInput","onChunkSize","usdPrice","Number","useUSDCPrice","toSignificant","useEffect","isValidChunkSize","originalValue","StyledTop","StyledCurrency","marginBottom","size","symbol","StyledBottom","toString","toLocaleString","flexDirection","whiteSpace","ErrorNotification","error","handleClose","setTimeout","setError","undefined","Snackbar","open","autoHideDuration","onClose","Alert","severity","variant","OrderTx","tx","status","fromTokenId","toTokenId","fromTokenAmount","toTokenAmount","currencyPrice","executionPrice","minimumReceived","finishedChunks","fromCurrency","useCurrency","toCurrency","showCancel","TxStatus","OPEN","percent","StyledOrder","StyledOrderTop","StyledOrderTopCurrency","Button","StyledOrderText","StyledOrderRows","name","text","StyledProgressContainer","StyledProgressLeft","StyledLinearProgress","StyledProgressNumbers","LinearProgress","borderRadius","flex","fontSize","Token","StyledToken","TxRow","StyledOrderRow","padding","paddingTop","data","createTxData","mappedData","mapTxData","Orders","setValue","StyledTabsContainer","Tabs","_event","newValue","textColor","scrollButtons","map","index","StyledTab","label","a11yProps","IconButton","isEmpty","StyledTabPanel","StyledEmptyListText","emptyOrdersText","StyledOrdersList","SwapCallbackState","paddingRight","children","other","role","hidden","aria-labelledby","textAlign","overflow","maxHeight","Tab","minWidth","span","useTwapCallArguments","trade","allowedSlippage","GlobalConst","utils","INITIAL_ALLOWED_SLIPPAGE","recipientAddressOrName","useActiveWeb3React","account","chainId","library","useENS","recipientAddress","address","recipient","deadline","useTransactionDeadline","contract","useRouterContract","useMemo","tradeVersion","Version","v2","swapMethods","push","Router","swapCallParameters","feeOnTransfer","Percent","JSBI","BigInt","BIPS_BASE","ttl","toNumber","DEFAULT_DEADLINE_FROM_NOW","tradeType","TradeType","EXACT_INPUT","parameters","LimitPriceSection","inputAmount","outputAmount","inCurrency","OutCurrency","StyledLimitPrice","calculateInterval","time","moment","days","hours","minutes","str","TxDetails","StyledDetails","formatTokenAmount","tooltip","add","fontWeight","Row","StyledRow","placement","Disclaimer","ModalContent","onConfirm","typedPriceOutputValue","useTranslation","t","result","tryParseAmount","calculatedOutputAmount","StyledCards","currencyAmount","Card","StyledCard","StyledCardTop","getTokenValue","StyledCardBottom","ConfirmTwapModal","originalTrade","onAcceptChanges","onDismiss","swapErrorMessage","isOpen","attemptingTxn","txHash","txPending","showAcceptChanges","Boolean","tradeB","tradeA","currencyEquals","equalTo","modalContent","useCallback","pendingText","amount1","symbol1","amount2","symbol2","confirmationContent","message","content","hash","Twap","currency0","currency1","currencyBgClass","independentField","typedValue","v1Trade","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","toggledVersion","useToggledVersion","finalizedTransaction","useTransactionFinalizer","useExpertModeManager","isExpertMode","useWrapCallback","Field","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","allTokens","useAllTokens","showWrap","WrapType","NOT_APPLICABLE","tradesByVersion","v1","onSwitchTokens","onCurrencySelection","onChangeRecipient","onInInputChange","useENSAddress","useUserSlippageTolerance","approving","setApproving","useApproveCallbackFromTrade","approval","approveCallback","dependentField","parsedAmounts","formattedAmounts","toExact","route","userHasSpecifiedInputOutput","greaterThan","noRoute","priceImpactWithoutFee","computeTradePriceBreakdown","approvalSubmitted","setApprovalSubmitted","ethereum","window","mainPrice","setMainPrice","priceImpactSeverity","warningSeverity","isValid","showApproveFlow","ApprovalState","NOT_APPROVED","PENDING","APPROVED","toggleWalletModal","useWalletModalToggle","handleCurrencySelect","inputCurrency","handleOtherCurrencySelect","outputCurrency","swapCalls","addTransaction","useTransactionAdder","state","INVALID","callback","LOADING","VALID","a","Promise","all","methodName","args","options","isZero","estimateGas","then","gasEstimate","catch","gasError","debug","callStatic","Error","callError","errorMessage","reason","estimatedCalls","successfulEstimation","find","el","ix","list","errorCalls","filter","gasLimit","calculateGasMargin","from","response","inputSymbol","outputSymbol","base","withRecipient","isAddress","shortenAddress","withVersion","toUpperCase","summary","code","useTwapCallback","twapCallback","twapCallbackError","swapButtonText","WRAP","UNWRAP","isSupportedNetwork","twapButtonDisabled","showConfirm","tradeToConfirm","setTwapState","handleTypeInput","handleTypeOutput","maxAmountInput","maxAmountSpend","handleMaxInput","handleHalfInput","atMaxAmountInput","ETHER","handleAcceptChanges","handleConfirmDismiss","handleTwap","confirmPriceImpactWithoutFee","wait","receipt","ReactGA","category","action","join","inInputAmount","inInputCurrency","onHalf","onMax","showHalfButton","showMaxButton","otherCurrency","amount","setAmount","bgClass","Interval","ExchangeIcon","showPrice","invert","PriceExchangeIcon","fullWidth","disabled","CircularProgress","StyledButtonContainer","addMaticToMetamask","backgroundImage","SwapMain","swapIndex","setSwapIndex","openSettingsModal","setOpenSettingsModal","useIsProMode","isProMode","updateIsProMode","parsedQuery","useParsedQueryString","my","mr","toggled","onToggle","SettingsIcon","mt","Trans","i18nKey","components","bold","alink","rel","href","LiquidityPoolRow","pair","breakpoints","useTheme","daysCurrentYear","getDaysCurrentYear","isMobile","useMediaQuery","down","dayVolumeUSD","oneDayVolumeUSD","oneDayVolumeUntracked","FEEPERCENT","trackReserveUSD","trackedReserveUSD","reserveUSD","apy","isNaN","liquidity","volume","token0","token1","formatCompact","toFixed","React","memo","LiquidityPools","token2","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","toLowerCase","token2Address","allTokenList","ethPrice","useEthPrice","liquidityPairs","slice","whiteListAddressList","item","price","getTokenPairs","formattedPairs","includes","getBulkPairData","pairData","KeyboardArrowDown","KeyboardArrowUp","Divider","ind","SwapProChart","pairAddress","pairName","pairTokenReversed","src","frameBorder","SwapProChartTrade","showChart","showTrades","transactions","TradesTable","Table","fixedHeaderContent","itemContent","txType","amount0In","txAmount0","amount0Out","txAmount1","amount1In","amount1Out","token1Amount","token2Amount","txPrice","amountUSD","dayjs","unix","transaction","timestamp","formatNumber","getEtherscanLink","shortenTx","orientation","minSize","Height","extend","utc","SwapInfoTx","txFilter","setTxFilter","subtractTimeAmount","split","subtractTimeType","firstTime","subtract","filteredTxs","filteredBuyTxs","filteredSellTxs","reduce","total","items","Skeleton","SwapProInfo","token1Data","setToken1Data","token2Data","setToken2Data","unwrappedToken","currency2","oneDayPrice","getTokenInfo","tokenInfo","TokenInfo","tokenData","priceUpPercent","priceChangeUSD","p","ml","priceUSD","py","px","mb","SwapHoriz","SwapProFilter","infoPos","setInfoPos","setShowChart","setShowTrades","infoPosItems","pos","condition","Checkbox","checked","evt","Replay","SwapPage","isTablet","pairId","setPairId","setPairTokenReversed","setTransactions","Math","floor","Date","now","currentTime","setCurrentTime","useDerivedSwapInfo","wrappedCurrency","setInterval","_currentTime","clearInterval","getPairAddress","tokenReversed","getPairId","getSwapTransactions","txns","filteredTxns","txn","getTradesData","minHeight","Grid","container","spacing","xs","sm","md","lg","token"],"mappings":"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","file":"static/js/11.a8872be6.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHelpIcon1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Path 11469\",\n    d: \"M10.78-7.061c0-1.268-.918-1.919-2.319-1.919a3.829 3.829 0 0 0-2.353.78l.167 1.068a3.446 3.446 0 0 1 2.069-.8c.767 0 1.2.334 1.2.918 0 .617-.417.968-1.6 1.4l-.334.117.133 1.518.784-.15.067-.734c1.218-.396 2.186-.997 2.186-2.198zm-2 5.306V-3.09H7.493v1.335zM.352-5.192a7.851 7.851 0 0 0 7.992 8.008 7.855 7.855 0 0 0 8.008-8.008 7.831 7.831 0 0 0-8.008-7.992A7.827 7.827 0 0 0 .352-5.192zm1.1 0a6.789 6.789 0 0 1 6.891-6.941 6.789 6.789 0 0 1 6.891 6.941 6.793 6.793 0 0 1-6.89 6.957 6.793 6.793 0 0 1-6.891-6.957z\",\n    transform: \"translate(-.352 13.184)\",\n    style: {\n      fill: \"#636780\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpIcon1);\nexport default __webpack_public_path__ + \"static/media/HelpIcon1.66c8c791.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettingsIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Component 37 \\\\u2013 6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    \"data-name\": \"Rectangle 18293\",\n    width: 40,\n    height: 40,\n    rx: 20,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Settings 2\",\n    d: \"M20 11.823V8.177c-1.79-.638-2.272-.668-2.522-1.274s.069-.974.882-2.686L15.782 1.64c-1.688.8-2.073 1.137-2.687.883S12.456 1.782 11.823 0H8.177C7.541 1.787 7.511 2.271 6.9 2.522c-.627.261-1-.083-2.686-.883L1.64 4.217c.814 1.713 1.135 2.078.882 2.683S1.788 7.541 0 8.177v3.646c1.783.633 2.271.667 2.523 1.273s-.068.972-.883 2.686l2.577 2.578c1.666-.792 2.058-1.144 2.686-.882.607.252.637.733 1.274 2.522h3.645c.632-1.776.666-2.269 1.281-2.526s.988.083 2.679.885l2.578-2.578c-.812-1.708-1.135-2.077-.882-2.686s.733-.635 2.522-1.272zm-4.062.637a3.3 3.3 0 0 0 .407 2.982l-.9.9a3.288 3.288 0 0 0-2.978-.408 3.309 3.309 0 0 0-1.823 2.4H9.362a3.3 3.3 0 0 0-1.819-2.4 3.307 3.307 0 0 0-2.983.407l-.9-.9a3.3 3.3 0 0 0 .406-2.983 3.307 3.307 0 0 0-2.4-1.818V9.362a3.3 3.3 0 0 0 2.4-1.82 3.3 3.3 0 0 0-.407-2.983l.9-.9a3.3 3.3 0 0 0 2.983.407 3.3 3.3 0 0 0 1.819-2.4h1.279a3.3 3.3 0 0 0 1.82 2.4 3.308 3.308 0 0 0 2.983-.407l.9.9a3.307 3.307 0 0 0-.407 2.983 3.3 3.3 0 0 0 2.4 1.819v1.279a3.3 3.3 0 0 0-2.4 1.819zM10 7.5A2.5 2.5 0 1 1 7.5 10 2.5 2.5 0 0 1 10 7.5zm0-1.667A4.167 4.167 0 1 0 14.167 10 4.166 4.166 0 0 0 10 5.833z\",\n    transform: \"translate(10 10)\",\n    style: {\n      fill: \"#696c80\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettingsIcon);\nexport default __webpack_public_path__ + \"static/media/SettingsIcon.5b7ed28d.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { NumericalInput } from 'components';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setPrice } from 'state/twap/actions';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport { togglePriceAmount } from 'state/twap/utils';\n\nfunction PriceInput() {\n  const { calculatedPrice } = useDerivedTwapInfo();\n  const [isReverse, setIsReverse] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onChange = (value: string) => {\n    dispatch(setPrice(value));\n  };\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledPrice style={{ margin: 0 }}>\n        <Typography>Price</Typography>\n        <StyledToggle onClick={() => setIsReverse(!isReverse)}>\n          Toggle\n        </StyledToggle>\n      </StyledPrice>\n      <NumericalInput\n        value={togglePriceAmount(isReverse, calculatedPrice) || ''}\n        align='right'\n        placeholder='0.00'\n        onUserInput={(val) => {\n          onChange(val);\n        }}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default PriceInput;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  alignItems: 'center',\n});\n\nconst StyledPrice = styled(Box)({\n  marginRight: 10,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n});\n\nconst StyledToggle = styled('button')({\n  cursor: 'pointer',\n});\n","import {\n  Box,\n  duration,\n  MenuItem,\n  Select,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { NumericalInput } from 'components';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { TimeSelectFormat, TwapTimeSelect } from 'state/twap/reducer';\nimport {\n  getFormatTypeFromMilliseconds,\n  millisecondsToTime,\n  timeToMilliseconds,\n} from './utils';\n\ninterface Props {\n  selected: TwapTimeSelect;\n  title: string;\n  onUpdate: ({\n    type,\n    displayValue,\n    milliseconds,\n  }: {\n    type: TimeSelectFormat;\n    displayValue?: string;\n    milliseconds?: number;\n  }) => void;\n}\n\nfunction TimeSelect({ selected, title, onUpdate }: Props) {\n  const onChange = (value: string) => {\n    const milliseconds = timeToMilliseconds(selected.type, value) || 0;\n    let displayValue = value;\n\n    if (!milliseconds) {\n      onUpdate({\n        type: selected.type,\n        displayValue,\n        milliseconds,\n      });\n      return;\n    }\n\n    const format = getFormatTypeFromMilliseconds(milliseconds || 0);\n\n    if (format !== selected.type) {\n      displayValue = millisecondsToTime(format, milliseconds) || '';\n      console.log(displayValue, milliseconds);\n    }\n    onUpdate({\n      type: format,\n      displayValue,\n      milliseconds,\n    });\n  };\n\n  const onSelect = (event: any) => {\n    onUpdate({\n      type: event.target.value,\n    });\n  };\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTitle style={{ margin: 0 }}>{title}</StyledTitle>\n      <StyledRight>\n        <NumericalInput\n          value={selected.displayValue || ''}\n          align='right'\n          placeholder='0.0'\n          onUserInput={(val) => {\n            if (val !== '0' && val !== '.') {\n              onChange(val);\n            }\n          }}\n        />\n        <StyledSeletct\n          value={selected.type}\n          onChange={onSelect}\n          color='primary'\n        >\n          <MenuItem value={TimeSelectFormat.DAYS}>Days</MenuItem>\n          <MenuItem value={TimeSelectFormat.HOURS}>Hours</MenuItem>\n          <MenuItem value={TimeSelectFormat.MINUTES}>Minutes</MenuItem>\n        </StyledSeletct>\n      </StyledRight>\n    </StyledContainer>\n  );\n}\n\nexport default TimeSelect;\n\nconst StyledSeletct = styled(Select)(({ theme }: { theme: Theme }) => ({\n  '&:before': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '&:after': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '& svg': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst StyledRight = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 20,\n  marginLeft: 50,\n  '& .styledInput': {\n    width: 'fit-content',\n  },\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n});\n","import React from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\n\nfunction Duration() {\n  const { onDuration } = useTwapActionHandlers();\n  const duration = useTwapState().duration;\n\n  return (\n    <TimeSelect onUpdate={onDuration} selected={duration} title='Duration' />\n  );\n}\n\nexport default Duration;\n","import React from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\n\nfunction Duration() {\n  const { onInterval } = useTwapActionHandlers();\n  const interval = useTwapState().interval;\n\n  return (\n    <TimeSelect onUpdate={onInterval} selected={interval} title='Interval' />\n  );\n}\n\nexport default Duration;\n","import { Avatar, Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Currency } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput } from 'components';\nimport React, { useEffect, useState } from 'react';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { isValidChunkSize } from 'state/twap/utils';\nimport useUSDCPrice from 'utils/useUSDCPrice';\n\ninterface Props {\n  currency: Currency | undefined;\n}\n\nfunction ChunkSize({ currency }: Props) {\n  const { totalChunks, chunkSize, inInput } = useTwapState();\n  const { onChunkSize } = useTwapActionHandlers();\n  const usdPrice = Number(useUSDCPrice(currency)?.toSignificant() ?? 0);\n\n  const onChange = (value: string) => {\n    onChunkSize(value);\n  };\n\n  useEffect(() => {\n    if (inInput && !isValidChunkSize(inInput, chunkSize)) {\n      onChunkSize(inInput?.originalValue);\n    }\n  }, [inInput, chunkSize, onChunkSize]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <StyledTitle style={{ margin: 0 }}>Chunk size</StyledTitle>\n        <NumericalInput\n          value={chunkSize || ''}\n          align='right'\n          placeholder='0.00'\n          onUserInput={(val) => {\n            onChange(val);\n          }}\n        />\n        {currency && (\n          <StyledCurrency style={{ marginBottom: 0 }}>\n            <CurrencyLogo currency={currency} size={'24px'} />\n            {currency?.symbol}\n          </StyledCurrency>\n        )}\n      </StyledTop>\n      <StyledBottom>\n        <small className='text-secondary'>\n          Total chunks: {totalChunks?.toString() ?? 0}\n        </small>\n        <small className='text-secondary'>\n          ${chunkSize ? (usdPrice * Number(chunkSize)).toLocaleString() : '0'}\n        </small>\n      </StyledBottom>\n    </StyledContainer>\n  );\n}\n\nexport default ChunkSize;\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n});\n\nconst StyledBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 10,\n});\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n\nconst StyledCurrency = styled(Typography)({\n  marginLeft: 20,\n  display: 'flex',\n  gap: 10,\n});\n","import { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport { setError } from 'state/twap/actions';\nimport { useTwapState } from 'state/twap/hooks';\nimport React from 'react';\n\nfunction ErrorNotification() {\n  const { error } = useTwapState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setTimeout(() => {\n      dispatch(setError(undefined));\n    }, 400);\n  };\n\n  return (\n    <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity='error' variant='filled'>\n        {error}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport default ErrorNotification;\n","import { Box, Button, LinearProgress, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport React from 'react';\nimport { TransactionDataType, TxStatus } from '../types';\nimport { styled } from '@material-ui/styles';\nimport { useCurrency } from 'hooks/Tokens';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { Currency } from '@uniswap/sdk';\ntype TransactionProps = {\n  tx: TransactionDataType;\n  status: TxStatus;\n};\n\nconst OrderTx = ({ tx, status }: TransactionProps) => {\n  const {\n    fromTokenId,\n    toTokenId,\n    fromTokenAmount,\n    toTokenAmount,\n    currencyPrice,\n    executionPrice,\n    minimumReceived,\n    totalChunks,\n    finishedChunks,\n  } = tx;\n\n  const fromCurrency = useCurrency(fromTokenId);\n  const toCurrency = useCurrency(toTokenId);\n\n  const showCancel = status === TxStatus.OPEN;\n\n  const percent = (finishedChunks / totalChunks) * 100;\n\n  return (\n    <StyledOrder className='bg-secondary2'>\n      <StyledOrderTop>\n        <StyledOrderTopCurrency>\n          <Token currency={fromCurrency} />\n\n          <ArrowRightAltIcon />\n          <Token currency={toCurrency} />\n        </StyledOrderTopCurrency>\n        {showCancel && <Button>Cancel</Button>}\n      </StyledOrderTop>\n      <StyledOrderText>\n        Sell {fromTokenAmount} {fromCurrency?.symbol} for {toTokenAmount}{' '}\n        {toCurrency?.symbol}\n      </StyledOrderText>\n      <StyledOrderRows>\n        <TxRow\n          name='Current price'\n          text={`1 ${fromCurrency?.symbol} = ${currencyPrice} ${toCurrency?.symbol}`}\n        />\n        <TxRow\n          name='Limit price'\n          text={`1 ${fromCurrency?.symbol} = ${executionPrice} ${toCurrency?.symbol}`}\n        />\n        <TxRow\n          name='Minimum Received'\n          text={` 1 ${fromCurrency?.symbol} = ${minimumReceived} ${toCurrency?.symbol}`}\n        />\n        <TxRow\n          name='Expiry Date'\n          text={`1 ${fromCurrency?.symbol} = ${minimumReceived} ${toCurrency?.symbol}`}\n        />\n      </StyledOrderRows>\n      <StyledProgressContainer>\n        <StyledProgressLeft>\n          <StyledLinearProgress\n            variant='determinate'\n            value={percent}\n            color='primary'\n          />\n          <StyledProgressNumbers>\n            <Typography>0%</Typography>\n            <Typography>100%</Typography>\n          </StyledProgressNumbers>\n        </StyledProgressLeft>\n\n        <Typography>\n          {finishedChunks}/{totalChunks} Matic\n        </Typography>\n      </StyledProgressContainer>\n    </StyledOrder>\n  );\n};\n\nexport default OrderTx;\n\nconst StyledProgressNumbers = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst StyledLinearProgress = styled(LinearProgress)({\n  height: 10,\n  borderRadius: 10,\n  width: '100%',\n});\n\nconst StyledProgressLeft = styled(Box)({\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledProgressContainer = styled(Box)({\n  marginTop: 20,\n  display: 'flex',\n  alignItems: 'flex-start',\n  gap: 30,\n  '& p': {\n    fontSize: 14,\n  },\n});\n\ntype TokenProps = {\n  currency?: Currency | null;\n};\n\nconst Token = ({ currency }: TokenProps) => {\n  if (!currency) {\n    return null;\n  }\n  return (\n    <StyledToken>\n      {currency && <CurrencyLogo currency={currency} size={'28px'} />}\n      <Typography>{currency?.symbol}</Typography>\n    </StyledToken>\n  );\n};\n\nconst StyledToken = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  '& p': {\n    fontSize: 15,\n  },\n});\n\ntype TxRowProps = {\n  text: string;\n  name: string;\n};\n\nconst TxRow = ({ text, name }: TxRowProps) => {\n  return (\n    <StyledOrderRow>\n      <small>{name}:</small>\n      <Typography>{text}</Typography>\n    </StyledOrderRow>\n  );\n};\n\nconst StyledOrder = styled(Box)({\n  padding: 20,\n  borderRadius: 10,\n});\n\nconst StyledOrderRows = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 5,\n  paddingTop: 10,\n});\n\nconst StyledOrderRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 14,\n  },\n});\n\nconst StyledOrderText = styled(Typography)({});\n\nconst StyledOrderTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  height: 40,\n  marginBottom: 15,\n});\n\nconst StyledOrderTopCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n","import React, { useState } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { styled } from '@material-ui/styles';\nimport { createTxData, emptyOrdersText, mapTxData } from '../utils';\nimport OrderTx from './OrderTx';\nimport { TxStatus } from '../types';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { IconButton } from '@material-ui/core';\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\nconst data = createTxData();\nconst mappedData = mapTxData(data);\n\nexport default function Orders() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (_event: any, newValue: number) => {\n    setValue(newValue);\n  };\n  const length = Object.keys(mappedData).length;\n\n  return (\n    <StyledContainer>\n      <StyledTabsContainer>\n        <Tabs\n          className='tabs'\n          value={value}\n          onChange={handleChange}\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n        >\n          {Object.keys(mappedData).map((key, index) => {\n            return (\n              <StyledTab\n                style={{\n                  width: `calc(100% / ${length})`,\n                }}\n                label={key}\n                {...a11yProps(index)}\n                key={index}\n              />\n            );\n          })}\n        </Tabs>\n        <IconButton className='refresh' color='secondary'>\n          <CachedIcon />\n        </IconButton>\n      </StyledTabsContainer>\n      {Object.keys(mappedData).map((key, index) => {\n        const isEmpty = !mappedData[key].length;\n        return (\n          <StyledTabPanel value={value} index={index} key={index}>\n            {isEmpty ? (\n              <StyledEmptyListText>\n                {emptyOrdersText[key as TxStatus]}\n              </StyledEmptyListText>\n            ) : (\n              <StyledOrdersList>\n                {mappedData[key].map((tx, index) => {\n                  return (\n                    <OrderTx tx={tx} key={index} status={key as TxStatus} />\n                  );\n                })}\n              </StyledOrdersList>\n            )}\n          </StyledTabPanel>\n        );\n      })}\n    </StyledContainer>\n  );\n}\n\nconst StyledContainer = styled(Box)({\n  width: '100%',\n  marginTop: 20,\n  borderRadius: 10,\n  paddingTop: 10,\n});\n\nconst StyledTabsContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& .tabs': {\n    flex: 1,\n    paddingRight: 50,\n  },\n});\n\nconst StyledTabPanel = styled(TabPanel)({\n  paddingTop: 20,\n});\n\nconst StyledEmptyListText = styled(Typography)({\n  width: '100%',\n  textAlign: 'center',\n  marginTop: 20,\n});\n\nconst StyledOrdersList = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 30,\n  padding: 0,\n  overflow: 'auto',\n  maxHeight: 500,\n});\n\nconst StyledTab = styled(Tab)({\n  minWidth: 'unset',\n  span: {\n    fontSize: 20,\n  },\n});\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Contract } from '@ethersproject/contracts';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport {\n  JSBI,\n  Percent,\n  Router,\n  SwapParameters,\n  Trade,\n  TradeType,\n} from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { GlobalConst } from 'constants/index';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport {\n  calculateGasMargin,\n  isZero,\n  isAddress,\n  shortenAddress,\n  formatTokenAmount,\n} from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { useRouterContract } from 'hooks/useContract';\nimport useENS from 'hooks/useENS';\nimport { Version } from 'hooks/useToggledVersion';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract;\n  parameters: SwapParameters;\n}\n\ninterface SuccessfulCall {\n  call: SwapCall;\n  gasEstimate: BigNumber;\n}\n\ninterface FailedCall {\n  call: SwapCall;\n  error: Error;\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall;\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useTwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = GlobalConst.utils.INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React();\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\n  const recipient =\n    recipientAddressOrName === null ? account : recipientAddress;\n  const deadline = useTransactionDeadline();\n  const contract = useRouterContract();\n\n  return useMemo(() => {\n    const tradeVersion = Version.v2;\n    if (\n      !trade ||\n      !recipient ||\n      !library ||\n      !account ||\n      !tradeVersion ||\n      !chainId\n    )\n      return [];\n\n    if (!contract) {\n      return [];\n    }\n\n    const swapMethods = [];\n\n    switch (tradeVersion) {\n      case Version.v2:\n        swapMethods.push(\n          Router.swapCallParameters(trade, {\n            feeOnTransfer: false,\n            allowedSlippage: new Percent(\n              JSBI.BigInt(allowedSlippage),\n              GlobalConst.utils.BIPS_BASE,\n            ),\n            recipient,\n            ttl: deadline\n              ? deadline.toNumber()\n              : GlobalConst.utils.DEFAULT_DEADLINE_FROM_NOW,\n          }),\n        );\n\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\n          swapMethods.push(\n            Router.swapCallParameters(trade, {\n              feeOnTransfer: true,\n              allowedSlippage: new Percent(\n                JSBI.BigInt(allowedSlippage),\n                GlobalConst.utils.BIPS_BASE,\n              ),\n              recipient,\n              ttl: deadline\n                ? deadline.toNumber()\n                : GlobalConst.utils.DEFAULT_DEADLINE_FROM_NOW,\n            }),\n          );\n        }\n        break;\n    }\n    return swapMethods.map((parameters) => ({ parameters, contract }));\n  }, [\n    account,\n    allowedSlippage,\n    chainId,\n    deadline,\n    library,\n    recipient,\n    trade,\n    contract,\n  ]);\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useTwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = GlobalConst.utils.INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): {\n  state: SwapCallbackState;\n  callback:\n    | null\n    | (() => Promise<{ response: TransactionResponse; summary: string }>);\n  error: string | null;\n} {\n  const { account, chainId, library } = useActiveWeb3React();\n\n  const swapCalls = useTwapCallArguments(\n    trade,\n    allowedSlippage,\n    recipientAddressOrName,\n  );\n\n  const addTransaction = useTransactionAdder();\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\n  const recipient =\n    recipientAddressOrName === null ? account : recipientAddress;\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return {\n        state: SwapCallbackState.INVALID,\n        callback: null,\n        error: 'Missing dependencies',\n      };\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return {\n          state: SwapCallbackState.INVALID,\n          callback: null,\n          error: 'Invalid recipient',\n        };\n      } else {\n        return {\n          state: SwapCallbackState.LOADING,\n          callback: null,\n          error: null,\n        };\n      }\n    }\n\n    const tradeVersion = Version.v2;\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<{\n        response: TransactionResponse;\n        summary: string;\n      }> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call;\n            const options = !value || isZero(value) ? {} : { value };\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate: gasEstimate.add(100000),\n                };\n              })\n              .catch((gasError) => {\n                console.debug(\n                  'Gas estimate failed, trying eth_call to extract error',\n                  call,\n                );\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.debug(\n                      'Unexpected successful call after failed estimate gas',\n                      call,\n                      gasError,\n                      result,\n                    );\n                    return {\n                      call,\n                      error: new Error(\n                        'Unexpected issue with estimating the gas. Please try again.',\n                      ),\n                    };\n                  })\n                  .catch((callError) => {\n                    console.debug('Call threw error', call, callError);\n                    let errorMessage: string;\n                    switch (callError.reason) {\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                        errorMessage =\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.';\n                        break;\n                      default:\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`;\n                    }\n                    return { call, error: new Error(errorMessage) };\n                  });\n              });\n          }),\n        );\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el &&\n            (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        );\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter(\n            (call): call is FailedCall => 'error' in call,\n          );\n          if (errorCalls.length > 0)\n            throw errorCalls[errorCalls.length - 1].error;\n          throw new Error(\n            'Unexpected error. Please contact support: none of the calls threw an error',\n          );\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation;\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value)\n            ? { value, from: account }\n            : { from: account }),\n        })\n          .then((response: TransactionResponse) => {\n            const inputSymbol = trade.inputAmount.currency.symbol;\n            const outputSymbol = trade.outputAmount.currency.symbol;\n            const inputAmount = formatTokenAmount(trade.inputAmount);\n            const outputAmount = formatTokenAmount(trade.outputAmount);\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`;\n\n            const withVersion =\n              tradeVersion === Version.v2\n                ? withRecipient\n                : `${withRecipient} on ${(tradeVersion as any).toUpperCase()}`;\n\n            addTransaction(response, {\n              summary: withVersion,\n            });\n\n            return { response, summary: withVersion };\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.');\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value);\n              throw new Error(`Swap failed: ${error.message}`);\n            }\n          });\n      },\n      error: null,\n    };\n  }, [\n    trade,\n    library,\n    account,\n    chainId,\n    recipient,\n    recipientAddressOrName,\n    swapCalls,\n    addTransaction,\n  ]);\n}\n","import { Box, styled, Typography } from '@material-ui/core';\nimport { CurrencyAmount, Trade } from '@uniswap/sdk';\nimport { useCurrency } from 'hooks/Tokens';\nimport React, { useState } from 'react';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport { togglePriceAmount } from 'state/twap/utils';\n\ninterface Props {\n  inputAmount: CurrencyAmount;\n  outputAmount: CurrencyAmount;\n}\n\nfunction LimitPriceSection({ inputAmount, outputAmount }: Props) {\n  const { calculatedPrice } = useDerivedTwapInfo();\n  const [isReverse, setIsReverse] = useState(false);\n\n  const inCurrency = inputAmount.currency.symbol;\n  const OutCurrency = outputAmount.currency.symbol;\n\n  return (\n    <StyledLimitPrice onClick={() => setIsReverse(!isReverse)}>\n      <Typography>Limit price</Typography>\n      <Typography>\n        {' '}\n        {isReverse ? `1 ${inCurrency} = ` : `1 ${OutCurrency} = `}{' '}\n        {togglePriceAmount(isReverse, calculatedPrice)}{' '}\n        {isReverse ? `${OutCurrency}` : `${inCurrency}`}{' '}\n      </Typography>\n    </StyledLimitPrice>\n  );\n}\n\nexport default LimitPriceSection;\n\nconst StyledLimitPrice = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  height: 50,\n  alignItems: 'center',\n  '& p': {\n    fontSize: 14,\n  },\n});\n","import { Box, styled, Tooltip, Typography } from '@material-ui/core';\nimport { CurrencyAmount } from '@uniswap/sdk';\nimport { CustomTooltip } from 'components';\nimport moment, { Duration } from 'moment';\nimport React from 'react';\nimport { useTwapState } from 'state/twap/hooks';\nimport { formatTokenAmount } from 'utils';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nconst calculateInterval = (value?: number) => {\n  if (!value) {\n    return '0';\n  }\n  const time = moment.duration(value);\n  const days = time.days();\n  const hours = time.hours();\n  const minutes = time.minutes();\n\n  let str = '';\n\n  if (days) {\n    str += `${days} Days `;\n  }\n  if (hours) {\n    str += `${hours} Hours `;\n  }\n  if (minutes) {\n    str += `${minutes} Minutes`;\n  }\n  return str;\n};\n\ninterface Props {\n  outputAmount: CurrencyAmount;\n}\n\nfunction TxDetails({ outputAmount }: Props) {\n  const { duration, totalChunks, interval } = useTwapState();\n\n  return (\n    <StyledDetails className='swapBox bg-secondary2'>\n      <Row\n        title=' Minimum Received:'\n        value={formatTokenAmount(outputAmount)}\n        tooltip='some text'\n      />\n      <Row\n        title='Expiration date:'\n        value={moment()\n          .add(duration.milliseconds, 'milliseconds')\n          .format('DD/MM/YYYY')}\n        tooltip='some text'\n      />\n      <Row title=' Chunks:' value={totalChunks || 0} tooltip='some text' />\n      <Row\n        title=' Interval:'\n        value={calculateInterval(interval.milliseconds)}\n        tooltip='some text'\n      />\n    </StyledDetails>\n  );\n}\n\nexport default TxDetails;\n\nconst StyledDetails = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n  '& p': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: 10,\n    fontSize: 14,\n    '& span': {\n      fontWeight: 600,\n    },\n  },\n});\n\ntype RowProps = {\n  title: string;\n  value: string | number;\n  tooltip?: string;\n};\n\nconst Row = ({ title, value, tooltip }: RowProps) => {\n  return (\n    <StyledRow>\n      {tooltip ? (\n        <CustomTooltip title={tooltip} placement='right'>\n          <Typography>\n            {title} <HelpOutlineIcon style={{ width: 15 }} />\n          </Typography>\n        </CustomTooltip>\n      ) : (\n        <Typography>{title}</Typography>\n      )}\n      <Typography>\n        <span>{value}</span>\n      </Typography>\n    </StyledRow>\n  );\n};\n\nconst StyledRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport React from 'react';\n\nfunction Disclaimer() {\n  return (\n    <StyledContainer className='swapBox bg-secondary2'>\n      <Typography variant='h2'>Real Execution Price:</Typography>\n      <Typography>\n        - Your gas fees are paid for by the spread between your specified Price\n        and the Real Execution Price - Gas fees are volatile and thus the exact\n        market price at which your order will execute is unpredictable - It\n        might take much longer than you expected, to reach the price that fills\n        your order + fees Fee on Transfer Tokens: - Fee on transfer tokens\n        should not be used with this system (use at own risk) Expiry Dates: -\n        Your limit order has an expiry date, after which it might not be\n        executed any more\n      </Typography>\n    </StyledContainer>\n  );\n}\n\nexport default Disclaimer;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 15,\n  '& h2': {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n});\n","import { CurrencyAmount, Trade } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box, Button, styled, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport LimitPriceSection from './LimitPriceSection';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { getTokenValue } from 'state/twap/utils';\nimport TxDetails from './TxDetails';\nimport Disclaimer from './Disclaimer';\n\nconst calculatedOutputAmount = (\n  trade: Trade,\n  typedPriceOutputValue?: string,\n) => {\n  let result;\n  if (typedPriceOutputValue) {\n    result = tryParseAmount(typedPriceOutputValue, trade.outputAmount.currency);\n  }\n  return result || trade.outputAmount;\n};\n\ninterface ModalContentProps {\n  trade: Trade;\n  allowedSlippage: number;\n  showAcceptChanges: boolean;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n}\n\nconst ModalContent: React.FC<ModalContentProps> = ({ trade, onConfirm }) => {\n  const { t } = useTranslation();\n  const { typedPriceOutputValue } = useDerivedTwapInfo();\n\n  const inputAmount = trade.inputAmount;\n  const outputAmount = useMemo(\n    () => calculatedOutputAmount(trade, typedPriceOutputValue),\n    [trade, typedPriceOutputValue],\n  );\n\n  return (\n    <StyledContainer>\n      <StyledCards>\n        <Card currencyAmount={inputAmount} title='From' />\n        <Card currencyAmount={outputAmount} title='To' />\n      </StyledCards>\n      <LimitPriceSection\n        inputAmount={inputAmount}\n        outputAmount={outputAmount}\n      />\n      <TxDetails outputAmount={outputAmount} />\n      <Disclaimer />\n      <Box className='transactionText'>\n        <Button onClick={onConfirm} className='swapButton'>\n          Confirm Order\n        </Button>\n      </Box>\n    </StyledContainer>\n  );\n};\n\nexport default ModalContent;\n\nconst StyledContainer = styled(Box)({});\n\nconst StyledCards = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\ntype CardProps = {\n  currencyAmount: CurrencyAmount;\n  title: string;\n};\n\nconst Card = ({ currencyAmount, title }: CardProps) => {\n  const usdPrice = useUSDCPrice(currencyAmount.currency);\n\n  return (\n    <StyledCard className='swapBox bg-secondary2'>\n      <StyledCardTop>\n        <Typography>{title}</Typography>\n        <Typography>\n          ~$\n          {usdPrice && getTokenValue(usdPrice, currencyAmount)}\n        </Typography>\n      </StyledCardTop>\n      <StyledCardBottom>\n        <StyledCurrency>\n          <CurrencyLogo currency={currencyAmount.currency} size={'24px'} />\n          <Typography>{currencyAmount.currency?.symbol}</Typography>\n        </StyledCurrency>\n        <Typography>{formatTokenAmount(currencyAmount)}</Typography>\n      </StyledCardBottom>\n    </StyledCard>\n  );\n};\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCardBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 18,\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n\nconst StyledCardTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  width: '100%',\n});\n","import { currencyEquals, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  TransactionConfirmationModal,\n  TransactionErrorContent,\n  ConfirmationModalContent,\n} from 'components';\nimport { formatTokenAmount } from 'utils';\nimport 'components/styles/ConfirmSwapModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport ModalContent from './ModalContent';\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(\n      tradeA.outputAmount.currency,\n      tradeB.outputAmount.currency,\n    ) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  );\n}\n\ninterface ConfirmTwapModalProps {\n  isOpen: boolean;\n  trade: Trade | undefined;\n  originalTrade: Trade | undefined;\n  attemptingTxn: boolean;\n  txPending?: boolean;\n  txHash: string | undefined;\n  recipient: string | null;\n  allowedSlippage: number;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n  swapErrorMessage: string | undefined;\n  onDismiss: () => void;\n}\n\nconst ConfirmTwapModal: React.FC<ConfirmTwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  txPending,\n}) => {\n  const { t } = useTranslation();\n  const showAcceptChanges = useMemo(\n    () =>\n      Boolean(\n        trade &&\n          originalTrade &&\n          tradeMeaningfullyDiffers(trade, originalTrade),\n      ),\n    [originalTrade, trade],\n  );\n\n  const modalContent = useCallback(() => {\n    return trade ? (\n      <ModalContent\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        onConfirm={onConfirm}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null;\n  }, [allowedSlippage, onAcceptChanges, showAcceptChanges, trade, onConfirm]);\n\n  // text to show while loading\n  const pendingText = t('swappingFor', {\n    amount1: formatTokenAmount(trade?.inputAmount),\n    symbol1: trade?.inputAmount?.currency?.symbol,\n    amount2: formatTokenAmount(trade?.outputAmount),\n    symbol2: trade?.outputAmount?.currency?.symbol,\n  });\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <ConfirmationModalContent\n          title={t('confirmTx')}\n          onDismiss={onDismiss}\n          content={modalContent}\n        />\n      ),\n    [t, onDismiss, modalContent, swapErrorMessage],\n  );\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      txPending={txPending}\n      content={confirmationContent}\n      pendingText={pendingText}\n      modalContent={txPending ? t('submittedTxSwap') : t('swapSuccess')}\n    />\n  );\n};\n\nexport default ConfirmTwapModal;\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { Currency, CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk';\nimport ReactGA from 'react-ga';\nimport { ArrowDown } from 'react-feather';\nimport { Box, Button, CircularProgress, styled } from '@material-ui/core';\nimport { useWalletModalToggle } from 'state/application/hooks';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport {\n  useExpertModeManager,\n  useUserSlippageTolerance,\n} from 'state/user/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { CurrencyInput, AdvancedSwapDetails, AddressInput } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport {\n  ApprovalState,\n  useApproveCallbackFromTrade,\n} from 'hooks/useApproveCallback';\nimport { useTransactionFinalizer } from 'state/transactions/hooks';\nimport useENSAddress from 'hooks/useENSAddress';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport useToggledVersion, { Version } from 'hooks/useToggledVersion';\nimport {\n  addMaticToMetamask,\n  isSupportedNetwork,\n  confirmPriceImpactWithoutFee,\n  maxAmountSpend,\n} from 'utils';\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { ReactComponent as ExchangeIcon } from 'assets/images/ExchangeIcon.svg';\nimport 'components/styles/Swap.scss';\nimport { useTranslation } from 'react-i18next';\nimport PriceInput from './PriceInput';\nimport Duration from './Duration';\nimport Interval from './Interval';\nimport ChunkSize from './ChunkSize';\nimport { BigNumber } from 'ethers';\nimport ErrorNotification from './ErrorNotification';\nimport Orders from './Orders/Orders';\nimport { useTwapCallback } from './useTwapCallback';\nimport ConfirmTwapModal from './ConfirmTwapModal';\n\nconst Twap: React.FC<{\n  currency0?: Currency;\n  currency1?: Currency;\n  currencyBgClass?: string;\n}> = ({ currency0, currency1, currencyBgClass }) => {\n  const { t } = useTranslation();\n  const { account } = useActiveWeb3React();\n  const { independentField, typedValue, recipient } = useTwapState();\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    typedPriceOutputValue,\n  } = useDerivedTwapInfo();\n\n  const toggledVersion = useToggledVersion();\n  const finalizedTransaction = useTransactionFinalizer();\n  const [isExpertMode] = useExpertModeManager();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue,\n  );\n  const allTokens = useAllTokens();\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n  const tradesByVersion = {\n    [Version.v1]: v1Trade,\n    [Version.v2]: v2Trade,\n  };\n\n  const trade = showWrap ? undefined : tradesByVersion[toggledVersion];\n\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n    onInInputChange,\n  } = useTwapActionHandlers();\n\n  const { address: recipientAddress } = useENSAddress(recipient);\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const [approving, setApproving] = useState(false);\n  const [approval, approveCallback] = useApproveCallbackFromTrade(\n    trade,\n    allowedSlippage,\n  );\n\n  console.log({ approval });\n\n  const dependentField: Field =\n    independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const parsedAmounts = useMemo(() => {\n    return showWrap\n      ? {\n          [Field.INPUT]: parsedAmount,\n          [Field.OUTPUT]: parsedAmount,\n        }\n      : {\n          [Field.INPUT]:\n            independentField === Field.INPUT\n              ? parsedAmount\n              : trade?.inputAmount,\n          [Field.OUTPUT]:\n            independentField === Field.OUTPUT\n              ? parsedAmount\n              : trade?.outputAmount,\n        };\n  }, [parsedAmount, independentField, trade, showWrap]);\n\n  const formattedAmounts = useMemo(() => {\n    return {\n      [independentField]: typedValue,\n      [dependentField]: showWrap\n        ? parsedAmounts[independentField]?.toExact() ?? ''\n        : parsedAmounts[dependentField]?.toExact() ?? '',\n    };\n  }, [independentField, typedValue, dependentField, showWrap, parsedAmounts]);\n\n  const route = trade?.route;\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] &&\n      currencies[Field.OUTPUT] &&\n      parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  );\n  const noRoute = !route;\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n  const { ethereum } = window as any;\n  const [mainPrice, setMainPrice] = useState(true);\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n  const isValid = !swapInputError;\n\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode);\n\n  const toggleWalletModal = useWalletModalToggle();\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const connectWallet = () => {\n    if (ethereum && !isSupportedNetwork(ethereum)) {\n      addMaticToMetamask();\n    } else {\n      toggleWalletModal();\n    }\n  };\n\n  const handleCurrencySelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection],\n  );\n\n  const handleOtherCurrencySelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection],\n  );\n\n  const { callback: twapCallback, error: twapCallbackError } = useTwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n  );\n\n  const swapButtonText = useMemo(() => {\n    if (account) {\n      if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n        return t('selectToken');\n      } else if (\n        formattedAmounts[Field.INPUT] === '' &&\n        formattedAmounts[Field.OUTPUT] === ''\n      ) {\n        return t('enterAmount');\n      } else if (showWrap) {\n        return wrapType === WrapType.WRAP\n          ? t('wrap')\n          : wrapType === WrapType.UNWRAP\n          ? t('unWrap')\n          : '';\n      } else if (noRoute && userHasSpecifiedInputOutput) {\n        return t('insufficientLiquidityTrade');\n      } else {\n        return swapInputError ?? 'Place order';\n      }\n    } else {\n      return ethereum && !isSupportedNetwork(ethereum)\n        ? t('switchPolygon')\n        : t('connectWallet');\n    }\n  }, [\n    t,\n    formattedAmounts,\n    currencies,\n    account,\n    ethereum,\n    noRoute,\n    userHasSpecifiedInputOutput,\n    showWrap,\n    wrapType,\n    swapInputError,\n  ]);\n\n  const twapButtonDisabled = useMemo(() => {\n    if (account) {\n      if (showWrap) {\n        return Boolean(wrapInputError);\n      } else if (noRoute && userHasSpecifiedInputOutput) {\n        return true;\n      } else if (showApproveFlow) {\n        return (\n          !isValid ||\n          approval !== ApprovalState.APPROVED ||\n          (priceImpactSeverity > 3 && !isExpertMode)\n        );\n      } else {\n        return (\n          !isValid ||\n          (priceImpactSeverity > 3 && !isExpertMode) ||\n          !!twapCallbackError\n        );\n      }\n    } else {\n      return false;\n    }\n  }, [\n    account,\n    showWrap,\n    wrapInputError,\n    noRoute,\n    userHasSpecifiedInputOutput,\n    showApproveFlow,\n    approval,\n    priceImpactSeverity,\n    isValid,\n    twapCallbackError,\n    isExpertMode,\n  ]);\n\n  const [\n    {\n      showConfirm,\n      txPending,\n      tradeToConfirm,\n      swapErrorMessage,\n      attemptingTxn,\n      txHash,\n    },\n    setTwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    txPending?: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    txPending: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value);\n    },\n    [onUserInput],\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value);\n    },\n    [onUserInput],\n  );\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(\n    currencyBalances[Field.INPUT],\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleHalfInput = useCallback(() => {\n    maxAmountInput &&\n      onUserInput(\n        Field.INPUT,\n        (Number(maxAmountInput.toExact()) / 2).toString(),\n      );\n  }, [maxAmountInput, onUserInput]);\n\n  const atMaxAmountInput = Boolean(\n    maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput),\n  );\n\n  const onSwap = () => {\n    if (showWrap && onWrap) {\n      onWrap();\n    } else if (isExpertMode) {\n      handleTwap();\n    } else {\n      setTwapState({\n        tradeToConfirm: trade,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        showConfirm: true,\n        txHash: undefined,\n      });\n    }\n  };\n\n  useEffect(() => {\n    onCurrencySelection(Field.INPUT, Token.ETHER);\n  }, [onCurrencySelection, allTokens]);\n\n  useEffect(() => {\n    if (currency0) {\n      onCurrencySelection(Field.INPUT, currency0);\n    }\n    if (currency1) {\n      onCurrencySelection(Field.OUTPUT, currency1);\n    }\n  }, [onCurrencySelection, currency0, currency1]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setTwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setTwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleTwap = useCallback(() => {\n    if (\n      priceImpactWithoutFee &&\n      !confirmPriceImpactWithoutFee(priceImpactWithoutFee)\n    ) {\n      return;\n    }\n    if (!twapCallback) {\n      return;\n    }\n    setTwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined,\n    });\n    twapCallback()\n      .then(async ({ response, summary }) => {\n        setTwapState({\n          attemptingTxn: false,\n          txPending: true,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: undefined,\n          txHash: response.hash,\n        });\n\n        try {\n          const receipt = await response.wait();\n          finalizedTransaction(receipt, {\n            summary,\n          });\n          setTwapState({\n            attemptingTxn: false,\n            txPending: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: undefined,\n            txHash: response.hash,\n          });\n          ReactGA.event({\n            category: 'Swap',\n            action:\n              recipient === null\n                ? 'Swap w/o Send'\n                : (recipientAddress ?? recipient) === account\n                ? 'Swap w/o Send + recipient'\n                : 'Swap w/ Send',\n            label: [\n              trade?.inputAmount?.currency?.symbol,\n              trade?.outputAmount?.currency?.symbol,\n            ].join('/'),\n          });\n        } catch (error) {\n          setTwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: (error as any).message,\n            txHash: undefined,\n          });\n        }\n      })\n      .catch((error) => {\n        setTwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [\n    tradeToConfirm,\n    account,\n    priceImpactWithoutFee,\n    recipient,\n    recipientAddress,\n    showConfirm,\n    twapCallback,\n    finalizedTransaction,\n    trade,\n  ]);\n\n  const inInputAmount = formattedAmounts[Field.INPUT];\n  const inInputCurrency = currencies[Field.INPUT];\n\n  useEffect(() => {\n    onInInputChange(inInputAmount, inInputCurrency);\n  }, [inInputAmount, inInputCurrency, onInInputChange]);\n\n  return (\n    <Box>\n      <ErrorNotification />\n      {showConfirm && (\n        <ConfirmTwapModal\n          isOpen={showConfirm}\n          trade={trade}\n          originalTrade={tradeToConfirm}\n          onAcceptChanges={handleAcceptChanges}\n          attemptingTxn={attemptingTxn}\n          txPending={txPending}\n          txHash={txHash}\n          recipient={recipient}\n          allowedSlippage={allowedSlippage}\n          onConfirm={handleTwap}\n          swapErrorMessage={swapErrorMessage}\n          onDismiss={handleConfirmDismiss}\n        />\n      )}\n      <CurrencyInput\n        title={`${t('from')}:`}\n        id='swap-currency-input'\n        currency={currencies[Field.INPUT]}\n        onHalf={handleHalfInput}\n        onMax={handleMaxInput}\n        showHalfButton={true}\n        showMaxButton={!atMaxAmountInput}\n        otherCurrency={currencies[Field.OUTPUT]}\n        handleCurrencySelect={handleCurrencySelect}\n        amount={formattedAmounts[Field.INPUT]}\n        setAmount={handleTypeInput}\n        bgClass={currencyBgClass}\n      />\n      <PriceInput />\n      <Duration />\n      <ChunkSize currency={currencies[Field.INPUT]} />\n      <Interval />\n      <Box className='exchangeSwap'>\n        <ExchangeIcon onClick={onSwitchTokens} />\n      </Box>\n      <CurrencyInput\n        title={`${t('toEstimate')}:`}\n        id='swap-currency-output'\n        currency={currencies[Field.OUTPUT]}\n        showPrice={Boolean(trade && trade.executionPrice)}\n        showMaxButton={false}\n        otherCurrency={currencies[Field.INPUT]}\n        handleCurrencySelect={handleOtherCurrencySelect}\n        amount={typedPriceOutputValue || formattedAmounts[Field.OUTPUT]}\n        setAmount={handleTypeOutput}\n        bgClass={currencyBgClass}\n      />\n      {trade && trade.executionPrice && (\n        <Box className='swapPrice'>\n          <small>{t('price')}:</small>\n          <small>\n            1{' '}\n            {\n              (mainPrice ? currencies[Field.INPUT] : currencies[Field.OUTPUT])\n                ?.symbol\n            }{' '}\n            ={' '}\n            {(mainPrice\n              ? trade.executionPrice\n              : trade.executionPrice.invert()\n            ).toSignificant(6)}{' '}\n            {\n              (mainPrice ? currencies[Field.OUTPUT] : currencies[Field.INPUT])\n                ?.symbol\n            }{' '}\n            <PriceExchangeIcon\n              onClick={() => {\n                setMainPrice(!mainPrice);\n              }}\n            />\n          </small>\n        </Box>\n      )}\n      {!showWrap && isExpertMode && (\n        <Box className='recipientInput'>\n          <Box className='recipientInputHeader'>\n            {recipient !== null ? (\n              <ArrowDown size='16' color='white' />\n            ) : (\n              <Box />\n            )}\n            <Button\n              onClick={() => onChangeRecipient(recipient !== null ? null : '')}\n            >\n              {recipient !== null\n                ? `- ${t('removeSend')}`\n                : `+ ${t('addSendOptional')}`}\n            </Button>\n          </Box>\n          {recipient !== null && (\n            <AddressInput\n              label={t('recipient')}\n              placeholder={t('walletOrENS')}\n              value={recipient}\n              onChange={onChangeRecipient}\n            />\n          )}\n        </Box>\n      )}\n      <Box className='swapButtonWrapper'>\n        {showApproveFlow && (\n          <Box width='48%'>\n            <Button\n              fullWidth\n              disabled={\n                approving ||\n                approval !== ApprovalState.NOT_APPROVED ||\n                approvalSubmitted\n              }\n              onClick={async () => {\n                setApproving(true);\n                try {\n                  await approveCallback();\n                  setApproving(false);\n                } catch (err) {\n                  setApproving(false);\n                }\n              }}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Box className='content'>\n                  {t('approving')} <CircularProgress size={16} />\n                </Box>\n              ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                t('approved')\n              ) : (\n                `${t('approve')} ${currencies[Field.INPUT]?.symbol}`\n              )}\n            </Button>\n          </Box>\n        )}\n        <StyledButtonContainer width={showApproveFlow ? '48%' : '100%'}>\n          <Button\n            fullWidth\n            disabled={twapButtonDisabled as boolean}\n            onClick={account ? onSwap : connectWallet}\n          >\n            {swapButtonText}\n          </Button>\n        </StyledButtonContainer>\n      </Box>\n      <Orders />\n    </Box>\n  );\n};\n\nexport default Twap;\n\nconst StyledButtonContainer = styled(Box)({\n  '& .Mui-disabled': {\n    backgroundImage: 'unset!important',\n    color: 'white!important',\n  },\n});\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SettingsIcon } from 'assets/images/SettingsIcon.svg';\nimport { useIsProMode } from 'state/application/hooks';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { useCurrency } from 'hooks/Tokens';\nimport { Swap, SettingsModal, ToggleSwitch } from 'components';\nimport {\n  GelatoLimitOrderPanel,\n  GelatoLimitOrdersHistoryPanel,\n} from '@gelatonetwork/limit-orders-react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Twap from './Twap/Twap';\n\nconst SWAP_NORMAL = 0;\nconst SWAP_LIMIT = 1;\nconst TWAP = 2;\n\nconst SwapMain: React.FC = () => {\n  const [swapIndex, setSwapIndex] = useState(SWAP_NORMAL);\n  const [openSettingsModal, setOpenSettingsModal] = useState(false);\n  const { isProMode, updateIsProMode } = useIsProMode();\n\n  const parsedQuery = useParsedQueryString();\n  const currency0 = useCurrency(\n    parsedQuery && parsedQuery.currency0\n      ? (parsedQuery.currency0 as string)\n      : undefined,\n  );\n  const currency1 = useCurrency(\n    parsedQuery && parsedQuery.currency1\n      ? (parsedQuery.currency1 as string)\n      : undefined,\n  );\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {openSettingsModal && (\n        <SettingsModal\n          open={openSettingsModal}\n          onClose={() => setOpenSettingsModal(false)}\n        />\n      )}\n      <Box\n        className={`flex flex-wrap items-center justify-between ${\n          isProMode ? ' proModeWrapper' : ''\n        }`}\n      >\n        <Box display='flex'>\n          <Box\n            className={`${\n              swapIndex === SWAP_NORMAL ? 'activeSwap' : ''\n            } swapItem headingItem\n            `}\n            onClick={() => setSwapIndex(SWAP_NORMAL)}\n          >\n            <p>{t('market')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === SWAP_LIMIT ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(SWAP_LIMIT)}\n          >\n            <p>{t('limit')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === TWAP ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(TWAP)}\n          >\n            <p>{t('twap')}</p>\n          </Box>\n        </Box>\n        <Box my={1} className='flex items-center'>\n          {!isProMode && (\n            <Box className='flex items-center' mr={1}>\n              <span\n                className='text-secondary text-uppercase'\n                style={{ marginRight: 8 }}\n              >\n                {t('proMode')}\n              </span>\n              <ToggleSwitch\n                toggled={isProMode}\n                onToggle={() => updateIsProMode(!isProMode)}\n              />\n            </Box>\n          )}\n          <Box className='headingItem' marginRight={isProMode ? 2.5 : 0}>\n            <SettingsIcon onClick={() => setOpenSettingsModal(true)} />\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={isProMode ? '0 24px' : '0'} mt={3.5}>\n        {swapIndex === SWAP_NORMAL && (\n          <Swap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n        {swapIndex === SWAP_LIMIT && (\n          <Box className='limitOrderPanel'>\n            <GelatoLimitOrderPanel />\n            <GelatoLimitOrdersHistoryPanel />\n            <Box mt={2} textAlign='center'>\n              <small>\n                <Trans\n                  i18nKey='limitOrderDisclaimer'\n                  components={{\n                    bold: <b />,\n                    alink: (\n                      <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://www.certik.org/projects/gelato'\n                      />\n                    ),\n                  }}\n                />\n              </small>\n            </Box>\n          </Box>\n        )}\n        {swapIndex === TWAP && (\n          <Twap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default SwapMain;\n","import React from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { GlobalConst } from 'constants/index';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatCompact, getDaysCurrentYear } from 'utils';\nimport { useCurrency } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\n\nconst LiquidityPoolRow: React.FC<{\n  pair: any;\n  key: number;\n}> = ({ pair, key }) => {\n  const { breakpoints } = useTheme();\n  const daysCurrentYear = getDaysCurrentYear();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const { t } = useTranslation();\n\n  const dayVolumeUSD =\n    Number(\n      pair.oneDayVolumeUSD ? pair.oneDayVolumeUSD : pair.oneDayVolumeUntracked,\n    ) *\n    GlobalConst.utils.FEEPERCENT *\n    daysCurrentYear *\n    100;\n  const trackReserveUSD = Number(\n    pair.oneDayVolumeUSD ? pair.trackedReserveUSD : pair.reserveUSD,\n  );\n  const apy =\n    isNaN(dayVolumeUSD) || trackReserveUSD === 0\n      ? 0\n      : dayVolumeUSD / trackReserveUSD;\n  const liquidity = pair.trackedReserveUSD\n    ? pair.trackedReserveUSD\n    : pair.reserveUSD;\n  const volume = pair.oneDayVolumeUSD\n    ? pair.oneDayVolumeUSD\n    : pair.oneDayVolumeUntracked;\n  const token0 = useCurrency(pair.token0.id);\n  const token1 = useCurrency(pair.token1.id);\n  return (\n    <Box key={key} className='liquidityContent'>\n      <Box className='flex items-center' width={isMobile ? 1 : 0.5}>\n        <DoubleCurrencyLogo\n          currency0={token0 ?? undefined}\n          currency1={token1 ?? undefined}\n          size={28}\n        />\n        <small style={{ marginLeft: 12 }}>\n          {pair.token0.symbol.toUpperCase()} /{' '}\n          {pair.token1.symbol.toUpperCase()}\n        </small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.2}\n        mt={isMobile ? 2.5 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('tvl')}</small>}\n        <small>${formatCompact(liquidity)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('24hVol')}</small>}\n        <small>${formatCompact(volume)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className={`flex ${isMobile ? 'justify-between' : 'justify-end'}`}\n      >\n        {isMobile && <small className='text-secondary'>{t('apy')}</small>}\n        <small\n          className={`text-right ${apy < 0 ? 'text-error' : 'text-success'}`}\n        >\n          {apy.toFixed(2)}%\n        </small>\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(LiquidityPoolRow);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport { Token } from '@uniswap/sdk';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst LiquidityPools: React.FC<{\n  token1: Token;\n  token2: Token;\n}> = ({ token1, token2 }) => {\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const { t } = useTranslation();\n  const { ethPrice } = useEthPrice();\n\n  const liquidityPairs = useMemo(\n    () =>\n      tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              if (liquidityFilterIndex === 0) {\n                return true;\n              } else if (liquidityFilterIndex === 1) {\n                return (\n                  pair.token0.id === token1Address ||\n                  pair.token1.id === token1Address\n                );\n              } else {\n                return (\n                  pair.token0.id === token2Address ||\n                  pair.token1.id === token2Address\n                );\n              }\n            })\n            .slice(0, 5)\n        : [],\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\n  );\n\n  const whiteListAddressList = useMemo(\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\n    [allTokenList],\n  );\n\n  useEffect(() => {\n    if (!ethPrice.price) return;\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n\n      const formattedPairs = tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              return (\n                whiteListAddressList.includes(pair?.token0?.id) &&\n                whiteListAddressList.includes(pair?.token1?.id)\n              );\n            })\n            .map((pair: any) => {\n              return pair.id;\n            })\n        : [];\n\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n\n  return (\n    <>\n      <Box\n        className='flex items-center justify-between'\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\n      >\n        <Box className='flex items-center'>\n          <p className='weight-600' style={{ marginRight: 8 }}>\n            {t('liquidityPools')}\n          </p>\n          <small className='text-secondary'>\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\n          </small>\n        </Box>\n        <Box\n          className='flex cursor-pointer text-secondary'\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\n        >\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n        </Box>\n      </Box>\n      {!liquidityPoolClosed && (\n        <>\n          <Divider />\n          <Box width={1}>\n            <Box padding={2} className='flex liquidityMain'>\n              <Box width={0.5} className='flex liquidityFilter'>\n                <small\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(0)}\n                >\n                  {t('all')}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(1)}\n                >\n                  {token1.symbol?.toUpperCase()}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(2)}\n                >\n                  {token2.symbol?.toUpperCase()}\n                </small>\n              </Box>\n              {!isMobile && (\n                <>\n                  <Box width={0.2}>\n                    <small>{t('tvl')}</small>\n                  </Box>\n                  <Box width={0.15}>\n                    <small>{t('24hVol')}</small>\n                  </Box>\n                  <Box width={0.15} className='text-right'>\n                    <small>{t('apy')}</small>\n                  </Box>\n                </>\n              )}\n            </Box>\n            {liquidityPairs.map((pair: any, ind: any) => (\n              <LiquidityPoolRow pair={pair} key={ind} />\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LiquidityPools;\n","import React from 'react';\n\nconst SwapProChart: React.FC<{\n  pairName: string;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n}> = ({ pairAddress, pairName, pairTokenReversed }) => {\n  return (\n    <iframe\n      src={`https://mode.quickswap.exchange?pairAddress=${pairAddress}&pairName=${pairName}&tokenReversed=${pairTokenReversed}`}\n      height='100%'\n      width='100%'\n      frameBorder='0'\n    />\n  );\n};\n\nexport default React.memo(SwapProChart);\n","import React from 'react';\nimport SwapProChart from './SwapProChart';\nimport { Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { Height } from '@material-ui/icons';\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex';\nimport 'react-reflex/styles.css';\nimport { formatNumber, shortenTx, getEtherscanLink } from 'utils';\nimport dayjs from 'dayjs';\nimport { useActiveWeb3React } from 'hooks';\nimport { TableVirtuoso } from 'react-virtuoso';\nimport { useTranslation } from 'react-i18next';\n\nconst SwapProChartTrade: React.FC<{\n  showChart: boolean;\n  showTrades: boolean;\n  token1: Token;\n  token2: Token;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n  transactions?: any[];\n}> = ({\n  showChart,\n  showTrades,\n  token1,\n  token2,\n  pairAddress,\n  pairTokenReversed,\n  transactions,\n}) => {\n  const { chainId } = useActiveWeb3React();\n  const { t } = useTranslation();\n\n  const TradesTable = () => (\n    <TableVirtuoso\n      data={transactions}\n      components={{\n        Table: ({ ...props }) => <table className='tradeTable' {...props} />,\n      }}\n      fixedHeaderContent={() => (\n        <tr>\n          <th align='left'>{t('date')}</th>\n          <th align='left'>{t('type')}</th>\n          <th align='right'>{t('usd')}</th>\n          <th align='right'>{token1.symbol}</th>\n          <th align='right'>{token2.symbol}</th>\n          <th align='right'>{t('price')}</th>\n          <th align='right'>{t('txn')}</th>\n        </tr>\n      )}\n      itemContent={(index, tx) => {\n        const txType = Number(tx.amount0In) > 0 ? 'sell' : 'buy';\n        const txAmount0 =\n          Number(tx.amount0In) > 0 ? tx.amount0In : tx.amount0Out;\n        const txAmount1 =\n          Number(tx.amount1In) > 0 ? tx.amount1In : tx.amount1Out;\n        const token1Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount0\n            : txAmount1;\n        const token2Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount1\n            : txAmount0;\n        const txPrice = Number(tx.amountUSD) / token1Amount;\n        return (\n          <>\n            <td align='left'>\n              {dayjs\n                .unix(tx.transaction.timestamp)\n                .format('MMM DD, hh:mm:ss a')}\n            </td>\n            <td className={txType} align='left'>\n              {txType.toUpperCase()}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(tx.amountUSD)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token1Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token2Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(txPrice)}\n            </td>\n            <td className={txType} align='right'>\n              {chainId ? (\n                <a\n                  href={getEtherscanLink(\n                    chainId,\n                    tx.transaction.id,\n                    'transaction',\n                  )}\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  {shortenTx(tx.transaction.id)}\n                </a>\n              ) : (\n                shortenTx(tx.transaction.id)\n              )}\n            </td>\n          </>\n        );\n      }}\n    />\n  );\n\n  return (\n    <ReflexContainer orientation='horizontal'>\n      {showChart && (\n        <ReflexElement className='top-pane' minSize={200}>\n          <SwapProChart\n            pairName={`${token1.symbol}/${token2.symbol}`}\n            pairAddress={pairAddress}\n            pairTokenReversed={pairTokenReversed}\n          />\n        </ReflexElement>\n      )}\n      {showChart && showTrades && (\n        <ReflexSplitter>\n          <Box\n            width={1}\n            height='2px'\n            className='flex justify-center items-center'\n          >\n            <Height />\n          </Box>\n        </ReflexSplitter>\n      )}\n      {showTrades && (\n        <ReflexElement className='bottom-pane' minSize={200}>\n          <TradesTable />\n        </ReflexElement>\n      )}\n    </ReflexContainer>\n  );\n};\n\nexport default React.memo(SwapProChartTrade);\n","import React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\ndayjs.extend(utc);\n\nconst SwapInfoTx: React.FC<{\n  transactions?: any[];\n}> = ({ transactions }) => {\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime\n    .subtract(subtractTimeAmount, subtractTimeType)\n    .unix();\n\n  const filteredTxs = transactions?.filter(\n    (tx) => tx.transaction.timestamp >= firstTime,\n  );\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\n  const volume = filteredTxs\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\n    : undefined;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ButtonSwitch\n        height={32}\n        value={txFilter}\n        onChange={setTxFilter}\n        items={[\n          { label: `5${t('min')}`, value: '5_minute' },\n          { label: `1${t('hour')}`, value: '1_hour' },\n          { label: `6${t('hour')}`, value: '6_hour' },\n          { label: `24${t('hour')}`, value: '24_hour' },\n        ]}\n      />\n      <Box className='swapTxInfo'>\n        <Box>\n          <small className='text-secondary'>{t('transactions')}:</small>\n          {filteredTxs ? (\n            <small>{filteredTxs.length}</small>\n          ) : (\n            <Skeleton width={60} height={14} />\n          )}\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('buys')}:</small>\n          <small>\n            {filteredBuyTxs ? (\n              filteredBuyTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('sells')}:</small>\n          <small>\n            {filteredSellTxs ? (\n              filteredSellTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('volume')}:</small>\n          <small>\n            {filteredTxs ? (\n              volume > 1000 ? (\n                formatCompact(volume)\n              ) : (\n                formatNumber(volume)\n              )\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default React.memo(SwapInfoTx);\n","import React, { useState, useEffect } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { SwapHoriz } from '@material-ui/icons';\nimport { Currency, Token } from '@uniswap/sdk';\nimport { CurrencyLogo } from 'components';\nimport { getTokenInfo, formatNumber } from 'utils';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwapInfoTx from './SwapInfoTx';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst SwapProInfo: React.FC<{\n  token1?: Token;\n  token2?: Token;\n  transactions?: any[];\n}> = ({ token1, token2, transactions }) => {\n  const { t } = useTranslation();\n  const [token1Data, setToken1Data] = useState<any>(null);\n  const [token2Data, setToken2Data] = useState<any>(null);\n  const token1Address = token1?.address;\n  const token2Address = token2?.address;\n  const currency1 = token1 ? unwrappedToken(token1) : undefined;\n  const currency2 = token2 ? unwrappedToken(token2) : undefined;\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    (async () => {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        if (token1Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token1Address,\n          );\n          if (tokenInfo) {\n            setToken1Data(tokenInfo[0]);\n          }\n        }\n        if (token2Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token2Address,\n          );\n          if (tokenInfo) {\n            setToken2Data(tokenInfo[0]);\n          }\n        }\n      }\n    })();\n  }, [token1Address, token2Address, ethPrice.price, ethPrice.oneDayPrice]);\n\n  const TokenInfo: React.FC<{ currency: Currency; tokenData: any }> = ({\n    currency,\n    tokenData,\n  }) => {\n    const priceUpPercent = Number(tokenData?.priceChangeUSD);\n    return (\n      <>\n        <Box p={1} display='flex'>\n          <CurrencyLogo currency={currency} />\n          <Box ml={1} flex={1}>\n            <Box className='flex justify-between'>\n              <small>{currency.symbol}</small>\n              {tokenData ? (\n                <small>${formatNumber(tokenData?.priceUSD)}</small>\n              ) : (\n                <Skeleton width={60} height={14} />\n              )}\n            </Box>\n            {tokenData ? (\n              <span>\n                {t('24h')}:{' '}\n                <span\n                  className={priceUpPercent > 0 ? 'text-success' : 'text-error'}\n                >\n                  {formatNumber(priceUpPercent)}%\n                </span>\n              </span>\n            ) : (\n              <Skeleton width={60} height={12} />\n            )}\n          </Box>\n        </Box>\n        <Divider />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Box p={1}>\n        <p className='text-uppercase'>{t('info')}:</p>\n      </Box>\n      <Divider />\n      {currency1 && <TokenInfo currency={currency1} tokenData={token1Data} />}\n      {currency2 && <TokenInfo currency={currency2} tokenData={token2Data} />}\n      {currency1 && currency2 && (\n        <>\n          <Box py={2} px={1}>\n            <Box mb={1} px={1} className='flex items-center justify-between'>\n              <small>\n                {currency1.symbol} / {currency2.symbol}\n              </small>\n              <Box className='swapIcon'>\n                <SwapHoriz />\n              </Box>\n            </Box>\n            <SwapInfoTx transactions={transactions} />\n          </Box>\n          <Divider />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SwapProInfo);\n","import React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface SwapProFilterProps {\n  infoPos: string;\n  setInfoPos: (pos: string) => void;\n  showChart: boolean;\n  setShowChart: (value: boolean) => void;\n  showTrades: boolean;\n  setShowTrades: (value: boolean) => void;\n}\n\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\n  infoPos,\n  setInfoPos,\n  showChart,\n  setShowChart,\n  showTrades,\n  setShowTrades,\n}) => {\n  const { t } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n\n  const infoPosItems = swapPositions.map((pos) => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos,\n    };\n  });\n\n  return (\n    <Box className='swapFilter'>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showChart}\n          disabled={!showTrades}\n          onChange={(evt) => setShowChart(evt.target.checked)}\n        />\n        <small>{t('chart')}</small>\n      </Box>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showTrades}\n          disabled={!showChart}\n          onChange={(evt) => setShowTrades(evt.target.checked)}\n        />\n        <small>{t('trades')}</small>\n      </Box>\n      <Box className='flex items-center'>\n        <small className='text-uppercase'>{t('info')}:</small>\n        <Box ml={1}>\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\n        </Box>\n      </Box>\n      <Box\n        className='replayButton'\n        onClick={() => {\n          setInfoPos(t('right'));\n          setShowChart(true);\n          setShowTrades(true);\n        }}\n      >\n        <Replay />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwapProFilter;\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\n\nconst SwapPage: React.FC = () => {\n  const { isProMode, updateIsProMode } = useIsProMode();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState<any[] | undefined>(\n    undefined,\n  );\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [infoPos, setInfoPos] = useState('right');\n\n  const { currencies } = useDerivedSwapInfo();\n  const { chainId } = useActiveWeb3React();\n\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\n\n  // this is for refreshing data of trades table every 60 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const _currentTime = Math.floor(Date.now() / 1000);\n      setCurrentTime(_currentTime);\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    async function getPairId(token1Address: string, token2Address: string) {\n      const pairData = await getPairAddress(token1Address, token2Address);\n      if (pairData) {\n        setPairTokenReversed(pairData.tokenReversed);\n        setPairId(pairData.pairId);\n      }\n    }\n    if (token1?.address && token2?.address) {\n      getPairId(token1?.address, token2?.address);\n    }\n  }, [token1?.address, token2?.address]);\n\n  useEffect(() => {\n    (async () => {\n      if (pairId && transactions && transactions.length > 0) {\n        const txns = await getSwapTransactions(\n          pairId,\n          Number(transactions[0].transaction.timestamp),\n        );\n        if (txns) {\n          const filteredTxns = txns.filter(\n            (txn) =>\n              !transactions.filter(\n                (tx) => tx.transaction.id === txn.transaction.id,\n              ).length,\n          );\n          setTransactions([...filteredTxns, ...transactions]);\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentTime]);\n\n  useEffect(() => {\n    async function getTradesData(pairId: string) {\n      setTransactions(undefined);\n      const transactions = await getSwapTransactions(pairId);\n      setTransactions(transactions);\n    }\n    if (pairId && isProMode) {\n      getTradesData(pairId);\n    }\n  }, [pairId, isProMode]);\n\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3} id='swap-page'>\n      {!isProMode && (\n        <Box className='pageHeading'>\n          <h4>{t('swap')}</h4>\n          <Box className='helpWrapper'>\n            <small>{t('help')}</small>\n            <HelpIcon />\n          </Box>\n        </Box>\n      )}\n      {!isProMode ? (\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={12} md={6} lg={5}>\n            <Box className='wrapper'>\n              <SwapMain />\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={7}>\n            <Box className='flex flex-wrap justify-between fullWidth'>\n              {token1 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token1} />\n                </Box>\n              )}\n              {token2 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token2} />\n                </Box>\n              )}\n            </Box>\n            {token1 && token2 && (\n              <Box className='wrapper' marginTop='32px'>\n                <LiquidityPools token1={token1} token2={token2} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box\n          className='border-top border-bottom bg-palette flex flex-wrap'\n          minHeight='calc(100vh - 140px)'\n        >\n          <Box\n            width={isMobile ? 1 : '450px'}\n            padding='20px 0'\n            className={isMobile ? '' : 'border-right'}\n          >\n            <Box\n              className='flex justify-between items-center'\n              padding='0 24px'\n              mb={3}\n            >\n              <h4>{t('swap')}</h4>\n              <Box className='flex items-center' mr={1}>\n                <span\n                  className='text-secondary text-uppercase'\n                  style={{ marginRight: 8 }}\n                >\n                  {t('proMode')}\n                </span>\n                <ToggleSwitch\n                  toggled={isProMode}\n                  onToggle={() => updateIsProMode(!isProMode)}\n                />\n              </Box>\n            </Box>\n            <SwapMain />\n          </Box>\n          {infoPos === 'left' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left border-right'}\n              width={isMobile ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n          <Box className='swapProWrapper'>\n            <SwapProFilter\n              infoPos={infoPos}\n              setInfoPos={setInfoPos}\n              showChart={showChart}\n              setShowChart={setShowChart}\n              showTrades={showTrades}\n              setShowTrades={setShowTrades}\n            />\n            {token1 && token2 && pairId && (\n              <SwapProChartTrade\n                showChart={showChart}\n                showTrades={showTrades}\n                token1={token1}\n                token2={token2}\n                pairAddress={pairId}\n                pairTokenReversed={pairTokenReversed}\n                transactions={transactions}\n              />\n            )}\n          </Box>\n          {infoPos === 'right' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left'}\n              width={isTablet ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SwapPage;\n"],"sourceRoot":""}