{"version":3,"sources":["components/AnalyticsSearch/index.tsx","pages/AnalyticsPage/AnalyticsHeader.tsx","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","pages/AnalyticsTokenDetails/AnalyticsTokenChart.tsx","pages/AnalyticsTokenDetails/AnalyticsTokenDetails.tsx"],"names":["dayjs","extend","utc","AnalyticsSearch","t","useTranslation","history","useHistory","useState","searchVal","setSearchVal","useDebouncedChangeHandler","searchValInput","setSearchValInput","menuOpen","setMenuOpen","menuRef","useRef","wrapperRef","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","tokensShown","setTokensShown","pairsShown","setPairsShown","escapeRegExp","str","replace","filteredTokens","useMemo","uniqueTokens","found","length","map","token","id","push","sort","tokenA","tokenB","oneDayVolumeUSD","filter","GlobalConst","blacklists","TOKEN_BLACKLIST","includes","Object","keys","tokenEntryKey","isAddress","slice","match","RegExp","some","m","filteredPairs","uniquePairs","pairsFound","pair","pairA","pairB","Number","trackedReserveETH","PAIR_BLACKLIST","split","toUpperCase","token0","symbol","token1","field","name","useEffect","a","getAllTokensOnUniswap","allTokensUniswap","getAllPairsOnUniswap","allPairsUniswap","allTokens","allPairs","client","query","TOKEN_SEARCH","variables","value","tokens","PAIR_SEARCH","data","asSymbol","pairs","foundPairs","as0","concat","as1","asAddress","searchedPair","included","foundTokens","asName","searchedToken","Promise","all","utcCurrentTime","utcOneDayBack","subtract","unix","getBlockFromTimestamp","oneDayBlock","TOKEN_INFO_OLD","fetchPolicy","oneDayResult","oneDayHistory","tradeVolumeUSD","foundTokensWithData","console","log","fetchData","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","Box","className","placeholder","ref","onFocus","onChange","evt","display","SearchIcon","val","ind","currency0","Token","MATIC_CHAIN","getAddress","decimals","currency1","onClick","size","currency","React","memo","AnalyticsHeader","type","pathname","useLocation","width","mb","position","marginY","ArrowForwardIos","style","shortenAddress","indexOf","createSvgIcon","d","AnalyticsTokenChart","tokenAddress","useRouteMatch","params","tokenChartData","updateTokenChartData","chartIndexes","chartIndexTexts","chartIndex","setChartIndex","analyticChart","ONE_MONTH_CHART","durationIndex","setDurationIndex","chartData","item","dailyVolumeUSD","totalLiquidityUSD","priceUSD","currentData","currentPercent","volumeChangeUSD","liquidityChangeUSD","priceChangeUSD","getTokenChartData","ALL_CHART","getChartStartTime","newChartData","getLimitedData","CHART_COUNT","fetchTokenChartData","currentPercentClass","getPriceClass","mt","formatCompact","formatNumber","ml","getFormattedPrice","format","Skeleton","variant","height","chartTypes","typeTexts","chartType","setChartType","GlobalData","analytics","CHART_DURATIONS","CHART_DURATION_TEXTS","yAxisValues","getYAXISValuesAnalytics","dates","date","categories","getChartDates","AnalyticsTokenDetails","setToken","chainId","useActiveWeb3React","ChainId","MATIC","undefined","tokenPairs","updateTokenPairs","useBookmarkTokens","bookmarkTokens","addBookmarkToken","removeBookmarkToken","ethPrice","useEthPrice","price","oneDayPrice","getTokenInfo","tokenInfo","getTokenPairs2","formattedPairs","getBulkPairData","pairData","fetchTokenInfo","tokenPercentClass","mr","StarChecked","StarUnchecked","my","Grid","container","xs","sm","md","textAlign","oneWeekVolumeUSD","utils","FEEPERCENT","href","getEtherscanLink","rel"],"mappings":"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","file":"static/js/8.4cf77361.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SearchIcon } from 'assets/images/SearchIcon.svg';\nimport { client } from 'apollo/client';\nimport { TOKEN_SEARCH, PAIR_SEARCH, TOKEN_INFO_OLD } from 'apollo/queries';\nimport {\n  getAllTokensOnUniswap,\n  getAllPairsOnUniswap,\n  getBlockFromTimestamp,\n} from 'utils';\nimport { GlobalConst, MATIC_CHAIN } from 'constants/index';\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { getAddress } from '@ethersproject/address';\nimport 'components/styles/SearchWidget.scss';\nimport { useTranslation } from 'react-i18next';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\ndayjs.extend(utc);\n\nconst AnalyticsSearch: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [searchVal, setSearchVal] = useState('');\n  const [searchValInput, setSearchValInput] = useDebouncedChangeHandler(\n    searchVal,\n    setSearchVal,\n  );\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef<any>(null);\n  const wrapperRef = useRef<any>(null);\n  const [searchedTokens, setSearchedTokens] = useState<any[]>([]);\n  const [searchedPairs, setSearchedPairs] = useState<any[]>([]);\n  const [tokensShown, setTokensShown] = useState(3);\n  const [pairsShown, setPairsShown] = useState(3);\n\n  const escapeRegExp = (str: string) => {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  };\n\n  const filteredTokens = useMemo(() => {\n    const uniqueTokens: any[] = [];\n    const found: any = {};\n    if (searchedTokens && searchedTokens.length > 0) {\n      searchedTokens.map((token) => {\n        if (!found[token.id]) {\n          found[token.id] = true;\n          uniqueTokens.push(token);\n        }\n        return true;\n      });\n    }\n    const filtered =\n      uniqueTokens && uniqueTokens.length > 0\n        ? uniqueTokens\n            .sort((tokenA, tokenB) => {\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1;\n            })\n            .filter((token) => {\n              if (GlobalConst.blacklists.TOKEN_BLACKLIST.includes(token.id)) {\n                return false;\n              }\n              const regexMatches = Object.keys(token).map((tokenEntryKey) => {\n                const isAddress = searchVal.slice(0, 2) === '0x';\n                if (tokenEntryKey === 'id' && isAddress) {\n                  return token[tokenEntryKey].match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  );\n                }\n                if (tokenEntryKey === 'symbol' && !isAddress) {\n                  return token[tokenEntryKey].match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  );\n                }\n                if (tokenEntryKey === 'name' && !isAddress) {\n                  return token[tokenEntryKey].match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  );\n                }\n                return false;\n              });\n              return regexMatches.some((m) => m);\n            })\n        : [];\n    return filtered;\n  }, [searchedTokens, searchVal]);\n\n  const filteredPairs = useMemo(() => {\n    const uniquePairs: any[] = [];\n    const pairsFound: any = {};\n    if (searchedPairs && searchedPairs.length > 0)\n      searchedPairs.map((pair) => {\n        if (!pairsFound[pair.id]) {\n          pairsFound[pair.id] = true;\n          uniquePairs.push(pair);\n        }\n        return true;\n      });\n\n    const filtered = uniquePairs\n      ? uniquePairs\n          .sort((pairA, pairB) => {\n            const pairAReserveETH = Number(pairA?.trackedReserveETH ?? 0);\n            const pairBReserveETH = Number(pairB?.trackedReserveETH ?? 0);\n            return pairAReserveETH > pairBReserveETH ? -1 : 1;\n          })\n          .filter((pair) => {\n            if (GlobalConst.blacklists.PAIR_BLACKLIST.includes(pair.id)) {\n              return false;\n            }\n            if (searchVal && searchVal.includes(' ')) {\n              const pairA = searchVal.split(' ')[0]?.toUpperCase();\n              const pairB = searchVal.split(' ')[1]?.toUpperCase();\n              return (\n                (pair.token0.symbol.includes(pairA) ||\n                  pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) ||\n                  pair.token1.symbol.includes(pairB))\n              );\n            }\n            if (searchVal && searchVal.includes('-')) {\n              const pairA = searchVal.split('-')[0]?.toUpperCase();\n              const pairB = searchVal.split('-')[1]?.toUpperCase();\n              return (\n                (pair.token0.symbol.includes(pairA) ||\n                  pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) ||\n                  pair.token1.symbol.includes(pairB))\n              );\n            }\n            const regexMatches = Object.keys(pair).map((field) => {\n              const isAddress = searchVal.slice(0, 2) === '0x';\n              if (field === 'id' && isAddress) {\n                return pair[field].match(\n                  new RegExp(escapeRegExp(searchVal), 'i'),\n                );\n              }\n              if (field === 'token0' || field === 'token1') {\n                return (\n                  pair[field].symbol.match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  ) ||\n                  pair[field].name.match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  )\n                );\n              }\n              return false;\n            });\n            return regexMatches.some((m) => m);\n          })\n      : [];\n    return filtered;\n  }, [searchedPairs, searchVal]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const allTokensUniswap = await getAllTokensOnUniswap();\n        const allPairsUniswap = await getAllPairsOnUniswap();\n        let allTokens = allTokensUniswap ?? [];\n        let allPairs = allPairsUniswap ?? [];\n        if (searchVal.length > 0) {\n          const tokens = await client.query({\n            query: TOKEN_SEARCH,\n            variables: {\n              value: searchVal ? searchVal.toUpperCase() : '',\n              id: searchVal,\n            },\n          });\n\n          const pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: tokens.data.asSymbol?.map((t: any) => t.id),\n              id: searchVal,\n            },\n          });\n\n          const foundPairs = pairs.data.as0\n            .concat(pairs.data.as1)\n            .concat(pairs.data.asAddress);\n\n          allPairs = allPairs.concat(\n            foundPairs.filter((searchedPair: any) => {\n              let included = false;\n              allPairs.map((pair) => {\n                if (pair.id === searchedPair.id) {\n                  included = true;\n                }\n                return true;\n              });\n              return !included;\n            }),\n          );\n\n          const foundTokens = tokens.data.asSymbol\n            .concat(tokens.data.asAddress)\n            .concat(tokens.data.asName);\n\n          allTokens = allTokens.concat(\n            foundTokens.filter((searchedToken: any) => {\n              let included = false;\n              allTokens.map((token) => {\n                if (token.id === searchedToken.id) {\n                  included = true;\n                }\n                return true;\n              });\n              return !included;\n            }),\n          );\n        }\n\n        const foundTokensWithData = await Promise.all(\n          allTokens.map(async (token: any) => {\n            const utcCurrentTime = dayjs();\n            const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix();\n            const oneDayBlock = await getBlockFromTimestamp(utcOneDayBack);\n            const oneDayResult = await client.query({\n              query: TOKEN_INFO_OLD(oneDayBlock, token.id),\n              fetchPolicy: 'network-only',\n            });\n            if (\n              oneDayResult &&\n              oneDayResult.data &&\n              oneDayResult.data.tokens &&\n              oneDayResult.data.tokens.length > 0\n            ) {\n              const oneDayHistory = oneDayResult.data.tokens[0];\n              const oneDayVolumeUSD =\n                (token?.tradeVolumeUSD ?? 0) -\n                (oneDayHistory?.tradeVolumeUSD ?? 0);\n              return { ...token, oneDayVolumeUSD };\n            }\n            return token;\n          }),\n        );\n        setSearchedTokens(foundTokensWithData);\n        setSearchedPairs(allPairs);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchData();\n  }, [searchVal]);\n\n  const handleClick = (e: any) => {\n    if (\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\n    ) {\n      setPairsShown(3);\n      setTokensShown(3);\n      setMenuOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  return (\n    <Box className='searchWidgetWrapper'>\n      <Box className='searchWidgetInput'>\n        <input\n          placeholder={t('searchTokenPair')}\n          value={searchValInput}\n          ref={menuRef}\n          onFocus={() => setMenuOpen(true)}\n          onChange={(evt) => setSearchValInput(evt.target.value)}\n        />\n        <Box display='flex'>\n          <SearchIcon />\n        </Box>\n      </Box>\n      {menuOpen && (\n        <div ref={wrapperRef} className='searchWidgetContent'>\n          <h6>{t('pairs')}</h6>\n          {filteredPairs.slice(0, pairsShown).map((val, ind) => {\n            const currency0 = new Token(\n              MATIC_CHAIN,\n              getAddress(val.token0.id),\n              val.token0.decimals,\n            );\n            const currency1 = new Token(\n              MATIC_CHAIN,\n              getAddress(val.token1.id),\n              val.token1.decimals,\n            );\n            return (\n              <Box\n                key={ind}\n                className='searchWidgetRow'\n                onClick={() => {\n                  history.push(`/analytics/pair/${val.id}`);\n                  setMenuOpen(false);\n                }}\n              >\n                <DoubleCurrencyLogo\n                  currency0={currency0}\n                  currency1={currency1}\n                  size={28}\n                />\n                <small>\n                  {val.token0.symbol} - {val.token1.symbol} {t('pair')}\n                </small>\n              </Box>\n            );\n          })}\n          <Box\n            className='searchWidgetShowMore'\n            onClick={() => setPairsShown(pairsShown + 5)}\n          >\n            <small>{t('showMore')}</small>\n          </Box>\n          <h6>{t('tokens')}</h6>\n          {filteredTokens.slice(0, tokensShown).map((val, ind) => {\n            const currency = new Token(\n              MATIC_CHAIN,\n              getAddress(val.id),\n              val.decimals,\n            );\n            return (\n              <Box\n                key={ind}\n                className='searchWidgetRow'\n                onClick={() => {\n                  history.push(`/analytics/token/${val.id}`);\n                  setMenuOpen(false);\n                }}\n              >\n                <CurrencyLogo currency={currency} size='28px' />\n                <small>\n                  {val.name} {val.symbol}\n                </small>\n              </Box>\n            );\n          })}\n          <Box\n            className='searchWidgetShowMore'\n            onClick={() => setTokensShown(tokensShown + 5)}\n          >\n            <small>{t('showMore')}</small>\n          </Box>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(AnalyticsSearch);\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { ArrowForwardIos } from '@material-ui/icons';\nimport AnalyticsSearch from 'components/AnalyticsSearch';\nimport { shortenAddress } from 'utils';\nimport 'pages/styles/analytics.scss';\nimport { useTranslation } from 'react-i18next';\n\ninterface AnalyticHeaderProps {\n  data?: any;\n  type?: string;\n}\n\nconst AnalyticsHeader: React.FC<AnalyticHeaderProps> = ({ data, type }) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3}>\n      <Box mb={4}>\n        <h4>{t('quickswapAnalytics')}</h4>\n      </Box>\n      <Box\n        mb={4}\n        position='relative'\n        className='flex justify-between flex-wrap'\n      >\n        <Box marginY={1.5} className='flex items-center'>\n          {type && data && (\n            <Box className='flex items-center text-hint'>\n              <span\n                className='link'\n                onClick={() => {\n                  history.push('/analytics');\n                }}\n              >\n                {t('analytics')}\n              </span>\n              <ArrowForwardIos style={{ width: 16 }} />\n              <span\n                className='link'\n                onClick={() => {\n                  history.push(`/analytics/${type}s`);\n                }}\n              >\n                {type === 'token' ? t('tokens') : t('pairs')}\n              </span>\n              <ArrowForwardIos style={{ width: 16 }} />\n              <span>\n                <span className='text-gray19'>\n                  {type === 'token'\n                    ? data.symbol\n                    : `${data.token0.symbol}/${data.token1.symbol}`}\n                </span>\n                ({shortenAddress(data.id)})\n              </span>\n            </Box>\n          )}\n          {!type && (\n            <>\n              <Box\n                className={`topTab ${pathname.indexOf('pair') === -1 &&\n                  pathname.indexOf('token') === -1 &&\n                  'selectedTab'}`}\n                onClick={() => history.push(`/analytics`)}\n              >\n                <p>{t('overview')}</p>\n              </Box>\n              <Box\n                className={`topTab ${pathname.indexOf('token') > -1 &&\n                  'selectedTab'}`}\n                onClick={() => history.push(`/analytics/tokens`)}\n              >\n                <p>{t('tokens')}</p>\n              </Box>\n              <Box\n                className={`topTab ${pathname.indexOf('pair') > -1 &&\n                  'selectedTab'}`}\n                onClick={() => history.push(`/analytics/pairs`)}\n              >\n                <p>{t('pairs')}</p>\n              </Box>\n            </>\n          )}\n        </Box>\n\n        <AnalyticsSearch />\n      </Box>\n    </Box>\n  );\n};\n\nexport default AnalyticsHeader;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","import React, { useState, useEffect, useMemo } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport dayjs from 'dayjs';\nimport {\n  formatCompact,\n  getFormattedPrice,\n  getPriceClass,\n  formatNumber,\n  getChartDates,\n  getChartStartTime,\n  getLimitedData,\n  getYAXISValuesAnalytics,\n} from 'utils';\nimport { AreaChart, ChartType } from 'components';\nimport { getTokenChartData } from 'utils';\nimport { GlobalConst, GlobalData } from 'constants/index';\nimport { useTranslation } from 'react-i18next';\n\nconst CHART_VOLUME = 0;\nconst CHART_LIQUIDITY = 1;\nconst CHART_PRICE = 2;\n\nconst AnalyticsTokenChart: React.FC<{ token: any }> = ({ token }) => {\n  const { t } = useTranslation();\n  const match = useRouteMatch<{ id: string }>();\n  const tokenAddress = match.params.id;\n  const [tokenChartData, updateTokenChartData] = useState<any>(null);\n  const chartIndexes = [CHART_VOLUME, CHART_LIQUIDITY, CHART_PRICE];\n  const chartIndexTexts = [t('volume'), t('liquidity'), t('price')];\n  const [chartIndex, setChartIndex] = useState(CHART_VOLUME);\n  const [durationIndex, setDurationIndex] = useState(\n    GlobalConst.analyticChart.ONE_MONTH_CHART,\n  );\n\n  const chartData = useMemo(() => {\n    if (!tokenChartData) return;\n    return tokenChartData.map((item: any) => {\n      switch (chartIndex) {\n        case CHART_VOLUME:\n          return Number(item.dailyVolumeUSD);\n        case CHART_LIQUIDITY:\n          return Number(item.totalLiquidityUSD);\n        case CHART_PRICE:\n          return Number(item.priceUSD);\n        default:\n          return;\n      }\n    });\n  }, [tokenChartData, chartIndex]);\n\n  const currentData = useMemo(() => {\n    if (!token) return;\n    switch (chartIndex) {\n      case CHART_VOLUME:\n        return token.oneDayVolumeUSD;\n      case CHART_LIQUIDITY:\n        return token.totalLiquidityUSD;\n      case CHART_PRICE:\n        return token.priceUSD;\n      default:\n        return;\n    }\n  }, [token, chartIndex]);\n\n  const currentPercent = useMemo(() => {\n    if (!token) return;\n    switch (chartIndex) {\n      case CHART_VOLUME:\n        return token.volumeChangeUSD;\n      case CHART_LIQUIDITY:\n        return token.liquidityChangeUSD;\n      case CHART_PRICE:\n        return token.priceChangeUSD;\n      default:\n        return;\n    }\n  }, [token, chartIndex]);\n\n  useEffect(() => {\n    async function fetchTokenChartData() {\n      updateTokenChartData(null);\n      const chartData = await getTokenChartData(\n        tokenAddress,\n        durationIndex === GlobalConst.analyticChart.ALL_CHART\n          ? 0\n          : getChartStartTime(durationIndex),\n      );\n      if (chartData) {\n        const newChartData = getLimitedData(\n          chartData,\n          GlobalConst.analyticChart.CHART_COUNT,\n        );\n        updateTokenChartData(newChartData);\n      }\n    }\n    fetchTokenChartData();\n  }, [updateTokenChartData, tokenAddress, durationIndex]);\n\n  const currentPercentClass = getPriceClass(Number(currentPercent));\n\n  return (\n    <>\n      <Box className='flex flex-wrap justify-between'>\n        <Box mt={1.5}>\n          <span>{chartIndexTexts[chartIndex]}</span>\n          <Box mt={1}>\n            {currentData && currentPercent ? (\n              <>\n                <Box className='flex items-center'>\n                  <h4>\n                    $\n                    {currentData > 100000\n                      ? formatCompact(currentData)\n                      : formatNumber(currentData)}\n                  </h4>\n                  <Box\n                    className={`priceChangeWrapper ${currentPercentClass}`}\n                    ml={1}\n                  >\n                    <small>{getFormattedPrice(Number(currentPercent))}%</small>\n                  </Box>\n                </Box>\n                <Box>\n                  <span>{dayjs().format('MMM DD, YYYY')}</span>\n                </Box>\n              </>\n            ) : (\n              <Skeleton variant='rect' width='120px' height='30px' />\n            )}\n          </Box>\n        </Box>\n        <Box className='flex flex-col items-end'>\n          <Box mt={1.5}>\n            <ChartType\n              chartTypes={chartIndexes}\n              typeTexts={chartIndexTexts}\n              chartType={chartIndex}\n              setChartType={setChartIndex}\n            />\n          </Box>\n          <Box mt={1.5}>\n            <ChartType\n              chartTypes={GlobalData.analytics.CHART_DURATIONS}\n              typeTexts={GlobalData.analytics.CHART_DURATION_TEXTS}\n              chartType={durationIndex}\n              setChartType={setDurationIndex}\n            />\n          </Box>\n        </Box>\n      </Box>\n      <Box mt={2} width={1}>\n        {tokenChartData ? (\n          <AreaChart\n            data={chartData}\n            yAxisValues={getYAXISValuesAnalytics(chartData)}\n            dates={tokenChartData.map((value: any) => value.date)}\n            width='100%'\n            height={240}\n            categories={getChartDates(tokenChartData, durationIndex)}\n          />\n        ) : (\n          <Skeleton variant='rect' width='100%' height={217} />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default AnalyticsTokenChart;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { Box, Grid } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport {\n  shortenAddress,\n  getEtherscanLink,\n  getFormattedPrice,\n  getPriceClass,\n  formatNumber,\n  getTokenInfo,\n  getTokenPairs2,\n  getBulkPairData,\n} from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { CurrencyLogo, PairTable } from 'components';\nimport { useBookmarkTokens, useEthPrice } from 'state/application/hooks';\nimport { ReactComponent as StarChecked } from 'assets/images/StarChecked.svg';\nimport { ReactComponent as StarUnchecked } from 'assets/images/StarUnchecked.svg';\nimport { getAddress } from '@ethersproject/address';\nimport { GlobalConst } from 'constants/index';\nimport AnalyticsHeader from 'pages/AnalyticsPage/AnalyticsHeader';\nimport AnalyticsTokenChart from './AnalyticsTokenChart';\nimport { useTranslation } from 'react-i18next';\n\nconst AnalyticsTokenDetails: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const match = useRouteMatch<{ id: string }>();\n  const tokenAddress = match.params.id;\n  const [token, setToken] = useState<any>(null);\n  const { chainId } = useActiveWeb3React();\n  const currency = token\n    ? new Token(ChainId.MATIC, getAddress(token.id), token.decimals)\n    : undefined;\n  const [tokenPairs, updateTokenPairs] = useState<any>(null);\n  const {\n    bookmarkTokens,\n    addBookmarkToken,\n    removeBookmarkToken,\n  } = useBookmarkTokens();\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    async function fetchTokenInfo() {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        const tokenInfo = await getTokenInfo(\n          ethPrice.price,\n          ethPrice.oneDayPrice,\n          tokenAddress,\n        );\n        if (tokenInfo) {\n          setToken(tokenInfo[0]);\n        }\n        const tokenPairs = await getTokenPairs2(tokenAddress);\n        const formattedPairs = tokenPairs\n          ? tokenPairs.map((pair: any) => {\n              return pair.id;\n            })\n          : [];\n        const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n        if (pairData) {\n          updateTokenPairs(pairData);\n        }\n      }\n    }\n    fetchTokenInfo();\n  }, [tokenAddress, ethPrice.price, ethPrice.oneDayPrice]);\n\n  useEffect(() => {\n    setToken(null);\n    updateTokenPairs(null);\n  }, [tokenAddress]);\n\n  const tokenPercentClass = getPriceClass(\n    token ? Number(token.priceChangeUSD) : 0,\n  );\n\n  return (\n    <>\n      <AnalyticsHeader type='token' data={token} />\n      {token ? (\n        <>\n          <Box width={1} className='flex flex-wrap justify-between'>\n            <Box display='flex'>\n              <CurrencyLogo currency={currency} size='32px' />\n              <Box ml={1.5}>\n                <Box className='flex items-center'>\n                  <Box className='flex items-end' mr={0.5}>\n                    <p className='heading1'>{token.name} </p>\n                    <p className='heading2'>({token.symbol})</p>\n                  </Box>\n                  {bookmarkTokens.includes(token.id) ? (\n                    <StarChecked\n                      onClick={() => removeBookmarkToken(token.id)}\n                    />\n                  ) : (\n                    <StarUnchecked onClick={() => addBookmarkToken(token.id)} />\n                  )}\n                </Box>\n                <Box mt={1.25} className='flex items-center'>\n                  <h5>${formatNumber(token.priceUSD)}</h5>\n                  <Box\n                    className={`priceChangeWrapper ${tokenPercentClass}`}\n                    ml={2}\n                  >\n                    <small>\n                      {getFormattedPrice(Number(token.priceChangeUSD))}%\n                    </small>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n            <Box my={2} display='flex'>\n              <Box\n                className='button border-primary'\n                mr={1.5}\n                onClick={() => {\n                  history.push(`/pools?currency0=${token.id}&currency1=ETH`);\n                }}\n              >\n                <small>{t('addLiquidity')}</small>\n              </Box>\n              <Box\n                className='button filledButton'\n                onClick={() => {\n                  history.push(`/swap?currency0=${token.id}&currency1=ETH`);\n                }}\n              >\n                <small>{t('swap')}</small>\n              </Box>\n            </Box>\n          </Box>\n          <Box width={1} className='panel' mt={4}>\n            <Grid container>\n              <Grid item xs={12} sm={12} md={6}>\n                <AnalyticsTokenChart token={token} />\n              </Grid>\n              <Grid item xs={12} sm={12} md={6}>\n                <Box className='analyticsDetailsInfo'>\n                  <Box>\n                    <Box>\n                      <span className='text-disabled'>\n                        {t('totalLiquidity')}\n                      </span>\n                      <h5>${formatNumber(token.totalLiquidityUSD)}</h5>\n                    </Box>\n                    <Box textAlign='right'>\n                      <span className='text-disabled'>{t('7dTradingVol')}</span>\n                      <h5>${formatNumber(token.oneWeekVolumeUSD)}</h5>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <span className='text-disabled'>\n                        {t('24hTradingVol1')}\n                      </span>\n                      <h5>${formatNumber(token.oneDayVolumeUSD)}</h5>\n                    </Box>\n                    <Box textAlign='right'>\n                      <span className='text-disabled'>{t('24hFees')}</span>\n                      <h5>\n                        $\n                        {formatNumber(\n                          token.oneDayVolumeUSD * GlobalConst.utils.FEEPERCENT,\n                        )}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <span className='text-disabled'>\n                        {t('contractAddress')}\n                      </span>\n                      <h5 className='text-primary'>\n                        {chainId ? (\n                          <a\n                            href={getEtherscanLink(\n                              chainId,\n                              token.id,\n                              'address',\n                            )}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            className='text-primary no-decoration'\n                          >\n                            {shortenAddress(token.id)}\n                          </a>\n                        ) : (\n                          shortenAddress(token.id)\n                        )}\n                      </h5>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box width={1} mt={5}>\n            <p>\n              {token.symbol} {t('pools')}\n            </p>\n          </Box>\n          <Box width={1} className='panel' mt={4}>\n            {tokenPairs ? (\n              <PairTable data={tokenPairs} />\n            ) : (\n              <Skeleton variant='rect' width='100%' height={150} />\n            )}\n          </Box>\n        </>\n      ) : (\n        <Skeleton width='100%' height={100} />\n      )}\n    </>\n  );\n};\n\nexport default AnalyticsTokenDetails;\n"],"sourceRoot":""}