{"version":3,"sources":["assets/images/HelpIcon1.svg","assets/images/SettingsIcon.svg","pages/SwapPage/Twap/LimitPriceInput.tsx","pages/SwapPage/Twap/TimeSelect.tsx","pages/SwapPage/Twap/Duration.tsx","pages/SwapPage/Twap/Interval.tsx","pages/SwapPage/Twap/useValidation.ts","pages/SwapPage/Twap/ChunkSize.tsx","pages/SwapPage/Twap/ErrorNotification.tsx","pages/SwapPage/Twap/contract/useContract.ts","pages/SwapPage/Twap/ConfirmTwapModal/TxDetails.tsx","pages/SwapPage/Twap/ConfirmTwapModal/Disclaimer.tsx","pages/SwapPage/Twap/PriceIndication.tsx","pages/SwapPage/Twap/useWrapCallback.ts","pages/SwapPage/Twap/ConfirmTwapModal/ModalContent.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ConfirmTwapModal.tsx","pages/SwapPage/Twap/useTwapApproveCallbackFromTrade.ts","pages/SwapPage/Twap/Twap.tsx","pages/SwapPage/Twap/useTwapCallback.ts","pages/SwapPage/SwapMain.tsx","pages/SwapPage/LiquidityPoolRow.tsx","pages/SwapPage/LiquidityPools.tsx","pages/SwapPage/SwapProChart.tsx","pages/SwapPage/SwapProChartTrade.tsx","pages/SwapPage/SwapInfoTx.tsx","pages/SwapPage/SwapProInfo.tsx","pages/SwapPage/SwapProFilter.tsx","pages/SwapPage/SwapPage.tsx"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHelpIcon1","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","d","transform","style","fill","ForwardRef","SvgSettingsIcon","rx","LimitPriceInput","useDerivedTwapInfo","currencies","marketPrice","allowLimitPrice","useTwapState","invertLimitPriceValue","price","t","useTranslation","dispatch","useDispatch","onChange","value","currency","Field","INPUT","setPrice","formattedPrice","tryParseAmount","undefined","currenciesMemoized","useMemo","inputCurrency","OUTPUT","outputCurrency","StyledContainer","className","StyledTop","StyledTitle","toggled","onToggle","setAllowLimitPrice","setInvertLimitPriceValue","invert","toSignificant","InfoTooltip","text","Typography","StyledInputContainer","StyledCurrencyDetails","marginRight","symbol","size","disabled","align","placeholder","onUserInput","val","IconButton","onClick","marginLeft","PriceExchangeIcon","styled","Box","display","alignItems","justifyContent","borderBottom","gap","marginTop","flexDirection","TimeSelect","selected","onUpdate","tooltip","margin","StyledRight","displayValue","milliseconds","timeToMilliseconds","type","format","getFormatTypeFromMilliseconds","millisecondsToTime","console","log","StyledSelect","event","color","opacity","MenuItem","TimeSelectFormat","DAYS","HOURS","MINUTES","Select","theme","palette","primary","main","whiteSpace","Duration","onDuration","useTwapActionHandlers","duration","onInterval","interval","selfEdit","partialFillWarning","totalChunks","Number","usePartialFillWarning","useEffect","StyledCard","setSelfEdit","StyledWarning","fontWeight","ChunkSize","chunkSize","parsedAmount","onChunkSize","usdPrice","useUSDCPrice","invalidChunkSize","toExact","StyledCurrency","marginBottom","StyledBottom","toString","toLocaleString","ErrorNotification","error","handleClose","setTimeout","setError","Snackbar","open","autoHideDuration","onClose","Alert","severity","variant","useTwapContract","address","ABI","withSignerIfPossible","useActiveWeb3React","library","account","getContract","useContract","TWAP_CONTRACT_ADDRESS","twapAbi","calculateInterval","time","moment","days","hours","minutes","str","TxDetails","outputAmount","deadline","minimumAmountOutAsCurrencyAmount","StyledDetails","add","MINUTE","element","TradeSize","MinimumReceivedPerTrade","CurrencyDisplay","fontSize","Row","StyledRow","placement","Disclaimer","Trans","i18nKey","components","Link","rel","href","PriceIndication","WrapType","executionPrice","customText","useState","mainPrice","setMainPrice","ModalContent","onConfirm","typedPriceOutputValue","priceAsCurrencyAmount","outputAsCurrencyAmount","StyledCards","currencyAmount","prefix","Button","Card","StyledCardTop","getTokenValue","StyledCardBottom","formatTokenAmount","ConfirmTwapModal","onDismiss","swapErrorMessage","isOpen","attemptingTxn","txHash","txPending","modalContent","useCallback","confirmationContent","message","content","maxHeight","overflow","hash","pendingText","NOT_APPLICABLE","wrapType","ApprovalState","useTwapApproveCallbackFromTrade","amountToTrade","amountToApprove","spender","token","TokenAmount","currentAllowance","useTokenAllowance","pendingApproval","useHasPendingApproval","approvalState","ETHER","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","useTokenContract","addTransaction","useTransactionAdder","approve","a","useExact","estimateGas","MaxUint256","catch","raw","estimatedGas","gasLimit","calculateGasMargin","then","response","summary","approval","tokenAddress","wait","debug","useApproveCallback","chainId","Twap","typedValue","recipient","currencyBalances","swapInputError","inputError","isMinAmountValid","useMinimumAmountOutValidation","finalizedTransaction","useTransactionFinalizer","wrapLoading","setWrapLoading","wethContract","useWETHContract","balance","useCurrencyBalance","inputAmount","sufficientBalance","WRAP","execute","deposit","txReceipt","useTwapWrapCallback","onWrap","wrapInputError","onSwitchTokens","onCurrencySelection","onWrapDone","searchToken","useToken","MATIC_WRAPPED_ADDRESS","handleCurrencySelect","setApprovalSubmitted","onWrapHandler","showWrap","useUserSlippageTolerance","allowedSlippage","approving","setApproving","approveCallback","inputsError","useInputsValidation","parsedAmounts","formattedAmounts","userHasSpecifiedInputOutput","Boolean","parseUnits","decimals","gt","approvalSubmitted","ethereum","window","isValid","showApproveFlow","toggleWalletModal","useWalletModalToggle","handleOtherCurrencySelect","swapButtonText","UNWRAP","isSupportedNetwork","twapButtonDisabled","showConfirm","tradeToConfirm","setTwapState","handleTypeInput","maxAmountInput","maxAmountSpend","handleMaxInput","handleHalfInput","atMaxAmountInput","equalTo","twapCallback","minimumAmountOut","contract","srcAmount","srcBidAmount","dstMinAmount","currencyId","Error","delay","ask","unix","useTwapCallback","handleTwap","handleAcceptChanges","handleConfirmDismiss","originalTrade","onAcceptChanges","onHalf","onMax","showHalfButton","showMaxButton","otherCurrency","amount","setAmount","ExchangeIcon","showPrice","StyledFlex","Interval","fullWidth","CircularProgress","StyledButtonContainer","addMaticToMetamask","zoom","backgroundImage","SwapMain","swapIndex","setSwapIndex","openSettingsModal","setOpenSettingsModal","useIsProMode","isProMode","updateIsProMode","parsedQuery","useParsedQueryString","currency0","useCurrency","currency1","my","mr","SettingsIcon","padding","mt","textAlign","bold","alink","LiquidityPoolRow","pair","breakpoints","useTheme","daysCurrentYear","getDaysCurrentYear","isMobile","useMediaQuery","down","dayVolumeUSD","oneDayVolumeUSD","oneDayVolumeUntracked","GlobalConst","utils","FEEPERCENT","trackReserveUSD","trackedReserveUSD","reserveUSD","apy","isNaN","liquidity","volume","token0","token1","toUpperCase","formatCompact","toFixed","React","memo","LiquidityPools","token2","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","toLowerCase","token2Address","allTokenList","useAllTokens","ethPrice","useEthPrice","liquidityPairs","filter","slice","whiteListAddressList","map","item","getTokenPairs","formattedPairs","includes","getBulkPairData","pairData","KeyboardArrowDown","KeyboardArrowUp","Divider","ind","SwapProChart","pairAddress","pairName","pairTokenReversed","src","frameBorder","SwapProChartTrade","showChart","showTrades","transactions","TradesTable","data","Table","fixedHeaderContent","itemContent","index","tx","txType","amount0In","txAmount0","amount0Out","txAmount1","amount1In","amount1Out","token1Amount","token2Amount","txPrice","amountUSD","dayjs","transaction","timestamp","formatNumber","getEtherscanLink","shortenTx","orientation","minSize","Height","extend","utc","SwapInfoTx","txFilter","setTxFilter","subtractTimeAmount","split","subtractTimeType","firstTime","subtract","filteredTxs","filteredBuyTxs","filteredSellTxs","reduce","total","items","label","Skeleton","SwapProInfo","token1Data","setToken1Data","token2Data","setToken2Data","unwrappedToken","currency2","oneDayPrice","getTokenInfo","tokenInfo","TokenInfo","tokenData","priceUpPercent","priceChangeUSD","p","ml","flex","priceUSD","py","px","mb","SwapHoriz","SwapProFilter","infoPos","setInfoPos","setShowChart","setShowTrades","infoPosItems","pos","condition","Checkbox","checked","evt","Replay","SwapPage","isTablet","pairId","useDerivedSwapInfo","wrappedCurrency","minHeight","Grid","container","spacing","xs","sm","md","lg"],"mappings":"qHAAA,6CAAIA,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAaC,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD6B,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzD,YAAa,aACbQ,EAAG,mgBACHC,UAAW,0BACXC,MAAO,CACLC,KAAM,cAKZ,IAAIC,EAA0B,aAAiBf,GAChC,K,kCClCf,6CAAIxB,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoC,EAAgBf,EAAMC,GAC7B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD,YAAa,yBACb6B,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzD,YAAa,kBACbI,MAAO,GACPC,OAAQ,GACRS,GAAI,GACJJ,MAAO,CACLC,KAAM,UAEO,gBAAoB,OAAQ,CAC3C,YAAa,aACbH,EAAG,6lCACHC,UAAW,mBACXC,MAAO,CACLC,KAAM,cAKZ,IAAIC,EAA0B,aAAiBC,GAChC,K,44RCwEAE,MA9Ff,WACE,MAAoCC,cAA5BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YACdC,EAAkBC,cAAeD,gBACjCE,EAAwBD,cAAeC,sBACvCC,EAAQF,cAAeE,MACrBC,EAAMC,cAAND,EAEFE,EAAWC,cAEXC,EAAW,SAACC,GAChB,IAAMC,EAAWZ,EAAWa,IAAMC,OAC9BF,GACFJ,EACEO,YAAS,CACPV,MAAOM,EACPK,eAAgBL,EAAQM,YAAeN,EAAOC,QAAYM,MAoB5DC,EAAqBC,mBAAQ,WACjC,OAAKhB,EAME,CACLiB,cAAerB,EAAWa,IAAMS,QAChCC,eAAgBvB,EAAWa,IAAMC,QAP1B,CACLO,cAAerB,EAAWa,IAAMC,OAChCS,eAAgBvB,EAAWa,IAAMS,WAOpC,CAACtB,EAAYI,IAERiB,EAAkCF,EAAlCE,cAAeE,EAAmBJ,EAAnBI,eAEvB,OACE,eAACC,EAAD,CAAiBC,UAAS,wBAA1B,UACE,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAAC,IAAD,CAAcC,UAAW1B,EAAiB2B,SAjCjC,WACfrB,EAASsB,aAAoB5B,IACzBE,GACFI,EAASuB,aAAyB,IAClCrB,EAAS,KAETA,GAAoB,OAAXT,QAAW,IAAXA,OAAA,EAAAA,EAAa+B,SAASC,cAAc,KAAM,OA4B/C,cAACC,EAAA,EAAD,CACEC,KAAwB7B,EAAlBJ,EAAoB,eAAoB,iBADhD,SAGE,cAACkC,EAAA,EAAD,gCAGFlC,GAAmB,cAACkC,EAAA,EAAD,sBAEtBlC,GACC,eAACmC,EAAD,WACE,eAACC,EAAD,CAAuB7C,MAAO,CAAE8C,YAAa,GAA7C,UACE,cAACH,EAAA,EAAD,gBAEA,cAACA,EAAA,EAAD,iBAAaf,QAAb,IAAaA,OAAb,EAAaA,EAAemB,SAC5B,cAAC,IAAD,CAAc5B,SAAUS,EAAeoB,KAAM,YACtB,IACzB,cAACL,EAAA,EAAD,gBACA,cAAC,IAAD,CACEM,UAAWxC,EACXS,MAAON,GAAS,GAChBsC,MAAM,SACNC,YAAa1C,EAAkB,OAAS,OACxC2C,YAAa,SAACC,GACZpC,EAASoC,MAGb,eAACR,EAAD,WACE,cAACF,EAAA,EAAD,iBAAab,QAAb,IAAaA,OAAb,EAAaA,EAAgBiB,SAC7B,cAAC,IAAD,CAAc5B,SAAUW,EAAgBkB,KAAM,YAEhD,cAACM,EAAA,EAAD,CAAYC,QAtDC,WACnBxC,EAASuB,aAA0B3B,KAqDMX,MAAO,CAAEwD,WAAY,IAAxD,SACE,cAACC,EAAA,EAAD,aAUNb,EAAuBc,YAAOC,IAAPD,CAAY,CACvCE,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBN,WAAY,OACZ,iBAAkB,CAChB9D,MAAO,IACPqE,aAAc,kBACdP,WAAY,GACZV,YAAa,MAIXD,EAAwBa,YAAOC,IAAPD,CAAY,CACxCE,QAAS,OACTC,WAAY,SACZG,IAAK,IAGDjC,EAAkB2B,YAAOC,IAAPD,CAAY,CAClCO,UAAW,EACXL,QAAS,OACTM,cAAe,SACfF,IAAK,KAGD9B,EAAcwB,YAAOC,IAAPD,CAAY,CAC9BZ,YAAa,GACbc,QAAS,OACTC,WAAY,SACZG,IAAK,KAGD/B,EAAYyB,YAAOC,IAAPD,CAAY,CAC5BE,QAAS,OACTC,WAAY,SACZC,eAAgB,kB,sCCxDHK,OApEf,YAA8E,IAAxDC,EAAuD,EAAvDA,SAAU9E,EAA6C,EAA7CA,MAAO+E,EAAsC,EAAtCA,SAAUpB,EAA4B,EAA5BA,SAAUqB,EAAkB,EAAlBA,QAgCzD,OACE,qCACE,cAAC7B,EAAA,EAAD,CAAaC,KAAM4B,EAAnB,SACE,cAAC,GAAD,CAAatE,MAAO,CAAEuE,OAAQ,GAA9B,SAAoCjF,MAGtC,eAACkF,GAAD,WACE,cAAC,IAAD,CACEvB,SAAUA,EACV/B,MAAOkD,EAASK,cAAgB,GAChCvB,MAAM,QACNC,YAAY,IACZC,YAAa,SAACC,GACA,MAARA,GAAuB,MAARA,GA5CZ,SAACnC,GAChB,IAAMwD,EAAeC,YAAmBP,EAASQ,KAAM1D,IAAU,EAC7DuD,EAAevD,EAEnB,GAAKwD,EAAL,CASA,IAAMG,EAASC,YAA8BJ,GAAgB,GAEzDG,IAAWT,EAASQ,OACtBH,EAAeM,YAAmBF,EAAQH,IAAiB,GAC3DM,QAAQC,IAAIR,EAAcC,IAE5BL,EAAS,CACPO,KAAMC,EACNJ,eACAC,sBAjBAL,EAAS,CACPO,KAAMR,EAASQ,KACfH,eACAC,iBAqCMzD,CAASoC,MAIf,eAAC6B,GAAD,CACEjC,SAAUA,EACV/B,MAAOkD,EAASQ,KAChB3D,SA1BS,SAACkE,GAChBd,EAAS,CACPO,KAAMO,EAAMpH,OAAOmD,SAyBfkE,MAAM,UACNpF,MAAO,CACLqF,QAASpC,EAAW,GAAM,GAN9B,UASE,cAACqC,EAAA,EAAD,CAAUpE,MAAOqE,IAAiBC,KAAlC,kBACA,cAACF,EAAA,EAAD,CAAUpE,MAAOqE,IAAiBE,MAAlC,mBACA,cAACH,EAAA,EAAD,CAAUpE,MAAOqE,IAAiBG,QAAlC,+BASJR,GAAexB,YAAOiC,IAAPjC,EAAe,gBAAGkC,EAAH,EAAGA,MAAH,MAAkC,CACpER,MAAO,kBACP,WAAY,CACVrB,aAAa,aAAD,OAAe6B,EAAMC,QAAQC,QAAQC,OAEnD,UAAW,CACThC,aAAa,aAAD,OAAe6B,EAAMC,QAAQC,QAAQC,OAEnD,QAAS,CACPX,MAAOQ,EAAMC,QAAQC,QAAQC,UAI3BvB,GAAcd,YAAOC,IAAPD,CAAY,CAC9BE,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBE,IAAK,GACL,iBAAkB,KAGd9B,GAAcwB,YAAOf,IAAPe,CAAmB,CACrCZ,YAAa,GACbkD,WAAY,WCnGCC,OAjBf,WACE,IAAQC,EAAeC,cAAfD,WACFE,EAAW1F,cAAe0F,SACxBvF,EAAMC,cAAND,EAER,OACE,cAAC,GAAD,CAAiBmB,UAAS,wBAA1B,SACE,cAAC,GAAD,CACEqC,SAAU6B,EACV9B,SAAUgC,EACV9G,MAAM,WACNgF,QAASzD,EAAE,sBAQbkB,GAAkB2B,YAAOC,IAAPD,CAAY,CAClCE,QAAS,OACTC,WAAY,SACZC,eAAgB,kB,qDCwCHmC,OAzDf,WACE,IAAQI,EAAeF,cAAfE,WACFC,EAAW5F,cAAe4F,SAC1BF,EAAW1F,cAAe0F,SAE1BG,EAAW7F,cAAe6F,SACxB1F,EAAMC,cAAND,EAEF2F,ECI6B,WACnC,MAA4C9F,cAApC0F,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAAUG,EAA5B,EAA4BA,YAE5B,OAAO9E,mBAAQ,WACb,SACE2E,EAAS5B,cACT0B,EAAS1B,cACT+B,GACAH,EAAS5B,aAAegC,OAAOD,GAAeL,EAAS1B,gBAKxD,CAAC4B,EAAUF,EAAUK,IDjBGE,GAErB5F,EAAWC,cAqBjB,OAfA4F,qBAAU,WACR,GACER,EAAS1B,cACT4B,EAAS5B,cACT4B,EAAS5B,aAAe0B,EAAS1B,aACjC,CACA,IAAME,EAAOE,YAA8BsB,EAAS1B,cACpD2B,EAAW,CACT3B,aAAc0B,EAAS1B,aACvBE,OACAH,aAAcM,YAAmBH,EAAMwB,EAAS1B,mBAGnD,CAAC4B,EAAUF,EAAUC,IAGtB,eAAC,GAAD,CAAiBrE,UAAS,wBAA1B,UACE,eAAC6E,GAAD,WACE,cAAC,GAAD,CACEvC,QAASzD,EAAE,iBACXoC,UAAWsD,EACXlC,SAAUgC,EACVjC,SAAUkC,EACVhH,MAAM,oBAENiH,GACA,cAACjD,EAAA,EAAD,CAAYC,QA9BL,WACbxC,EAAS+F,aAAY,KA6Bf,SACE,cAAC,KAAD,CAAkB1B,MAAM,iBAI7BoB,GACC,eAACO,GAAD,WACE,cAAC,KAAD,CAAkB3B,MAAM,UACxB,cAACzC,EAAA,EAAD,CAAYyC,MAAM,QAAlB,yCASJyB,GAAanD,YAAOC,IAAPD,CAAY,CAC7BE,QAAS,OACTC,WAAY,SACZC,eAAgB,kBAGZ/B,GAAkB2B,YAAOC,IAAPD,CAAY,IAE9BqD,GAAgBrD,YAAOC,IAAPD,CAAY,CAChCO,UAAW,GACX+C,WAAY,IACZpD,QAAS,OACTI,IAAK,GACLqB,QAAS,K,UEVI4B,OAtDf,YAAyC,IAAD,MAAnB9F,EAAmB,EAAnBA,SACnB,EAAmCT,cAA3B+F,EAAR,EAAQA,YAAaS,EAArB,EAAqBA,UACbC,EAAiB7G,cAAjB6G,aACAC,EAAgBjB,cAAhBiB,YACAvG,EAAMC,cAAND,EACFwG,EAAWX,OAAM,oBAACY,aAAanG,UAAd,aAAC,EAAwBqB,uBAAzB,QAA4C,GAgBnE,OAVAoE,qBAAU,WAENO,GACAI,aAAiBJ,EAAcD,IAC/BA,IAAcC,EAAaK,WAE3BJ,EAAYD,EAAaK,aAE1B,CAACL,EAAcD,EAAWE,IAG3B,eAAC,GAAD,CAAiBpF,UAAS,wBAA1B,UACE,eAAC,GAAD,WACE,cAACS,EAAA,EAAD,CAAaC,KAAM7B,EAAE,kBAArB,SACE,cAAC,GAAD,CAAab,MAAO,CAAEuE,OAAQ,GAA9B,0BAEF,cAAC,IAAD,CACErD,MAAOgG,GAAa,GACpBhE,MAAM,QACNC,YAAY,OACZC,YAAa,SAACC,GAvBpB+D,EAwBiB/D,MAGZlC,GACC,eAACsG,GAAD,CAAgBzH,MAAO,CAAE0H,aAAc,GAAvC,UACE,cAAC,IAAD,CAAcvG,SAAUA,EAAU6B,KAAM,SAD1C,OAEG7B,QAFH,IAEGA,OAFH,EAEGA,EAAU4B,aAIjB,eAAC4E,GAAD,WACE,wBAAO3F,UAAU,iBAAjB,4CACiByE,QADjB,IACiBA,OADjB,EACiBA,EAAamB,kBAD9B,QAC4C,KAE5C,wBAAO5F,UAAU,iBAAjB,cACIkF,GAAaG,EAAWX,OAAOQ,IAAYW,iBAAmB,cASpE5F,GAAYyB,YAAOC,IAAPD,CAAY,CAC5BE,QAAS,OACTC,WAAY,SACZnE,MAAO,SAGHiI,GAAejE,YAAOC,IAAPD,CAAY,CAC/BhE,MAAO,OACPkE,QAAS,OACTE,eAAgB,gBAChBG,UAAW,KAGPlC,GAAkB2B,YAAOC,IAAPD,CAAY,CAClCE,QAAS,OACTC,WAAY,SACZK,cAAe,WAGXhC,GAAcwB,YAAOf,IAAPe,CAAmB,CACrCZ,YAAa,GACbkD,WAAY,WAGRyB,GAAiB/D,YAAOf,IAAPe,CAAmB,CACxCF,WAAY,GACZI,QAAS,OACTI,IAAK,K,sBC5EQ8D,OAnBf,WACE,IAAQC,EAAUrH,cAAVqH,MACFhH,EAAWC,cAEXgH,EAAc,WAClBC,YAAW,WACTlH,EAASmH,iBAASzG,MACjB,MAGL,OACE,cAAC0G,GAAA,EAAD,CAAUC,OAAQL,EAAOM,iBAAkB,IAAMC,QAASN,EAA1D,SACE,cAACO,GAAA,EAAD,CAAOD,QAASN,EAAaQ,SAAS,QAAQC,QAAQ,SAAtD,SACGV,O,qBC0BF,SAASW,KACd,OAxBF,SACEC,EACAC,GAEkB,IADlBC,IACiB,yDACjB,EAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEjB,OAAOrH,mBAAQ,WACb,IAAKgH,IAAYC,IAAQG,EAAS,OAAO,KACzC,IACE,OAAOE,YACLN,EACAC,EACAG,EACAF,GAAwBG,EAAUA,OAAUvH,GAE9C,MAAOsG,GAEP,OADA/C,QAAQ+C,MAAM,yBAA0BA,GACjC,QAER,CAACY,EAASC,EAAKG,EAASF,EAAsBG,IAI1CE,CAAYC,KAAuBC,I,0DClCtCC,GAAoB,SAACnI,GACzB,IAAKA,EACH,MAAO,IAET,IAAMoI,EAAOC,KAAOnD,SAASlF,GACvBsI,EAAOF,EAAKE,OACZC,EAAQH,EAAKG,QACbC,EAAUJ,EAAKI,UAEjBC,EAAM,GAWV,OATIH,IACFG,GAAG,UAAOH,EAAP,WAEDC,IACFE,GAAG,UAAOF,EAAP,YAEDC,IACFC,GAAG,UAAOD,EAAP,aAEEC,GAsDMC,OA/Cf,YAA4C,EAAvBC,aAAwB,IAC3C,EAA6DnJ,cAArD+F,EAAR,EAAQA,YAAaH,EAArB,EAAqBA,SAAUwD,EAA/B,EAA+BA,SAAUrJ,EAAzC,EAAyCA,gBACjCI,EAAMC,cAAND,EACR,EAAyDP,cAAjDC,EAAR,EAAQA,WAIR,OAJA,EAAoBwJ,iCAEGxJ,EAAWa,IAAMS,QAGtC,eAACmI,GAAD,CAAehI,UAAU,wBAAzB,UACE,cAAC,GAAD,CACE1C,MAAM,mBACN4B,MAAOqI,KAAOO,GACXG,IAAIC,KAAQ,gBACZrF,OAAO,oBACVP,QAASzD,EAAE,4BAGb,cAAC,GAAD,CACEvB,MAAM,cACN6K,QAAS,cAAC,GAAD,IACT7F,QAASzD,EAAE,2BAGb,cAAC,GAAD,CACEvB,MAAM,gBACN4B,MAAOuF,GAAe,EACtBnC,QAASzD,EAAE,6BAEb,cAAC,GAAD,CACEvB,MAAM,kBACN4B,MAAOmI,GAAkB/C,EAAS5B,cAClCJ,QAASzD,EAAE,+BAEb,cAAC,GAAD,CACEvB,MAAM,8BACN6K,QAAS1J,GAAmB,cAAC,GAAD,IAC5BS,MAAQT,OAA2BgB,EAAT,OAC1B6C,QAEMzD,EADJJ,EACM,uCACA,4CASV2J,GAAY,WAChB,IAAQlD,EAAcxG,cAAdwG,UAGFpF,EAFiBxB,cAAfC,WAE0Ba,IAAMS,QAExC,OAAO,cAAC,GAAD,CAAiBV,SAAUW,EAAgBZ,MAAOgG,KAGrDmD,GAA0B,WAC9B,MAAyD/J,cAAjDC,EAAR,EAAQA,WAAYwJ,EAApB,EAAoBA,iCAEdjI,EAAiBvB,EAAWa,IAAMS,QAExC,OACE,cAAC,GAAD,CACEV,SAAUW,EACVZ,MAAK,OAAE6I,QAAF,IAAEA,OAAF,EAAEA,EAAkCvC,aAKzC8C,GAAkB,SAAC,GAMlB,IALLnJ,EAKI,EALJA,SACAD,EAII,EAJJA,MAKA,OAAKC,EAIH,eAAC,GAAD,WACE,cAACwB,EAAA,EAAD,UACE,+BAAOzB,MAET,cAACyB,EAAA,EAAD,UACE,sBAAM3C,MAAO,CAAEuK,SAAU,IAAzB,gBAAgCpJ,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAU4B,WAG5C,cAAC,IAAD,CAAc5B,SAAUA,EAAU6B,KAAK,YAXlC,MAgBLgH,GAAgBtG,YAAOC,IAAPD,CAAY,CAChCE,QAAS,OACTM,cAAe,SACfF,IAAK,GACL,MAAO,CACLJ,QAAS,OACTC,WAAY,SACZG,IAAK,EACLuG,SAAU,GACV,SAAU,CACRvD,WAAY,QAKZS,GAAiB/D,YAAOC,IAAPD,CAAY,CACjCE,QAAS,OACTC,WAAY,SACZG,IAAK,IAUDwG,GAAM,SAAC,GAAkD,IAAhDlL,EAA+C,EAA/CA,MAAO4B,EAAwC,EAAxCA,MAAOoD,EAAiC,EAAjCA,QAAS6F,EAAwB,EAAxBA,QACpC,OACE,eAACM,GAAD,WACGnG,EACC,cAAC,IAAD,CAAehF,MAAOgF,EAASoG,UAAU,QAAzC,SACE,eAAC/H,EAAA,EAAD,WACGrD,EADH,IACU,cAAC,KAAD,CAAiBU,MAAO,CAAEN,MAAO,WAI7C,cAACiD,EAAA,EAAD,UAAarD,IAEd4B,GACC,cAACyB,EAAA,EAAD,UACE,+BAAOzB,MAGViJ,MAKDM,GAAY/G,YAAOC,IAAPD,CAAY,CAC5BE,QAAS,OACTC,WAAY,SACZC,eAAgB,kBCnIH6G,OAnDf,WACE,IAAQ9J,EAAMC,cAAND,EACFJ,EAAkBC,cAAeD,gBAEvC,OACE,eAAC,GAAD,CAAiBuB,UAAU,wBAA3B,UACE,cAACW,EAAA,EAAD,UAAa9B,EAAE,mBACdJ,EACC,cAACkC,EAAA,EAAD,UAAa9B,EAAE,qCAEf,cAAC8B,EAAA,EAAD,UAAa9B,EAAE,wCAEjB,cAAC8B,EAAA,EAAD,UAAa9B,EAAE,mBACf,cAAC8B,EAAA,EAAD,UAAa9B,EAAE,mBACf,cAAC8B,EAAA,EAAD,UAAa9B,EAAE,mBACf,cAAC+J,EAAA,EAAD,CACEC,QAAQ,gBACRC,WAAY,CACVC,KACE,mBACEhN,OAAO,SACPiN,IAAI,uBAEJC,KAAK,wBAJP,qBAWN,cAACtI,EAAA,EAAD,UACE,cAACiI,EAAA,EAAD,CACEC,QAAQ,gBACRC,WAAY,CACVC,KACE,mBACEhN,OAAO,SACPiN,IAAI,uBAEJC,KAAK,wBAJP,2BAkBRlJ,GAAkB2B,YAAOC,IAAPD,CAAY,CAClCO,UAAW,GACX,OAAQ,CACNsG,SAAU,GACV7C,aAAc,IAEhB,MAAO,CACLtC,MAAO,WCUI8F,ICnEHC,GDmEGD,GA3Df,YAKW,IAAD,IAJRE,EAIQ,EAJRA,eACA9L,EAGQ,EAHRA,MACA+L,EAEQ,EAFRA,WACA/G,EACQ,EADRA,QAEA,EAAkCgH,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACQjL,EAAeD,cAAfC,WAEFqB,EAAgBrB,EAAWa,IAAMC,OACjCS,EAAiBvB,EAAWa,IAAMS,QAExC,OACE,eAAC8B,EAAA,EAAD,CAAK3B,UAAU,YAAf,UACGsC,EACC,cAAC7B,EAAA,EAAD,CAAaC,KAAM4B,EAAnB,SACE,kCAAQhF,EAAR,SAGF,gCAAQA,IAET+L,EACC,gCAAQA,IAER,mCACE,eAAC,GAAD,0BACME,EAAY3J,EAAgBE,SADlC,aACK,EAA8CiB,OACjD,cAAC,IAAD,CACEC,KAAK,OACL7B,SAAUoK,EAAY3J,EAAgBE,IAJ1C,IAMI,IACDsJ,EACC,sCACIG,EACEH,EACAA,EAAe7I,UACjBC,cAAc,GAAI,IAJtB,UAKI+I,EAAYzJ,EAAiBF,SALjC,aAKG,EAA8CmB,OAAQ,IACvD,cAAC,IAAD,CACEC,KAAK,OACL7B,SAAUoK,EAAYzJ,EAAiBF,OAI3C,gBAEF,cAAC6B,EAAA,EAAD,CACEF,QAAS,WACPiI,GAAcD,eAYxB9D,GAAiB/D,YAAOC,IAAPD,CAAY,CACjCE,QAAS,OACTC,WAAY,SACZG,IAAK,EACLuG,SAAU,KELGkB,GAzDmC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C7K,EAAMC,cAAND,EACR,EAKIP,cAJFqL,EADF,EACEA,sBACAxE,EAFF,EAEEA,aACA3G,EAHF,EAGEA,YACAD,EAJF,EAIEA,WAEF,EAAmDG,cAA3CD,EAAR,EAAQA,gBAAiBmL,EAAzB,EAAyBA,sBAEnBC,EACJF,GACAnK,YACEmK,EAAsBnJ,cAAc,GACpCjC,EAAWa,IAAMS,SAGrB,OACE,eAAC,GAAD,WACE,eAACiK,GAAD,WACG3E,GAAgB,cAAC,GAAD,CAAM4E,eAAgB5E,EAAc7H,MAAM,SAC1DuM,GACC,cAAC,GAAD,CACEvH,QAASzD,EAAE,8BACXkL,eAAgBF,EAChBvM,MAAM,KACN0M,OAAQvL,EAAkB,SAAM,SAIrCA,EACC,cAAC,GAAD,CACE6D,QAASzD,EAAE,iCACXuK,eAAgBQ,EAChBtM,MAAM,gBAGR,cAAC,GAAD,CACEgF,QAASzD,EAAE,iCACXuK,eAAgB5K,EAChBlB,MAAM,cACN+L,WAAW,SAGdM,GACC,cAAC,GAAD,CAAW9B,aAAc8B,IAE3B,cAAC,GAAD,IACA,cAAChI,EAAA,EAAD,CAAK3B,UAAU,kBAAf,SACE,cAACiK,EAAA,EAAD,CAAQ1I,QAASmI,EAAW1J,UAAU,aAAtC,iCAUFD,GAAkB2B,YAAOC,IAAPD,CAAY,CAClCE,QAAS,OACTM,cAAe,SACfF,IAAK,KAGD8H,GAAcpI,YAAOC,IAAPD,CAAY,CAC9BE,QAAS,OACTM,cAAe,SACfF,IAAK,KAUDkI,GAAO,SAAC,GAA2D,IAAD,EAAxDH,EAAwD,EAAxDA,eAAgBzM,EAAwC,EAAxCA,MAAOgF,EAAiC,EAAjCA,QAAS0H,EAAwB,EAAxBA,OACxC3E,EAAWC,aAAayE,EAAe5K,UAE7C,OACE,eAAC,GAAD,CAAYa,UAAU,wBAAtB,UACE,eAACmK,GAAD,WACG7H,EACC,cAAC7B,EAAA,EAAD,CAAaC,KAAM4B,EAAnB,SACE,cAAC3B,EAAA,EAAD,UAAarD,MAGf,cAACqD,EAAA,EAAD,UAAarD,IAEf,eAACqD,EAAA,EAAD,gBAEG0E,GAAY+E,aAAc/E,EAAU0E,SAGzC,eAACM,GAAD,WACE,eAAC,GAAD,WACE,cAAC,IAAD,CAAclL,SAAU4K,EAAe5K,SAAU6B,KAAM,SACvD,cAACL,EAAA,EAAD,oBAAaoJ,EAAe5K,gBAA5B,aAAa,EAAyB4B,YAEvCiJ,EACC,eAACrJ,EAAA,EAAD,WACGqJ,EADH,IACYM,YAAkBP,MAG9B,cAACpJ,EAAA,EAAD,UAAa2J,YAAkBP,YAOnClF,GAAanD,YAAOC,IAAPD,CAAY,CAC7BE,QAAS,OACTC,WAAY,SACZK,cAAe,SACfF,IAAK,KAGDqI,GAAmB3I,YAAOC,IAAPD,CAAY,CACnChE,MAAO,OACPkE,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChB,MAAO,CACLyG,SAAU,MAIR9C,GAAiB/D,YAAOC,IAAPD,CAAY,CACjCE,QAAS,OACTC,WAAY,SACZG,IAAK,KAGDmI,GAAgBzI,YAAOC,IAAPD,CAAY,CAChCE,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBpE,MAAO,SCpFM6M,GAlD2C,SAAC,GAQpD,IAPLb,EAOI,EAPJA,UACAc,EAMI,EANJA,UACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEQhM,EAAMC,cAAND,EAEFiM,EAAeC,uBAAY,WAC/B,OAAO,cAAC,GAAD,CAAcrB,UAAWA,MAC/B,CAACA,IAKEsB,EAAsBD,uBAC1B,kBACEN,EACE,cAAC,IAAD,CACED,UAAWA,EACXS,QAASR,IAGX,cAAC,IAAD,CACEnN,MAAOuB,EAAE,aACT2L,UAAWA,EACXU,QAASJ,MAGf,CAACjM,EAAG2L,EAAWM,EAAcL,IAG/B,OACE,cAAC,IAAD,CACEzM,MAAO,CAAEmN,UAAW,OAAQC,SAAU,QACtCV,OAAQA,EACRF,UAAWA,EACXG,cAAeA,EACfU,KAAMT,EACNC,UAAWA,EACXK,QAASF,EACTM,YA5BgB,GA6BhBR,aAA0BjM,EAAZgM,EAAc,kBAAuB,kB,8CF9D7C1B,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMoC,GAAiB,CAAEC,SAAUrC,GAASoC,gB,IGDhCE,G,oBAkHL,SAASC,GACdC,GAIA,OA/GK,SACLC,EACAC,GAEA,IAAQ7E,EAAYF,cAAZE,QACF8E,EACJF,aAA2BG,eAAcH,EAAgBE,WAAQrM,EAC7DuM,EAAmBC,aACvBH,EADwC,OAExC9E,QAFwC,IAExCA,SAAWvH,EACXoM,GAEIK,EAAkBC,YAAqB,OAACL,QAAD,IAACA,OAAD,EAACA,EAAOnF,QAASkF,GAGxDO,EAA+BzM,mBAAQ,WAC3C,OAAKiM,GAAoBC,EACrBD,EAAgBzM,WAAakN,SAAcZ,GAAca,SAExDN,EAGEA,EAAiBO,SAASX,GAC7BM,EACET,GAAce,QACdf,GAAcgB,aAChBhB,GAAca,SAPYb,GAAciB,QAHHjB,GAAciB,UAWtD,CAACd,EAAiBI,EAAkBE,EAAiBL,IAElDc,EAAgBC,aAAgB,OAACd,QAAD,IAACA,OAAD,EAACA,EAAOnF,SACxCkG,EAAiBC,cAEjBC,EAAUhC,sBAAW,sBAAC,8BAAAiC,EAAA,yDACtBZ,IAAkBX,GAAcgB,aADV,uBAExBzJ,QAAQ+C,MAAM,oCAFU,6BAKrB+F,EALqB,uBAMxB9I,QAAQ+C,MAAM,YANU,6BAUrB4G,EAVqB,uBAWxB3J,QAAQ+C,MAAM,yBAXU,6BAerB6F,EAfqB,wBAgBxB5I,QAAQ+C,MAAM,6BAhBU,8BAoBrB8F,EApBqB,wBAqBxB7I,QAAQ+C,MAAM,cArBU,kCAyBtBkH,GAAW,EAzBW,UA0BCN,EAAcO,YACtCH,QAAQlB,EAASsB,MACjBC,OAAM,WAGL,OADAH,GAAW,EACJN,EAAcO,YAAYH,QAC/BlB,EACAD,EAAgByB,IAAIzH,eAjCA,eA0BpB0H,EA1BoB,yBAqCnBX,EACJI,QACClB,EACAoB,EAAWrB,EAAgByB,IAAIzH,WAAauH,KAC5C,CACEI,SAAUC,YAAmBF,KAGhCG,KARI,uCAQC,WAAOC,GAAP,SAAAV,EAAA,6DACJH,EAAea,EAAU,CACvBC,QAAS,WAAa/B,EAAgBzM,SAAS4B,OAC/C6M,SAAU,CAAEC,aAAc/B,EAAMnF,QAASkF,QAASA,KAHhD,kBAMI6B,EAASI,OANb,6DAQF9K,QAAQ+K,MAAM,0BAAd,MARE,8DARD,uDAoBJX,OAAM,SAACrH,GAEN,MADA/C,QAAQ+K,MAAM,0BAA2BhI,GACnCA,MA3DgB,4CA6DzB,CACDqG,EACAN,EACAa,EACAf,EACAC,EACAgB,IAGF,MAAO,CAACT,EAAeW,GAShBiB,CACLrC,EAHkB7E,cAAZmH,QAII9G,UAAwB1H,I,SAzH1BgM,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,Q,KCuBZ,IAgdeyC,GAhdQ,WAAO,IAAD,YACnBrP,EAAMC,cAAND,EACAmI,EAAYF,cAAZE,QACR,EAAmDtI,cAA3CyP,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAAW3P,EAA/B,EAA+BA,gBAE/B,EAOIH,cANF+P,EADF,EACEA,iBACAlJ,EAFF,EAEEA,aACA5G,EAHF,EAGEA,WACY+P,EAJd,EAIEC,WACA5E,EALF,EAKEA,sBACAnL,EANF,EAMEA,YAGIgQ,EXZqC,WAAO,IAAD,IACzCrJ,EAAiB7G,cAAjB6G,aACAD,EAAcxG,cAAdwG,UAEFG,EAAWX,OAAM,oBACrBY,aAAY,OAACH,QAAD,IAACA,OAAD,EAACA,EAAchG,iBADN,aACrB,EAAsCqB,uBADjB,QACoC,GAG3D,OAAOb,mBAAQ,WACb,OAAO0F,EAAWX,OAAOQ,IAAc,IACtC,CAACG,EAAUH,IWEWuJ,GAEnBC,EAAuBC,cAC7B,EAAsCrF,oBAAS,GAA/C,mBAAOsF,EAAP,KAAoBC,EAApB,KAEA,EJlCa,SACbjP,EACAE,EACAqO,GAMA,MAA6BrH,cAArBmH,EAAR,EAAQA,QAASjH,EAAjB,EAAiBA,QACX8H,EAAeC,eACfC,EAAUC,aAAkB,OAACjI,QAAD,IAACA,SAAWvH,EAAWG,GAEnDsP,EAAcvP,mBAAQ,kBAAMH,YAAe2O,EAAYvO,KAAgB,CAC3EA,EACAuO,IAEItB,EAAiBC,cAEvB,OAAOnN,mBAAQ,WACb,IAAKmP,IAAiBb,IAAYrO,IAAkBE,EAClD,OAAOyL,GAGT,IAAM4D,EACJD,GAAeF,IAAYA,EAAQzC,SAAS2C,GAE9C,OAAItP,IAAkByM,SACb,CACLb,SAAUrC,GAASiG,KACnBC,QACEF,GAAqBD,EAArB,sBACI,4BAAAlC,EAAA,sEAC0B8B,EAAaQ,QAAQ,CAC3CpQ,MAAM,KAAD,OAAOgQ,EAAY7B,IAAIzH,SAAS,OAFzC,cACQ2J,EADR,OAKE1C,EAAe0C,EAAW,CACxB5B,QAAQ,QAAD,OAAUrD,YACf4E,GADK,sBANX,SAUQK,EAAUzB,OAVlB,gDAYArO,EACN8O,WAAYY,OAAoB1P,EAAY,4BAGvC8L,KAER,CACDuD,EACAb,EACArO,EACAE,EACAoP,EACAF,EACAnC,IInBE2C,CACFjR,EAAWa,IAAMC,OACjBd,EAAWa,IAAMS,QACjBsO,GANA3C,EADF,EACEA,SACSiE,EAFX,EAEEJ,QACYK,EAHd,EAGEnB,WAOF,EAKIpK,cAJFwL,EADF,EACEA,eACAC,GAFF,EAEEA,oBACAxO,GAHF,EAGEA,YACAyO,GAJF,EAIEA,WAEIC,GAAcC,YAASC,MAEvBC,GAAuBlF,uBAC3B,SAACnL,GACCsQ,IAAqB,GACrBN,GAAoBxQ,IAAMC,MAAOO,KAEnC,CAACgQ,KAGGO,GAAa,uCAAG,sBAAAnD,EAAA,yDACfyC,EADe,iEAKlBZ,GAAe,GALG,SAMZY,IANY,OAOlBQ,GAAqBH,IACrBD,KARkB,2EAWlBhB,GAAe,GAXG,6EAAH,qDAebuB,GAAoB5E,IAAarC,GAASoC,eAEhD,GAA0B8E,cAAnBC,GAAP,qBACA,GAAkChH,oBAAS,GAA3C,qBAAOiH,GAAP,MAAkBC,GAAlB,MACA,GAAoC9E,GAClCvG,GADF,qBAAOyI,GAAP,MAAiB6C,GAAjB,MAIMC,GXpG2B,WACjC,MAA4ChS,cAApC0F,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAAUG,EAA5B,EAA4BA,YAE5B,OAAO9E,mBAAQ,WACb,OAAKyE,EAAS1B,aAGT+B,EAGAH,EAAS5B,kBAAd,EACS,gBAHA,iBAHA,kBAUR,CAAC0B,EAAUE,EAAUG,IWqFJkM,GAEdC,GAAgBjR,mBAAQ,WAAO,IAAD,EAClC,OAAO,EAAP,iBACGP,IAAMC,MAAQ8F,GADjB,cAEG/F,IAAMS,OAAS8J,GAFlB,IAIC,CAACxE,EAAcwE,IAEZkH,GAAmBlR,mBAAQ,WAAO,IAAD,EACrC,OAAO,EAAP,iBACGP,IAAMC,MAAQ8O,GAAc,IAD/B,cAEG/O,IAAMS,QAA8B,OAArB8J,QAAqB,IAArBA,OAAA,EAAAA,EAAuBnJ,cAAc,KAAM,IAF7D,IAIC,CAAC2N,EAAYxE,IAEVmH,GAA8BC,QAClCxS,EAAWa,IAAMC,QACfgP,EAAiBjP,IAAMC,SADzB,UAEEgP,EAAiBjP,IAAMC,cAFzB,aAEE,EAA+BmG,YAC/B2I,GACA6C,sBAAW7C,EAAD,UAAayC,GAAcxR,IAAMC,cAAjC,aAAa,EAA4BF,SAAS8R,UAAUC,GACpEF,uBACE,UAAA3C,EAAiBjP,IAAMC,cAAvB,eAA+BmG,YAAa,IADpC,UAERoL,GAAcxR,IAAMC,cAFZ,aAER,EAA4BF,SAAS8R,YAK7C,GAAkD3H,oBAAkB,GAApE,qBAAO6H,GAAP,MAA0BjB,GAA1B,MACQkB,GAAaC,OAAbD,SACFE,IAAWhD,EAEXiD,GACJ3D,KAAanC,IAAcgB,cAC3BmB,KAAanC,IAAce,SAC1B2E,IAAqBvD,KAAanC,IAAca,SAE7CkF,GAAoBC,cAE1B7M,qBAAU,WACJgJ,KAAanC,IAAce,SAC7B0D,IAAqB,KAEtB,CAACtC,GAAUuD,KAEd,IAQMO,GAA4B3G,uBAChC,SAACjL,GAC+B,UAA1BA,EAAeiB,QAAsB+O,IACvCI,IAAqB,GACrBN,GAAoBxQ,IAAMS,OAAQiQ,MAElCI,IAAqB,GACrBN,GAAoBxQ,IAAMS,OAAQC,MAGtC,CAAC8P,GAAqBE,KAGlB6B,GAAiBhS,mBAAQ,WAC7B,OAAIqH,EACGzI,EAAWa,IAAMC,QAAWd,EAAWa,IAAMS,QAGd,KAAlCgR,GAAiBzR,IAAMC,QACY,KAAnCwR,GAAiBzR,IAAMS,QAEhBhB,EAAE,eACAiS,GACFjS,EAAE,8BACAuR,GACF5E,IAAarC,GAASiG,KACzBvQ,EAAE,QACF2M,IAAarC,GAASyI,OACtB/S,EAAE,UACF,GACK6R,KAEClC,EAGV,OAAOF,QAAP,IAAOA,IAAkB,cAFlB,8CAjBAzP,EAAE,eAsBJuS,KAAaS,aAAmBT,IACnCvS,EAAE,iBACFA,EAAE,mBAEP,CACDA,EACAgS,GACAtS,EACAyI,EACAoK,GACAN,GACAV,GACA5E,EACA8C,EACAoC,GACAlC,IAGIsD,GAAqBnS,mBAAQ,WACjC,QAAIqH,IACEoJ,GACKW,QAAQrB,KACNoB,KAEAS,IACDD,IAAW1D,KAAanC,IAAca,UACpCkC,IAEDkC,GACFK,QAAQL,KAEPY,QAKX,CACDtK,EACAoJ,GACAV,EACAoB,GACAS,GACA3D,GACA0D,GACAZ,GACAlC,IAGF,GAUIlF,mBAOD,CACDyI,aAAa,EACblH,WAAW,EACXmH,oBAAgBvS,EAChBkL,eAAe,EACfF,sBAAkBhL,EAClBmL,YAAQnL,IAvBV,8BAEIsS,GAFJ,GAEIA,YACAlH,GAHJ,GAGIA,UACAmH,GAJJ,GAIIA,eACAvH,GALJ,GAKIA,iBACAE,GANJ,GAMIA,cACAC,GAPJ,GAOIA,OAEFqH,GATF,MA0BMC,GAAkBnH,uBACtB,SAAC7L,GACCkC,GAAYlC,KAEd,CAACkC,KAGG+Q,GAA6CC,aACjD/D,EAAiBjP,IAAMC,QAGnBgT,GAAiBtH,uBAAY,WACjCoH,IAAkB/Q,GAAY+Q,GAAe3M,aAC5C,CAAC2M,GAAgB/Q,KAEdkR,GAAkBvH,uBAAY,WAClCoH,IACE/Q,IAAasD,OAAOyN,GAAe3M,WAAa,GAAGI,cACpD,CAACuM,GAAgB/Q,KAEdmR,GAAmBxB,QACvBoB,KAAc,UAAIvB,GAAcxR,IAAMC,cAAxB,aAAI,EAA4BmT,QAAQL,MAiBlDM,GCvSD,WACL,IAAQzL,EAAYF,cAAZE,QACR,EAAyDtI,cAAjD4F,EAAR,EAAQA,SAAUjF,EAAlB,EAAkBA,MAAOQ,EAAzB,EAAyBA,OAAQqF,EAAjC,EAAiCA,UAAW4C,EAA5C,EAA4CA,SAC5C,EAA2CxJ,cAAnC6G,EAAR,EAAQA,aAAcuN,EAAtB,EAAsBA,iBAEhBC,EAAWjM,KAuDjB,OArDuBoG,cAET,uCAAG,oCAAAE,EAAA,yDACT4F,EADS,OACGzN,QADH,IACGA,OADH,EACGA,EAAckI,IAAIzH,WAC9BiN,EACJ3N,IAAS,UACT1F,YAAe0F,EAAD,OAAYC,QAAZ,IAAYA,OAAZ,EAAYA,EAAchG,iBAD/B,aACT,EAAmDkO,IAAIzH,YACnDkN,EALS,OAKMJ,QALN,IAKMA,OALN,EAKMA,EAAkB9M,WAElCvG,EAAM0T,YAAelT,EAAOkT,WAPlB,sBAQP,IAAIC,MAAM,sBARH,UAUVL,EAVU,sBAWP,IAAIK,MAAM,kBAXH,UAaVhM,EAbU,sBAcP,IAAIgM,MAAM,mBAdH,UAgBVlL,EAhBU,uBAiBP,IAAIkL,MAAM,oBAjBH,WAoBV1O,EAAS5B,aApBC,uBAqBP,IAAIsQ,MAAM,oBArBH,WAwBVH,EAxBU,uBAyBP,IAAIG,MAAM,6BAzBH,WA4BVJ,EA5BU,uBA6BP,IAAII,MAAM,kBA7BH,WA+BVF,EA/BU,uBAgCP,IAAIE,MAAM,2BAhCH,eAmCTC,EAAQ3O,EAAS5B,aAAe,IAnCvB,kBAqCRiQ,EAASO,IACd,6CACA7T,EAAM0T,WACNlT,EAAOkT,WACPH,EACAC,EACAC,EACAvL,KAAOO,GACJG,IAAIC,KAAQ,gBACZiL,OACHF,IA/Ca,4CAAH,qDD8ROG,GAEfC,GAAatI,sBAAW,sBAAC,sBAAAiC,EAAA,yDACxByF,GADwB,iEAM3BR,GAAa,CACXtH,eAAe,EACfqH,oBAAgBvS,EAChBsS,aAAa,EACbtH,sBAAkBhL,EAClBmL,YAAQnL,EACRoL,WAAW,IAZc,SAerB4H,KAfqB,OAgB3BzP,QAAQC,IAAI,WAEZgP,GAAa,CACXtH,eAAe,EACfqH,oBAAgBvS,EAChBsS,aAAa,EACbtH,sBAAkBhL,EAClBmL,YAAQnL,EACRoL,WAAW,IAxBc,kDA2B3B7H,QAAQC,IAAR,MACAgP,GAAa,CACXtH,eAAe,EACfqH,oBAAgBvS,EAChBsS,aAAa,EACbtH,iBAAkB,KAAeQ,QACjCL,YAAQnL,EACRoL,WAAW,IAlCc,sGAsC5B,CACDmH,GACAhL,EACAoH,EACA2D,GACAU,GACA/D,IAGF9J,qBAAU,YACHrG,EAAWa,IAAMC,QAAUyQ,IAC9BF,GAAoBxQ,IAAMC,MAAOyQ,MAElC,CAACF,GAAqBrR,EAAYuR,KAErC,IAAMwD,GAAsBvI,uBAAY,WACtCkH,GAAa,CACXD,oBAAgBvS,EAChBgL,oBACAG,UACAD,iBACAoH,mBAED,CAACpH,GAAeoH,GAAatH,GAAkBG,KAE5C2I,GAAuBxI,uBAAY,WACvCkH,GAAa,CACXF,aAAa,EACbC,kBACArH,iBACAF,oBACAG,YAGEA,IACFxJ,GAAY,MAEb,CAACuJ,GAAevJ,GAAaqJ,GAAkBuH,GAAgBpH,KAElE,OACE,eAACjJ,EAAA,EAAD,WACE,cAAC,GAAD,IACCoQ,IACC,cAAC,GAAD,CACErH,OAAQqH,GACRyB,cAAexB,GACfyB,gBAAiBH,GACjB3I,cAAeA,GACfE,UAAWA,GACXD,OAAQA,GACRwD,UAAWA,EACXkC,gBAAiBA,GACjB5G,UAAW2J,GACX5I,iBAAkBA,GAClBD,UAAW+I,KAGf,cAAC,IAAD,CACEjW,MAAK,UAAKuB,EAAE,QAAP,KACLhB,GAAG,sBACHsB,SAAUZ,EAAWa,IAAMC,OAC3BqU,OAAQpB,GACRqB,MAAOtB,GACPuB,gBAAgB,EAChBC,eAAgBtB,GAChBuB,cAAevV,EAAWa,IAAMS,QAChCoQ,qBAAsBA,GACtB8D,OAAQlD,GAAiBzR,IAAMC,OAC/B2U,UAAW9B,KAGb,cAACvQ,EAAA,EAAD,CAAK3B,UAAU,eAAf,SACE,cAACiU,EAAA,EAAD,CAAc1S,QAASoO,MAEzB,cAAC,IAAD,CACErS,MAAK,UAAKuB,EAAE,cAAP,KACLhB,GAAG,uBACHsB,SAAUZ,EAAWa,IAAMS,QAC3BqU,UAAWnD,QAAQvS,GACnBqV,eAAe,EACfC,cAAevV,EAAWa,IAAMC,OAChC4Q,qBAAsByB,GACtBqC,OAAQlD,GAAiBzR,IAAMS,SAAW,GAC1CmU,UAAW,kBAAM,MACjB/S,UAAQ,EACR+I,OAAQvL,EAAkB,SAAM,IAChC6D,QACoBzD,EAAlBJ,EAAoB,wBAA6B,iBAGpDD,GACC,cAAC,GAAD,CAAiB4K,eAAgB5K,EAAalB,MAAM,kBAEtD,eAAC6W,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAWhV,SAAUZ,EAAWa,IAAMC,SACtC,cAAC+U,GAAD,OAGF,eAACzS,EAAA,EAAD,CAAK3B,UAAU,oBAAf,UACGuR,KAAoBnB,IACnB,cAACzO,EAAA,EAAD,CAAKjE,MAAM,MAAX,SACE,cAACuM,EAAA,EAAD,CACEoK,WAAS,EACTpT,SACEsP,IACA3C,KAAanC,IAAcgB,cAC3B0E,GAEF5P,QAAO,sBAAE,sBAAAyL,EAAA,6DACPwD,IAAa,GADN,kBAGCC,KAHD,OAILD,IAAa,GAJR,gDAMLA,IAAa,GANR,yDAPX,SAiBG5C,KAAanC,IAAce,QAC1B,eAAC7K,EAAA,EAAD,CAAK3B,UAAU,UAAf,UACGnB,EAAE,aADL,IACmB,cAACyV,EAAA,EAAD,CAAkBtT,KAAM,QAEzCmQ,IAAqBvD,KAAanC,IAAca,SAClDzN,EAAE,YADA,UAGCA,EAAE,WAHH,sBAGiBN,EAAWa,IAAMC,cAHlC,aAGiB,EAAyB0B,YAKpD,cAACwT,GAAD,CACE7W,MAAO6T,KAAoBnB,GAAW,MAAQ,OADhD,SAGE,cAACnG,EAAA,EAAD,CACEoK,WAAS,EACTpT,SAAW6Q,IAAkClD,EAC7CrN,QAASyF,EAhMJ,WACToJ,GACFD,KAEA8B,GAAa,CACXD,oBAAgBvS,EAChBkL,eAAe,EACfF,sBAAkBhL,EAClBsS,aAAa,EACbnH,YAAQnL,KAzJQ,WAChB2R,KAAaS,aAAmBT,IAClCoD,cAEAhD,MAyUI,SAKG5C,EACC,cAAC0F,EAAA,EAAD,CAAkBtW,MAAO,CAAEoF,MAAO,QAASqR,KAAM,MAEjD9C,cAWR4C,GAAwB7S,YAAOC,IAAPD,CAAY,CACxC,kBAAmB,CACjBgT,gBAAiB,kBACjBtR,MAAO,qBAIL+Q,GAAazS,YAAOC,IAAPD,CAAY,CAC7BE,QAAS,OACTM,cAAe,SACfF,IAAK,KE1XQ2S,GApHY,WACzB,MAAkCrL,mBAHvB,GAGX,mBAAOsL,EAAP,KAAkBC,EAAlB,KACA,EAAkDvL,oBAAS,GAA3D,mBAAOwL,EAAP,KAA0BC,EAA1B,KACA,EAAuCC,cAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBAEbC,EAAcC,cACdC,EAAYC,YAChBH,GAAeA,EAAYE,UACtBF,EAAYE,eACb5V,GAEA8V,EAAYD,YAChBH,GAAeA,EAAYI,UACtBJ,EAAYI,eACb9V,GAEEZ,EAAMC,cAAND,EAER,OACE,qCACGiW,GACC,cAAC,IAAD,CACE1O,KAAM0O,EACNxO,QAAS,kBAAMyO,GAAqB,MAGxC,eAACpT,EAAA,EAAD,CACE3B,UAAS,sDACPiV,EAAY,kBAAoB,IAFpC,UAKE,eAACtT,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACE,cAACD,EAAA,EAAD,CACE3B,UAAS,UArCD,IAsCN4U,EAA4B,aAAe,GADpC,uCAITrT,QAAS,kBAAMsT,EAzCP,IAoCV,SAOE,4BAAIhW,EAAE,cAER,cAAC8C,EAAA,EAAD,CACE3B,UAAS,UA7CF,IA8CL4U,EAA2B,aAAe,GADnC,iCAEgBK,EAAY,eAAiB,IACtD1T,QAAS,kBAAMsT,EAhDR,IA4CT,SAME,4BAAIhW,EAAE,aAER,cAAC8C,EAAA,EAAD,CACE3B,UAAS,UApDR,IAqDC4U,EAAqB,aAAe,GAD7B,iCAEgBK,EAAY,eAAiB,IACtD1T,QAAS,kBAAMsT,EAvDd,IAmDH,SAME,cAACpU,EAAA,EAAD,CAAaC,KAAM7B,EAAE,WAArB,SACE,4BAAIA,EAAE,iBAIZ,eAAC8C,EAAA,EAAD,CAAK6T,GAAI,EAAGxV,UAAU,oBAAtB,WACIiV,GACA,eAACtT,EAAA,EAAD,CAAK3B,UAAU,oBAAoByV,GAAI,EAAvC,UACE,sBACEzV,UAAU,gCACVhC,MAAO,CAAE8C,YAAa,GAFxB,SAIGjC,EAAE,aAEL,cAAC,IAAD,CACEsB,QAAS8U,EACT7U,SAAU,kBAAM8U,GAAiBD,SAIvC,cAACtT,EAAA,EAAD,CAAK3B,UAAU,cAAcc,YAAamU,EAAY,IAAM,EAA5D,SACE,cAACS,EAAA,EAAD,CAAcnU,QAAS,kBAAMwT,GAAqB,cAIxD,eAACpT,EAAA,EAAD,CAAKgU,QAASV,EAAY,SAAW,IAAKW,GAAI,IAA9C,UApFc,IAqFXhB,GACC,cAAC,IAAD,CACES,UAAS,OAAEA,QAAF,IAAEA,SAAa5V,EACxB8V,UAAS,OAAEA,QAAF,IAAEA,SAAa9V,IAvFjB,IA0FVmV,GACC,eAACjT,EAAA,EAAD,CAAK3B,UAAU,kBAAf,UACE,cAAC,wBAAD,IACA,cAAC,gCAAD,IACA,cAAC2B,EAAA,EAAD,CAAKiU,GAAI,EAAGC,UAAU,SAAtB,SACE,gCACE,cAACjN,EAAA,EAAD,CACEC,QAAQ,uBACRC,WAAY,CACVgN,KAAM,sBACNC,MACE,mBACEha,OAAO,SACPiN,IAAI,sBACJC,KAAK,qDAvGhB,IAgHJ2L,GAAsB,cAAC,GAAD,W,0CCxHzBoB,GAGD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAM7Z,EAAU,EAAVA,IACJ8Z,EAAgBC,cAAhBD,YACFE,EAAkBC,cAClBC,EAAWC,YAAcL,EAAYM,KAAK,OACxC3X,EAAMC,cAAND,EAEF4X,EACJ/R,OACEuR,EAAKS,gBAAkBT,EAAKS,gBAAkBT,EAAKU,uBAErDC,KAAYC,MAAMC,WAClBV,EACA,IACIW,EAAkBrS,OACtBuR,EAAKS,gBAAkBT,EAAKe,kBAAoBf,EAAKgB,YAEjDC,EACJC,MAAMV,IAAqC,IAApBM,EACnB,EACAN,EAAeM,EACfK,EAAYnB,EAAKe,kBACnBf,EAAKe,kBACLf,EAAKgB,WACHI,EAASpB,EAAKS,gBAChBT,EAAKS,gBACLT,EAAKU,sBACHW,EAAShC,YAAYW,EAAKqB,OAAOzZ,IACjC0Z,EAASjC,YAAYW,EAAKsB,OAAO1Z,IACvC,OACE,eAAC8D,EAAA,EAAD,CAAe3B,UAAU,mBAAzB,UACE,eAAC2B,EAAA,EAAD,CAAK3B,UAAU,oBAAoBtC,MAAO4Y,EAAW,EAAI,GAAzD,UACE,cAAC,IAAD,CACEjB,UAAS,OAAEiC,QAAF,IAAEA,SAAU7X,EACrB8V,UAAS,OAAEgC,QAAF,IAAEA,SAAU9X,EACrBuB,KAAM,KAER,wBAAOhD,MAAO,CAAEwD,WAAY,IAA5B,UACGyU,EAAKqB,OAAOvW,OAAOyW,cADtB,KACuC,IACpCvB,EAAKsB,OAAOxW,OAAOyW,oBAGxB,eAAC7V,EAAA,EAAD,CACEjE,MAAO4Y,EAAW,EAAI,GACtBV,GAAIU,EAAW,IAAM,EACrBtW,UAAU,uBAHZ,UAKGsW,GAAY,uBAAOtW,UAAU,iBAAjB,SAAmCnB,EAAE,SAClD,sCAAS4Y,YAAcL,SAEzB,eAACzV,EAAA,EAAD,CACEjE,MAAO4Y,EAAW,EAAI,IACtBV,GAAIU,EAAW,EAAI,EACnBtW,UAAU,uBAHZ,UAKGsW,GAAY,uBAAOtW,UAAU,iBAAjB,SAAmCnB,EAAE,YAClD,sCAAS4Y,YAAcJ,SAEzB,eAAC1V,EAAA,EAAD,CACEjE,MAAO4Y,EAAW,EAAI,IACtBV,GAAIU,EAAW,EAAI,EACnBtW,UAAS,eAAUsW,EAAW,kBAAoB,eAHpD,UAKGA,GAAY,uBAAOtW,UAAU,iBAAjB,SAAmCnB,EAAE,SAClD,wBACEmB,UAAS,qBAAgBkX,EAAM,EAAI,aAAe,gBADpD,UAGGA,EAAIQ,QAAQ,GAHf,YAlCMtb,IA4CCub,OAAMC,KAAK5B,ICmEX6B,GA1IV,SAAC,GAAwB,IAAD,QAArBN,EAAqB,EAArBA,OAAQO,EAAa,EAAbA,OACN5B,EAAgBC,cAAhBD,YACFI,EAAWC,YAAcL,EAAYM,KAAK,OAChD,EAAsDlN,oBAAS,GAA/D,mBAAOyO,EAAP,KAA4BC,EAA5B,KACA,EAAwD1O,mBAAS,GAAjE,mBAAO2O,EAAP,KAA6BC,EAA7B,KACA,EAAuC5O,mBAAuB,MAA9D,mBAAO6O,EAAP,KAAmBC,EAAnB,KACMC,EAAgBd,EAAO5Q,QAAQ2R,cAC/BC,EAAgBT,EAAOnR,QAAQ2R,cAC/BE,EAAeC,cACb5Z,EAAMC,cAAND,EACA6Z,EAAaC,cAAbD,SAEFE,EAAiBjZ,mBACrB,kBACEwY,EACIA,EACGU,QAAO,SAAC5C,GACP,OAA6B,IAAzBgC,IAEgC,IAAzBA,EAEPhC,EAAKqB,OAAOzZ,KAAOwa,GACnBpC,EAAKsB,OAAO1Z,KAAOwa,EAInBpC,EAAKqB,OAAOzZ,KAAO0a,GACnBtC,EAAKsB,OAAO1Z,KAAO0a,MAIxBO,MAAM,EAAG,GACZ,KACN,CAACX,EAAYF,EAAsBI,EAAeE,IAG9CQ,EAAuBpZ,mBAC3B,kBAAM9D,OAAOgB,KAAK2b,GAAcQ,KAAI,SAACC,GAAD,OAAUA,EAAKX,mBACnD,CAACE,IA8BH,OA3BA5T,qBAAU,WACH8T,EAAS9Z,OACd,sBAAC,gCAAAoO,EAAA,sEAC0BkM,aAAcb,EAAeE,GADvD,cACOJ,EADP,OAGOgB,EAAiBhB,EACnBA,EACGU,QAAO,SAAC5C,GAAe,IAAD,IACrB,OACE8C,EAAqBK,SAArB,OAA8BnD,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAMqB,cAApC,aAA8B,EAAczZ,KAC5Ckb,EAAqBK,SAArB,OAA8BnD,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAMsB,cAApC,aAA8B,EAAc1Z,OAG/Cmb,KAAI,SAAC/C,GACJ,OAAOA,EAAKpY,MAEhB,GAdL,SAgBwBwb,YAAgBF,EAAgBT,EAAS9Z,OAhBjE,QAgBO0a,EAhBP,SAmBGlB,EAAiBkB,GAnBpB,0CAAD,KAuBC,CAACjB,EAAeE,EAAeQ,EAAsBL,EAAS9Z,QAG/D,qCACE,eAAC+C,EAAA,EAAD,CACE3B,UAAU,oCACV0F,aAAcqS,EAAsB,EAAI,OAF1C,UAIE,eAACpW,EAAA,EAAD,CAAK3B,UAAU,oBAAf,UACE,mBAAGA,UAAU,aAAahC,MAAO,CAAE8C,YAAa,GAAhD,SACGjC,EAAE,oBAEL,wBAAOmB,UAAU,iBAAjB,wBACIuX,EAAOxW,cADX,aACI,EAAeyW,cADnB,eACoCM,EAAO/W,cAD3C,aACoC,EAAeyW,cADnD,UAIF,cAAC7V,EAAA,EAAD,CACE3B,UAAU,qCACVuB,QAAS,kBAAMyW,GAAwBD,IAFzC,SAIGA,EAAsB,cAACwB,GAAA,EAAD,IAAwB,cAACC,GAAA,EAAD,UAGjDzB,GACA,qCACE,cAAC0B,GAAA,EAAD,IACA,eAAC9X,EAAA,EAAD,CAAKjE,MAAO,EAAZ,UACE,eAACiE,EAAA,EAAD,CAAKgU,QAAS,EAAG3V,UAAU,qBAA3B,UACE,eAAC2B,EAAA,EAAD,CAAKjE,MAAO,GAAKsC,UAAU,uBAA3B,UACE,uBACEA,UAAoC,IAAzBiY,EAA6B,SAAW,GACnD1W,QAAS,kBAAM2W,EAAwB,IAFzC,SAIGrZ,EAAE,SAEL,uBACEmB,UAAoC,IAAzBiY,EAA6B,SAAW,GACnD1W,QAAS,kBAAM2W,EAAwB,IAFzC,mBAIGX,EAAOxW,cAJV,aAIG,EAAeyW,gBAElB,uBACExX,UAAoC,IAAzBiY,EAA6B,SAAW,GACnD1W,QAAS,kBAAM2W,EAAwB,IAFzC,mBAIGJ,EAAO/W,cAJV,aAIG,EAAeyW,oBAGlBlB,GACA,qCACE,cAAC3U,EAAA,EAAD,CAAKjE,MAAO,GAAZ,SACE,gCAAQmB,EAAE,WAEZ,cAAC8C,EAAA,EAAD,CAAKjE,MAAO,IAAZ,SACE,gCAAQmB,EAAE,cAEZ,cAAC8C,EAAA,EAAD,CAAKjE,MAAO,IAAMsC,UAAU,aAA5B,SACE,gCAAQnB,EAAE,iBAKjB+Z,EAAeI,KAAI,SAAC/C,EAAWyD,GAAZ,OAClB,cAAC,GAAD,CAAkBzD,KAAMA,GAAWyD,gB,SC7I3CC,GAID,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,kBAC7B,OACE,wBACEC,IAAG,sDAAiDH,EAAjD,qBAAyEC,EAAzE,0BAAmGC,GACtGnc,OAAO,OACPD,MAAM,OACNsc,YAAY,OAKHrC,OAAMC,KAAK+B,I,+DCJpBM,GAQD,SAAC,GAQC,IAPLC,EAOI,EAPJA,UACAC,EAMI,EANJA,WACA5C,EAKI,EALJA,OACAO,EAII,EAJJA,OACA8B,EAGI,EAHJA,YACAE,EAEI,EAFJA,kBACAM,EACI,EADJA,aAEQnM,EAAYnH,cAAZmH,QACApP,EAAMC,cAAND,EAEFwb,EAAc,kBAClB,cAAC,KAAD,CACEC,KAAMF,EACNtR,WAAY,CACVyR,MAAO,gBAAM/c,EAAN,2BAAkB,oCAAOwC,UAAU,cAAiBxC,MAE7Dgd,mBAAoB,kBAClB,+BACE,oBAAItZ,MAAM,OAAV,SAAkBrC,EAAE,UACpB,oBAAIqC,MAAM,OAAV,SAAkBrC,EAAE,UACpB,oBAAIqC,MAAM,QAAV,SAAmBrC,EAAE,SACrB,oBAAIqC,MAAM,QAAV,SAAmBqW,EAAOxW,SAC1B,oBAAIG,MAAM,QAAV,SAAmB4W,EAAO/W,SAC1B,oBAAIG,MAAM,QAAV,SAAmBrC,EAAE,WACrB,oBAAIqC,MAAM,QAAV,SAAmBrC,EAAE,aAGzB4b,YAAa,SAACC,EAAOC,GACnB,IAAMC,EAASlW,OAAOiW,EAAGE,WAAa,EAAI,OAAS,MAC7CC,EACJpW,OAAOiW,EAAGE,WAAa,EAAIF,EAAGE,UAAYF,EAAGI,WACzCC,EACJtW,OAAOiW,EAAGM,WAAa,EAAIN,EAAGM,UAAYN,EAAGO,WACzCC,EACJR,EAAG1E,KAAKqB,OAAOzZ,GAAGya,gBAAkBf,EAAO5Q,QAAQ2R,cAC/CwC,EACAE,EACAI,EACJT,EAAG1E,KAAKqB,OAAOzZ,GAAGya,gBAAkBf,EAAO5Q,QAAQ2R,cAC/C0C,EACAF,EACAO,EAAU3W,OAAOiW,EAAGW,WAAaH,EACvC,OACE,qCACE,oBAAIja,MAAM,OAAV,SACGqa,KACEpI,KAAKwH,EAAGa,YAAYC,WACpB5Y,OAAO,wBAEZ,oBAAI7C,UAAW4a,EAAQ1Z,MAAM,OAA7B,SACG0Z,EAAOpD,gBAEV,oBAAIxX,UAAW4a,EAAQ1Z,MAAM,QAA7B,SACGwa,YAAaf,EAAGW,aAEnB,oBAAItb,UAAW4a,EAAQ1Z,MAAM,QAA7B,SACGwa,YAAaP,KAEhB,oBAAInb,UAAW4a,EAAQ1Z,MAAM,QAA7B,SACGwa,YAAaN,KAEhB,oBAAIpb,UAAW4a,EAAQ1Z,MAAM,QAA7B,SACGwa,YAAaL,KAEhB,oBAAIrb,UAAW4a,EAAQ1Z,MAAM,QAA7B,SACG+M,EACC,mBACEhF,KAAM0S,YACJ1N,EACA0M,EAAGa,YAAY3d,GACf,eAEF9B,OAAO,SACPiN,IAAI,aAPN,SASG4S,aAAUjB,EAAGa,YAAY3d,MAG5B+d,aAAUjB,EAAGa,YAAY3d,aASvC,OACE,eAAC,KAAD,CAAiBge,YAAY,aAA7B,UACG3B,GACC,cAAC,KAAD,CAAela,UAAU,WAAW8b,QAAS,IAA7C,SACE,cAAC,GAAD,CACEjC,SAAQ,UAAKtC,EAAOxW,OAAZ,YAAsB+W,EAAO/W,QACrC6Y,YAAaA,EACbE,kBAAmBA,MAIxBI,GAAaC,GACZ,cAAC,KAAD,UACE,cAACxY,EAAA,EAAD,CACEjE,MAAO,EACPC,OAAO,MACPqC,UAAU,mCAHZ,SAKE,cAAC+b,GAAA,EAAD,QAIL5B,GACC,cAAC,KAAD,CAAena,UAAU,cAAc8b,QAAS,IAAhD,SACE,cAACzB,EAAD,UAOK1C,OAAMC,KAAKqC,I,2CCrI1BsB,KAAMS,OAAOC,MAEb,IAAMC,GAED,SAAC,GAAsB,IAApB9B,EAAmB,EAAnBA,aACN,EAAgC9Q,mBAAS,YAAzC,mBAAO6S,EAAP,KAAiBC,EAAjB,KACMC,EAAqB3X,OAAOyX,EAASG,MAAM,KAAK,IAChDC,EAAmBJ,EAASG,MAAM,KAAK,GAEvCE,EADcjB,KAAMU,MAEvBQ,SAASJ,EAAoBE,GAC7BpJ,OAEGuJ,EAAW,OAAGtC,QAAH,IAAGA,OAAH,EAAGA,EAAcvB,QAChC,SAAC8B,GAAD,OAAQA,EAAGa,YAAYC,WAAae,KAEhCG,EAAc,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAa7D,QAAO,SAAC8B,GAAD,OAAQjW,OAAOiW,EAAGM,WAAa,KACpE2B,EAAe,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAa7D,QAAO,SAAC8B,GAAD,OAAQjW,OAAOiW,EAAGE,WAAa,KACrExD,EAASqF,EACXA,EAAYG,QAAO,SAACC,EAAOnC,GAAR,OAAemC,EAAQpY,OAAOiW,EAAGW,aAAY,QAChE7b,EACIZ,EAAMC,cAAND,EAER,OACE,qCACE,cAAC,IAAD,CACElB,OAAQ,GACRuB,MAAOid,EACPld,SAAUmd,EACVW,MAAO,CACL,CAAEC,MAAM,IAAD,OAAMne,EAAE,QAAUK,MAAO,YAChC,CAAE8d,MAAM,IAAD,OAAMne,EAAE,SAAWK,MAAO,UACjC,CAAE8d,MAAM,IAAD,OAAMne,EAAE,SAAWK,MAAO,UACjC,CAAE8d,MAAM,KAAD,OAAOne,EAAE,SAAWK,MAAO,cAGtC,eAACyC,EAAA,EAAD,CAAK3B,UAAU,aAAf,UACE,eAAC2B,EAAA,EAAD,WACE,wBAAO3B,UAAU,iBAAjB,UAAmCnB,EAAE,gBAArC,OACC6d,EACC,gCAAQA,EAAYxgB,SAEpB,cAAC+gB,GAAA,EAAD,CAAUvf,MAAO,GAAIC,OAAQ,QAGjC,cAAC8b,GAAA,EAAD,IACA,eAAC9X,EAAA,EAAD,WACE,wBAAO3B,UAAU,iBAAjB,UAAmCnB,EAAE,QAArC,OACA,gCACG8d,EACCA,EAAezgB,OAEf,cAAC+gB,GAAA,EAAD,CAAUvf,MAAO,GAAIC,OAAQ,UAInC,cAAC8b,GAAA,EAAD,IACA,eAAC9X,EAAA,EAAD,WACE,wBAAO3B,UAAU,iBAAjB,UAAmCnB,EAAE,SAArC,OACA,gCACG+d,EACCA,EAAgB1gB,OAEhB,cAAC+gB,GAAA,EAAD,CAAUvf,MAAO,GAAIC,OAAQ,UAInC,cAAC8b,GAAA,EAAD,IACA,eAAC9X,EAAA,EAAD,WACE,wBAAO3B,UAAU,iBAAjB,UAAmCnB,EAAE,UAArC,OACA,gCACG6d,EACCrF,EAAS,IACPI,YAAcJ,GAEdqE,YAAarE,GAGf,cAAC4F,GAAA,EAAD,CAAUvf,MAAO,GAAIC,OAAQ,iBAS5Bga,OAAMC,KAAKsE,ICnFpBgB,GAID,SAAC,GAAsC,IAApC3F,EAAmC,EAAnCA,OAAQO,EAA2B,EAA3BA,OAAQsC,EAAmB,EAAnBA,aACdvb,EAAMC,cAAND,EACR,EAAoCyK,mBAAc,MAAlD,mBAAO6T,EAAP,KAAmBC,EAAnB,KACA,EAAoC9T,mBAAc,MAAlD,mBAAO+T,EAAP,KAAmBC,EAAnB,KACMjF,EAAa,OAAGd,QAAH,IAAGA,OAAH,EAAGA,EAAQ5Q,QACxB4R,EAAa,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAQnR,QACxB4O,EAAYgC,EAASgG,YAAehG,QAAU9X,EAC9C+d,EAAY1F,EAASyF,YAAezF,QAAUrY,EAC5CiZ,EAAaC,cAAbD,SAER9T,qBAAU,WACR,sBAAC,8BAAAoI,EAAA,0DACK0L,EAAS9Z,QAAS8Z,EAAS+E,YADhC,qBAEOpF,EAFP,gCAG6BqF,YACtBhF,EAAS9Z,MACT8Z,EAAS+E,YACTpF,GANP,QAGWsF,EAHX,SASOP,EAAcO,EAAU,IAT/B,WAYOpF,EAZP,iCAa6BmF,YACtBhF,EAAS9Z,MACT8Z,EAAS+E,YACTlF,GAhBP,QAaWoF,EAbX,SAmBOL,EAAcK,EAAU,IAnB/B,2CAAD,KAwBC,CAACtF,EAAeE,EAAeG,EAAS9Z,MAAO8Z,EAAS+E,cAE3D,IAAMG,EAA8D,SAAC,GAG9D,IAFLze,EAEI,EAFJA,SACA0e,EACI,EADJA,UAEMC,EAAiBpZ,OAAM,OAACmZ,QAAD,IAACA,OAAD,EAACA,EAAWE,gBACzC,OACE,qCACE,eAACpc,EAAA,EAAD,CAAKqc,EAAG,EAAGpc,QAAQ,OAAnB,UACE,cAAC,IAAD,CAAczC,SAAUA,IACxB,eAACwC,EAAA,EAAD,CAAKsc,GAAI,EAAGC,KAAM,EAAlB,UACE,eAACvc,EAAA,EAAD,CAAK3B,UAAU,uBAAf,UACE,gCAAQb,EAAS4B,SAChB8c,EACC,sCAASnC,YAAY,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAWM,aAEjC,cAAClB,GAAA,EAAD,CAAUvf,MAAO,GAAIC,OAAQ,QAGhCkgB,EACC,iCACGhf,EAAE,OADL,IACc,IACZ,uBACEmB,UAAW8d,EAAiB,EAAI,eAAiB,aADnD,UAGGpC,YAAaoC,GAHhB,UAOF,cAACb,GAAA,EAAD,CAAUvf,MAAO,GAAIC,OAAQ,WAInC,cAAC8b,GAAA,EAAD,QAKN,OACE,qCACE,cAAC9X,EAAA,EAAD,CAAKqc,EAAG,EAAR,SACE,oBAAGhe,UAAU,iBAAb,UAA+BnB,EAAE,QAAjC,SAEF,cAAC4a,GAAA,EAAD,IACClE,GAAa,cAACqI,EAAD,CAAWze,SAAUoW,EAAWsI,UAAWV,IACxDK,GAAa,cAACI,EAAD,CAAWze,SAAUqe,EAAWK,UAAWR,IACxD9H,GAAaiI,GACZ,qCACE,eAAC7b,EAAA,EAAD,CAAKyc,GAAI,EAAGC,GAAI,EAAhB,UACE,eAAC1c,EAAA,EAAD,CAAK2c,GAAI,EAAGD,GAAI,EAAGre,UAAU,oCAA7B,UACE,kCACGuV,EAAUxU,OADb,MACwByc,EAAUzc,UAElC,cAACY,EAAA,EAAD,CAAK3B,UAAU,WAAf,SACE,cAACue,GAAA,EAAD,SAGJ,cAAC,GAAD,CAAYnE,aAAcA,OAE5B,cAACX,GAAA,EAAD,WAOK9B,OAAMC,KAAKsF,I,sBC9CXsB,GAzDqC,SAAC,GAO9C,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAxE,EAII,EAJJA,UACAyE,EAGI,EAHJA,aACAxE,EAEI,EAFJA,WACAyE,EACI,EADJA,cAEQ/f,EAAMC,cAAND,EAGFggB,EAFgB,CAAChgB,EAAE,QAASA,EAAE,SAAUA,EAAE,SAEbma,KAAI,SAAC8F,GACtC,MAAO,CACLpe,KAAMoe,EACNvd,QAAS,kBAAMmd,EAAWI,IAC1BC,UAAWN,IAAYK,MAI3B,OACE,eAACnd,EAAA,EAAD,CAAK3B,UAAU,aAAf,UACE,eAAC2B,EAAA,EAAD,CAAK3B,UAAU,eAAf,UACE,cAACgf,GAAA,EAAD,CACEC,QAAS/E,EACTjZ,UAAWkZ,EACXlb,SAAU,SAACigB,GAAD,OAASP,EAAaO,EAAInjB,OAAOkjB,YAE7C,gCAAQpgB,EAAE,cAEZ,eAAC8C,EAAA,EAAD,CAAK3B,UAAU,eAAf,UACE,cAACgf,GAAA,EAAD,CACEC,QAAS9E,EACTlZ,UAAWiZ,EACXjb,SAAU,SAACigB,GAAD,OAASN,EAAcM,EAAInjB,OAAOkjB,YAE9C,gCAAQpgB,EAAE,eAEZ,eAAC8C,EAAA,EAAD,CAAK3B,UAAU,oBAAf,UACE,wBAAOA,UAAU,iBAAjB,UAAmCnB,EAAE,QAArC,OACA,cAAC8C,EAAA,EAAD,CAAKsc,GAAI,EAAT,SACE,cAAC,IAAD,CAAcvgB,MAAO,IAAKC,OAAQ,GAAIof,MAAO8B,SAGjD,cAACld,EAAA,EAAD,CACE3B,UAAU,eACVuB,QAAS,WACPmd,EAAW7f,EAAE,UACb8f,GAAa,GACbC,GAAc,IALlB,SAQE,cAACO,GAAA,EAAD,UC+FOC,I,QA9IY,WACzB,MAAuCpK,cAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBACXgB,EAAgBC,cAAhBD,YACFI,EAAWC,YAAcL,EAAYM,KAAK,OAC1C6I,EAAW9I,YAAcL,EAAYM,KAAK,OAChD,EAAkClN,oBAAS,GAA3C,mBAAO4Q,EAAP,KAAkByE,EAAlB,KACA,EAAoCrV,oBAAS,GAA7C,mBAAO6Q,EAAP,KAAmByE,EAAnB,KACA,EAA4BtV,wBAA6B7J,GAAzD,mBAAO6f,EAAP,KACA,GADA,KACkDhW,oBAAS,IAA3D,mBAAOwQ,EAAP,KACA,GADA,KACwCxQ,wBACtC7J,IADF,mBAAO2a,EAAP,KAGA,GAHA,KAG8B9Q,mBAAS,UAAvC,mBAAOmV,EAAP,KAAgBC,EAAhB,KAEQngB,EAAeghB,cAAfhhB,WACA0P,EAAYnH,cAAZmH,QAEFsJ,EAASiI,YAAgBjhB,EAAWa,IAAMC,OAAQ4O,GAClD6J,EAAS0H,YAAgBjhB,EAAWa,IAAMS,QAASoO,GAEjDpP,EAAMC,cAAND,EAER,OACE,eAAC8C,EAAA,EAAD,CAAKjE,MAAM,OAAO4gB,GAAI,EAAGzgB,GAAG,YAA5B,WACIoX,GACA,eAACtT,EAAA,EAAD,CAAK3B,UAAU,cAAf,UACE,6BAAKnB,EAAE,UACP,eAAC8C,EAAA,EAAD,CAAK3B,UAAU,cAAf,UACE,gCAAQnB,EAAE,UACV,cAAC,IAAD,UAIJoW,EA4BA,eAACtT,EAAA,EAAD,CACE3B,UAAU,qDACVyf,UAAU,sBAFZ,UAIE,eAAC9d,EAAA,EAAD,CACEjE,MAAO4Y,EAAW,EAAI,QACtBX,QAAQ,SACR3V,UAAWsW,EAAW,GAAK,eAH7B,UAKE,eAAC3U,EAAA,EAAD,CACE3B,UAAU,oCACV2V,QAAQ,SACR2I,GAAI,EAHN,UAKE,6BAAKzf,EAAE,UACP,eAAC8C,EAAA,EAAD,CAAK3B,UAAU,oBAAoByV,GAAI,EAAvC,UACE,sBACEzV,UAAU,gCACVhC,MAAO,CAAE8C,YAAa,GAFxB,SAIGjC,EAAE,aAEL,cAAC,IAAD,CACEsB,QAAS8U,EACT7U,SAAU,kBAAM8U,GAAiBD,YAIvC,cAAC,GAAD,OAEW,SAAZwJ,GACC,cAAC9c,EAAA,EAAD,CACE3B,UAAWsW,EAAW,aAAe,2BACrC5Y,MAAO4Y,EAAW,EAAI,IAFxB,SAIE,cAAC,GAAD,CACEiB,OAAQA,EACRO,OAAQA,EACRsC,aAAcA,MAIpB,eAACzY,EAAA,EAAD,CAAK3B,UAAU,iBAAf,UACE,cAAC,GAAD,CACEye,QAASA,EACTC,WAAYA,EACZxE,UAAWA,EACXyE,aAAcA,EACdxE,WAAYA,EACZyE,cAAeA,IAEhBrH,GAAUO,GAAUwH,GACnB,cAAC,GAAD,CACEpF,UAAWA,EACXC,WAAYA,EACZ5C,OAAQA,EACRO,OAAQA,EACR8B,YAAa0F,EACbxF,kBAAmBA,EACnBM,aAAcA,OAIP,UAAZqE,GACC,cAAC9c,EAAA,EAAD,CACE3B,UAAWsW,EAAW,aAAe,cACrC5Y,MAAO2hB,EAAW,EAAI,IAFxB,SAIE,cAAC,GAAD,CACE9H,OAAQA,EACRO,OAAQA,EACRsC,aAAcA,SAlGtB,eAACsF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMzG,MAAI,EAAC4G,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAtC,SACE,cAACre,EAAA,EAAD,CAAK3B,UAAU,UAAf,SACE,cAAC,GAAD,QAGJ,eAAC0f,EAAA,EAAD,CAAMzG,MAAI,EAAC4G,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAtC,UACE,eAACre,EAAA,EAAD,CAAK3B,UAAU,2CAAf,UACGuX,GACC,cAAC5V,EAAA,EAAD,CAAK3B,UAAU,mBAAf,SACE,cAAC,IAAD,CAAkB8L,MAAOyL,MAG5BO,GACC,cAACnW,EAAA,EAAD,CAAK3B,UAAU,mBAAf,SACE,cAAC,IAAD,CAAkB8L,MAAOgM,SAI9BP,GAAUO,GACT,cAACnW,EAAA,EAAD,CAAK3B,UAAU,UAAUiC,UAAU,OAAnC,SACE,cAAC,GAAD,CAAgBsV,OAAQA,EAAQO,OAAQA","file":"static/js/9.26cf4682.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHelpIcon1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Path 11469\",\n    d: \"M10.78-7.061c0-1.268-.918-1.919-2.319-1.919a3.829 3.829 0 0 0-2.353.78l.167 1.068a3.446 3.446 0 0 1 2.069-.8c.767 0 1.2.334 1.2.918 0 .617-.417.968-1.6 1.4l-.334.117.133 1.518.784-.15.067-.734c1.218-.396 2.186-.997 2.186-2.198zm-2 5.306V-3.09H7.493v1.335zM.352-5.192a7.851 7.851 0 0 0 7.992 8.008 7.855 7.855 0 0 0 8.008-8.008 7.831 7.831 0 0 0-8.008-7.992A7.827 7.827 0 0 0 .352-5.192zm1.1 0a6.789 6.789 0 0 1 6.891-6.941 6.789 6.789 0 0 1 6.891 6.941 6.793 6.793 0 0 1-6.89 6.957 6.793 6.793 0 0 1-6.891-6.957z\",\n    transform: \"translate(-.352 13.184)\",\n    style: {\n      fill: \"#636780\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpIcon1);\nexport default __webpack_public_path__ + \"static/media/HelpIcon1.66c8c791.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettingsIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Component 37 \\\\u2013 6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    \"data-name\": \"Rectangle 18293\",\n    width: 40,\n    height: 40,\n    rx: 20,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Settings 2\",\n    d: \"M20 11.823V8.177c-1.79-.638-2.272-.668-2.522-1.274s.069-.974.882-2.686L15.782 1.64c-1.688.8-2.073 1.137-2.687.883S12.456 1.782 11.823 0H8.177C7.541 1.787 7.511 2.271 6.9 2.522c-.627.261-1-.083-2.686-.883L1.64 4.217c.814 1.713 1.135 2.078.882 2.683S1.788 7.541 0 8.177v3.646c1.783.633 2.271.667 2.523 1.273s-.068.972-.883 2.686l2.577 2.578c1.666-.792 2.058-1.144 2.686-.882.607.252.637.733 1.274 2.522h3.645c.632-1.776.666-2.269 1.281-2.526s.988.083 2.679.885l2.578-2.578c-.812-1.708-1.135-2.077-.882-2.686s.733-.635 2.522-1.272zm-4.062.637a3.3 3.3 0 0 0 .407 2.982l-.9.9a3.288 3.288 0 0 0-2.978-.408 3.309 3.309 0 0 0-1.823 2.4H9.362a3.3 3.3 0 0 0-1.819-2.4 3.307 3.307 0 0 0-2.983.407l-.9-.9a3.3 3.3 0 0 0 .406-2.983 3.307 3.307 0 0 0-2.4-1.818V9.362a3.3 3.3 0 0 0 2.4-1.82 3.3 3.3 0 0 0-.407-2.983l.9-.9a3.3 3.3 0 0 0 2.983.407 3.3 3.3 0 0 0 1.819-2.4h1.279a3.3 3.3 0 0 0 1.82 2.4 3.308 3.308 0 0 0 2.983-.407l.9.9a3.307 3.307 0 0 0-.407 2.983 3.3 3.3 0 0 0 2.4 1.819v1.279a3.3 3.3 0 0 0-2.4 1.819zM10 7.5A2.5 2.5 0 1 1 7.5 10 2.5 2.5 0 0 1 10 7.5zm0-1.667A4.167 4.167 0 1 0 14.167 10 4.166 4.166 0 0 0 10 5.833z\",\n    transform: \"translate(10 10)\",\n    style: {\n      fill: \"#696c80\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettingsIcon);\nexport default __webpack_public_path__ + \"static/media/SettingsIcon.5b7ed28d.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, IconButton, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Trade } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput, ToggleSwitch } from 'components';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Field,\n  setAllowLimitPrice,\n  setInvertLimitPriceValue,\n  setPrice,\n} from 'state/twap/actions';\nimport {\n  tryParseAmount,\n  useDerivedTwapInfo,\n  useTwapState,\n} from 'state/twap/hooks';\nimport InfoTooltip from './InfoTooltip';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { useTranslation } from 'react-i18next';\n\nfunction LimitPriceInput() {\n  const { currencies, marketPrice } = useDerivedTwapInfo();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n  const invertLimitPriceValue = useTwapState().invertLimitPriceValue;\n  const price = useTwapState().price;\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const onChange = (value: string) => {\n    const currency = currencies[Field.INPUT];\n    if (currency) {\n      dispatch(\n        setPrice({\n          price: value,\n          formattedPrice: value ? tryParseAmount(value, currency) : undefined,\n        }),\n      );\n    }\n  };\n\n  const onToggle = () => {\n    dispatch(setAllowLimitPrice(!allowLimitPrice));\n    if (invertLimitPriceValue) {\n      dispatch(setInvertLimitPriceValue(false));\n      onChange('');\n    } else {\n      onChange(marketPrice?.invert().toSignificant(6) || '');\n    }\n  };\n\n  const toggleInvert = () => {\n    dispatch(setInvertLimitPriceValue(!invertLimitPriceValue));\n  };\n\n  const currenciesMemoized = useMemo(() => {\n    if (!invertLimitPriceValue) {\n      return {\n        inputCurrency: currencies[Field.INPUT],\n        outputCurrency: currencies[Field.OUTPUT],\n      };\n    }\n    return {\n      inputCurrency: currencies[Field.OUTPUT],\n      outputCurrency: currencies[Field.INPUT],\n    };\n  }, [currencies, invertLimitPriceValue]);\n\n  const { inputCurrency, outputCurrency } = currenciesMemoized;\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <StyledTitle>\n          <ToggleSwitch toggled={!!allowLimitPrice} onToggle={onToggle} />\n          <InfoTooltip\n            text={allowLimitPrice ? t('limitPriceOn') : t('limitPriceOff')}\n          >\n            <Typography>Limit Price</Typography>\n          </InfoTooltip>\n        </StyledTitle>\n        {!allowLimitPrice && <Typography>None</Typography>}\n      </StyledTop>\n      {allowLimitPrice && (\n        <StyledInputContainer>\n          <StyledCurrencyDetails style={{ marginRight: 5 }}>\n            <Typography>1</Typography>\n\n            <Typography>{inputCurrency?.symbol}</Typography>\n            <CurrencyLogo currency={inputCurrency} size={'28px'} />\n          </StyledCurrencyDetails>{' '}\n          <Typography>=</Typography>\n          <NumericalInput\n            disabled={!allowLimitPrice}\n            value={price || ''}\n            align='center'\n            placeholder={allowLimitPrice ? '0.00' : 'None'}\n            onUserInput={(val) => {\n              onChange(val);\n            }}\n          />\n          <StyledCurrencyDetails>\n            <Typography>{outputCurrency?.symbol}</Typography>\n            <CurrencyLogo currency={outputCurrency} size={'28px'} />\n          </StyledCurrencyDetails>\n          <IconButton onClick={toggleInvert} style={{ marginLeft: 10 }}>\n            <PriceExchangeIcon />\n          </IconButton>\n        </StyledInputContainer>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default LimitPriceInput;\n\nconst StyledInputContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  marginLeft: 'auto',\n  '& .styledInput': {\n    width: 150,\n    borderBottom: '1px solid white',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n});\n\nconst StyledCurrencyDetails = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n});\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 20,\n});\n\nconst StyledTitle = styled(Box)({\n  marginRight: 10,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 15,\n});\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, MenuItem, Select, Theme, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { NumericalInput } from 'components';\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { TimeSelectFormat, TwapTimeSelect } from 'state/twap/reducer';\nimport InfoTooltip from './InfoTooltip';\nimport {\n  getFormatTypeFromMilliseconds,\n  millisecondsToTime,\n  timeToMilliseconds,\n} from './utils';\n\ninterface Props {\n  selected: TwapTimeSelect;\n  title: string;\n  disabled?: boolean;\n  tooltip: string | ReactNode;\n\n  onUpdate: ({\n    type,\n    displayValue,\n    milliseconds,\n  }: {\n    type: TimeSelectFormat;\n    displayValue?: string;\n    milliseconds?: number;\n  }) => void;\n}\n\nfunction TimeSelect({ selected, title, onUpdate, disabled, tooltip }: Props) {\n  const onChange = (value: string) => {\n    const milliseconds = timeToMilliseconds(selected.type, value) || 0;\n    let displayValue = value;\n\n    if (!milliseconds) {\n      onUpdate({\n        type: selected.type,\n        displayValue,\n        milliseconds,\n      });\n      return;\n    }\n\n    const format = getFormatTypeFromMilliseconds(milliseconds || 0);\n\n    if (format !== selected.type) {\n      displayValue = millisecondsToTime(format, milliseconds) || '';\n      console.log(displayValue, milliseconds);\n    }\n    onUpdate({\n      type: format,\n      displayValue,\n      milliseconds,\n    });\n  };\n\n  const onSelect = (event: any) => {\n    onUpdate({\n      type: event.target.value,\n    });\n  };\n  return (\n    <>\n      <InfoTooltip text={tooltip}>\n        <StyledTitle style={{ margin: 0 }}>{title}</StyledTitle>\n      </InfoTooltip>\n\n      <StyledRight>\n        <NumericalInput\n          disabled={disabled}\n          value={selected.displayValue || ''}\n          align='right'\n          placeholder='0'\n          onUserInput={(val) => {\n            if (val !== '0' && val !== '.') {\n              onChange(val);\n            }\n          }}\n        />\n        <StyledSelect\n          disabled={disabled}\n          value={selected.type}\n          onChange={onSelect}\n          color='primary'\n          style={{\n            opacity: disabled ? 0.7 : 1,\n          }}\n        >\n          <MenuItem value={TimeSelectFormat.DAYS}>Days</MenuItem>\n          <MenuItem value={TimeSelectFormat.HOURS}>Hours</MenuItem>\n          <MenuItem value={TimeSelectFormat.MINUTES}>Minutes</MenuItem>\n        </StyledSelect>\n      </StyledRight>\n    </>\n  );\n}\n\nexport default TimeSelect;\n\nconst StyledSelect = styled(Select)(({ theme }: { theme: Theme }) => ({\n  color: 'white!important',\n  '&:before': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '&:after': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '& svg': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst StyledRight = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  gap: 20,\n  '& .styledInput': {},\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n","import { Box, styled } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\n\nfunction Duration() {\n  const { onDuration } = useTwapActionHandlers();\n  const duration = useTwapState().duration;\n  const { t } = useTranslation();\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <TimeSelect\n        onUpdate={onDuration}\n        selected={duration}\n        title='Duration'\n        tooltip={t('durationInput')}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, IconButton, styled, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { useDispatch } from 'react-redux';\nimport { setSelfEdit } from 'state/twap/actions';\nimport { usePartialFillWarning } from './useValidation';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { useTranslation } from 'react-i18next';\nimport { getFormatTypeFromMilliseconds, millisecondsToTime } from './utils';\nfunction Duration() {\n  const { onInterval } = useTwapActionHandlers();\n  const interval = useTwapState().interval;\n  const duration = useTwapState().duration;\n\n  const selfEdit = useTwapState().selfEdit;\n  const { t } = useTranslation();\n\n  const partialFillWarning = usePartialFillWarning();\n\n  const dispatch = useDispatch();\n\n  const onEdit = () => {\n    dispatch(setSelfEdit(true));\n  };\n\n  useEffect(() => {\n    if (\n      duration.milliseconds &&\n      interval.milliseconds &&\n      interval.milliseconds > duration.milliseconds\n    ) {\n      const type = getFormatTypeFromMilliseconds(duration.milliseconds);\n      onInterval({\n        milliseconds: duration.milliseconds,\n        type,\n        displayValue: millisecondsToTime(type, duration.milliseconds),\n      });\n    }\n  }, [interval, duration, onInterval]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledCard>\n        <TimeSelect\n          tooltip={t('tradeInterval')}\n          disabled={!selfEdit}\n          onUpdate={onInterval}\n          selected={interval}\n          title='Trade Interval'\n        />\n        {!selfEdit && (\n          <IconButton onClick={onEdit}>\n            <EditOutlinedIcon color='primary' />\n          </IconButton>\n        )}\n      </StyledCard>\n      {partialFillWarning && (\n        <StyledWarning>\n          <ErrorOutlineIcon color='error' />\n          <Typography color='error'>Partial fill warning</Typography>\n        </StyledWarning>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst StyledContainer = styled(Box)({});\n\nconst StyledWarning = styled(Box)({\n  marginTop: 15,\n  fontWeight: 500,\n  display: 'flex',\n  gap: 10,\n  opacity: 0.7,\n});\n","import React, { useMemo } from 'react';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport useUSDCPrice from 'utils/useUSDCPrice';\n\nexport const useInputsValidation = (): string | undefined => {\n  const { duration, interval, totalChunks } = useTwapState();\n\n  return useMemo(() => {\n    if (!duration.milliseconds) {\n      return 'Fill duration';\n    }\n    if (!totalChunks) {\n      return 'Missing Trades';\n    }\n    if (!interval.milliseconds) {\n      return 'Fill Interval';\n    }\n\n    return undefined;\n  }, [duration, interval, totalChunks]);\n};\n\nexport const usePartialFillWarning = (): boolean => {\n  const { duration, interval, totalChunks } = useTwapState();\n\n  return useMemo(() => {\n    if (\n      interval.milliseconds &&\n      duration.milliseconds &&\n      totalChunks &&\n      interval.milliseconds * Number(totalChunks) > duration.milliseconds\n    ) {\n      return true;\n    }\n    return false;\n  }, [interval, duration, totalChunks]);\n};\n\nexport const useMinimumAmountOutValidation = () => {\n  const { parsedAmount } = useDerivedTwapInfo();\n  const { chunkSize } = useTwapState();\n\n  const usdPrice = Number(\n    useUSDCPrice(parsedAmount?.currency)?.toSignificant() ?? 0,\n  );\n\n  return useMemo(() => {\n    return usdPrice * Number(chunkSize) >= 1;\n  }, [usdPrice, chunkSize]);\n};\n","import { Avatar, Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Currency } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput } from 'components';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { invalidChunkSize } from 'state/twap/utils';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport InfoTooltip from './InfoTooltip';\n\ninterface Props {\n  currency: Currency | undefined;\n}\n\nfunction ChunkSize({ currency }: Props) {\n  const { totalChunks, chunkSize } = useTwapState();\n  const { parsedAmount } = useDerivedTwapInfo();\n  const { onChunkSize } = useTwapActionHandlers();\n  const { t } = useTranslation();\n  const usdPrice = Number(useUSDCPrice(currency)?.toSignificant() ?? 0);\n\n  const onChange = (value: string) => {\n    onChunkSize(value);\n  };\n\n  useEffect(() => {\n    if (\n      parsedAmount &&\n      invalidChunkSize(parsedAmount, chunkSize) &&\n      chunkSize !== parsedAmount.toExact()\n    ) {\n      onChunkSize(parsedAmount.toExact());\n    }\n  }, [parsedAmount, chunkSize, onChunkSize]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <InfoTooltip text={t('tradeSizeInput')}>\n          <StyledTitle style={{ margin: 0 }}>Trade Size</StyledTitle>\n        </InfoTooltip>\n        <NumericalInput\n          value={chunkSize || ''}\n          align='right'\n          placeholder='0.00'\n          onUserInput={(val) => {\n            onChange(val);\n          }}\n        />\n        {currency && (\n          <StyledCurrency style={{ marginBottom: 0 }}>\n            <CurrencyLogo currency={currency} size={'24px'} />\n            {currency?.symbol}\n          </StyledCurrency>\n        )}\n      </StyledTop>\n      <StyledBottom>\n        <small className='text-secondary'>\n          Total trades: {totalChunks?.toString() ?? 0}\n        </small>\n        <small className='text-secondary'>\n          ${chunkSize ? (usdPrice * Number(chunkSize)).toLocaleString() : '0'}\n        </small>\n      </StyledBottom>\n    </StyledContainer>\n  );\n}\n\nexport default ChunkSize;\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n});\n\nconst StyledBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 10,\n});\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n\nconst StyledCurrency = styled(Typography)({\n  marginLeft: 20,\n  display: 'flex',\n  gap: 10,\n});\n","import { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport { setError } from 'state/twap/actions';\nimport { useTwapState } from 'state/twap/hooks';\nimport React from 'react';\n\nfunction ErrorNotification() {\n  const { error } = useTwapState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setTimeout(() => {\n      dispatch(setError(undefined));\n    }, 400);\n  };\n\n  return (\n    <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity='error' variant='filled'>\n        {error}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport default ErrorNotification;\n","import { useMemo } from 'react';\nimport { useActiveWeb3React } from 'hooks';\nimport { TWAP_CONTRACT_ADDRESS } from '../consts';\nimport twapAbi from './abi.json';\nimport Web3 from 'web3';\nimport { TWAP } from './TwapContract';\nimport { AbiItem, isAddress } from 'web3-utils';\nimport { useWeb3React } from '@web3-react/core';\nimport { Contract } from 'ethers';\nimport { getContract } from 'utils';\n\n// export function getContract(\n//   address: string,\n//   ABI: AbiItem[],\n//   library: any,\n// ): any {\n//   if (!address || !isAddress(address)) {\n//     throw Error(`Invalid 'address' parameter '${address}'.`);\n//   }\n//   const web3 = new Web3(library);\n//   return new web3.eth.Contract(ABI as AbiItem[], address);\n// }\n\nfunction useContract(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true,\n): Contract | null {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined,\n      );\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useTwapContract(): Contract | null {\n  return useContract(TWAP_CONTRACT_ADDRESS, twapAbi);\n}\n","import { Box, styled, Typography } from '@material-ui/core';\nimport { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk';\nimport { CurrencyLogo, CustomTooltip } from 'components';\nimport moment from 'moment';\nimport React, { ReactNode } from 'react';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { formatTokenAmount } from 'utils';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { useTranslation } from 'react-i18next';\nimport { Field } from 'state/twap/actions';\nimport { parseUnits } from 'ethers/lib/utils';\nimport { BigNumber } from 'ethers';\nimport { MINUTE } from '../consts';\nconst calculateInterval = (value?: number) => {\n  if (!value) {\n    return '0';\n  }\n  const time = moment.duration(value);\n  const days = time.days();\n  const hours = time.hours();\n  const minutes = time.minutes();\n\n  let str = '';\n\n  if (days) {\n    str += `${days} Days `;\n  }\n  if (hours) {\n    str += `${hours} Hours `;\n  }\n  if (minutes) {\n    str += `${minutes} Minutes`;\n  }\n  return str;\n};\n\ninterface Props {\n  outputAmount: Fraction;\n}\n\nfunction TxDetails({ outputAmount }: Props) {\n  const { totalChunks, interval, deadline, allowLimitPrice } = useTwapState();\n  const { t } = useTranslation();\n  const { currencies, minimumAmountOutAsCurrencyAmount } = useDerivedTwapInfo();\n\n  const outputCurrency = currencies[Field.OUTPUT];\n\n  return (\n    <StyledDetails className='swapBox bg-secondary2'>\n      <Row\n        title='Expiration date:'\n        value={moment(deadline)\n          .add(MINUTE, 'milliseconds')\n          .format('DD/MM/YYYY HH:mm')}\n        tooltip={t('confirmationExpiration')}\n      />\n\n      <Row\n        title='Trade Size:'\n        element={<TradeSize />}\n        tooltip={t('confirmationTradeSize')}\n      />\n\n      <Row\n        title='Total Trades:'\n        value={totalChunks || 0}\n        tooltip={t('confirmationTotalTrades')}\n      />\n      <Row\n        title='Trade Interval:'\n        value={calculateInterval(interval.milliseconds)}\n        tooltip={t('confirmationTradeInterval')}\n      />\n      <Row\n        title='Minimum Received Per Trade:'\n        element={allowLimitPrice && <MinimumReceivedPerTrade />}\n        value={!allowLimitPrice ? 'None' : undefined}\n        tooltip={\n          allowLimitPrice\n            ? t('confirmationMinimumReceivedWithLimit')\n            : t('confirmationMinimumReceivedNoLimit')\n        }\n      />\n    </StyledDetails>\n  );\n}\n\nexport default TxDetails;\n\nconst TradeSize = () => {\n  const { chunkSize } = useTwapState();\n  const { currencies } = useDerivedTwapInfo();\n\n  const outputCurrency = currencies[Field.OUTPUT];\n\n  return <CurrencyDisplay currency={outputCurrency} value={chunkSize} />;\n};\n\nconst MinimumReceivedPerTrade = () => {\n  const { currencies, minimumAmountOutAsCurrencyAmount } = useDerivedTwapInfo();\n\n  const outputCurrency = currencies[Field.OUTPUT];\n\n  return (\n    <CurrencyDisplay\n      currency={outputCurrency}\n      value={minimumAmountOutAsCurrencyAmount?.toExact()}\n    />\n  );\n};\n\nconst CurrencyDisplay = ({\n  currency,\n  value,\n}: {\n  currency?: Currency;\n  value?: string;\n}) => {\n  if (!currency) {\n    return null;\n  }\n  return (\n    <StyledCurrency>\n      <Typography>\n        <span>{value}</span>\n      </Typography>\n      <Typography>\n        <span style={{ fontSize: 12 }}>{currency?.symbol}</span>\n      </Typography>\n\n      <CurrencyLogo currency={currency} size='20px' />\n    </StyledCurrency>\n  );\n};\n\nconst StyledDetails = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n  '& p': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: 7,\n    fontSize: 13,\n    '& span': {\n      fontWeight: 600,\n    },\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n});\n\ntype RowProps = {\n  title: string;\n  value?: string | number;\n  tooltip?: string;\n  element?: ReactNode;\n};\n\nconst Row = ({ title, value, tooltip, element }: RowProps) => {\n  return (\n    <StyledRow>\n      {tooltip ? (\n        <CustomTooltip title={tooltip} placement='right'>\n          <Typography>\n            {title} <HelpOutlineIcon style={{ width: 15 }} />\n          </Typography>\n        </CustomTooltip>\n      ) : (\n        <Typography>{title}</Typography>\n      )}\n      {value && (\n        <Typography>\n          <span>{value}</span>\n        </Typography>\n      )}\n      {element}\n    </StyledRow>\n  );\n};\n\nconst StyledRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useTwapState } from 'state/twap/hooks';\n\nfunction Disclaimer() {\n  const { t } = useTranslation();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n\n  return (\n    <StyledContainer className='swapBox bg-secondary2'>\n      <Typography>{t('disclaimer_p1')}</Typography>\n      {allowLimitPrice ? (\n        <Typography>{t('disclaimer_p2LimitOrderSelected')}</Typography>\n      ) : (\n        <Typography>{t('disclaimer_p2LimitOrderNotSelected')}</Typography>\n      )}\n      <Typography>{t('disclaimer_p3')}</Typography>\n      <Typography>{t('disclaimer_p4')}</Typography>\n      <Typography>{t('disclaimer_p5')}</Typography>\n      <Trans\n        i18nKey='disclaimer_p6'\n        components={{\n          Link: (\n            <a\n              target='_blank'\n              rel='noreferrer \n          noopener'\n              href='https://www.orbs.com/'\n            >\n              link\n            </a>\n          ),\n        }}\n      />\n      <Typography>\n        <Trans\n          i18nKey='disclaimer_p7'\n          components={{\n            Link: (\n              <a\n                target='_blank'\n                rel='noreferrer \n          noopener'\n                href='https://www.orbs.com/'\n              >\n                link\n              </a>\n            ),\n          }}\n        />\n      </Typography>\n    </StyledContainer>\n  );\n}\n\nexport default Disclaimer;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 15,\n  '& h2': {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n  '& a': {\n    color: 'white',\n  },\n});\n","import React, { ReactNode, useState } from 'react';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { Box, styled } from '@material-ui/core';\nimport { Fraction, Price, Trade } from '@uniswap/sdk';\nimport { Field } from 'state/twap/actions';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport { useTranslation } from 'react-i18next';\nimport InfoTooltip from './InfoTooltip';\nimport { CurrencyLogo } from 'components';\n\ninterface Props {\n  executionPrice?: Fraction;\n  title?: string;\n  customText?: string;\n  tooltip?: string | ReactNode;\n}\n\nfunction PriceIndication({\n  executionPrice,\n  title,\n  customText,\n  tooltip,\n}: Props) {\n  const [mainPrice, setMainPrice] = useState(false);\n  const { currencies } = useDerivedTwapInfo();\n\n  const inputCurrency = currencies[Field.INPUT];\n  const outputCurrency = currencies[Field.OUTPUT];\n\n  return (\n    <Box className='swapPrice'>\n      {tooltip ? (\n        <InfoTooltip text={tooltip}>\n          <small>{title}:</small>\n        </InfoTooltip>\n      ) : (\n        <small>{title}</small>\n      )}\n      {customText ? (\n        <small>{customText}</small>\n      ) : (\n        <>\n          <StyledCurrency>\n            1 {(mainPrice ? inputCurrency : outputCurrency)?.symbol}\n            <CurrencyLogo\n              size='20px'\n              currency={mainPrice ? inputCurrency : outputCurrency}\n            />\n            ={' '}\n            {executionPrice ? (\n              <>\n                {(mainPrice\n                  ? executionPrice\n                  : executionPrice.invert()\n                ).toSignificant(6)}{' '}\n                {(mainPrice ? outputCurrency : inputCurrency)?.symbol}{' '}\n                <CurrencyLogo\n                  size='20px'\n                  currency={mainPrice ? outputCurrency : inputCurrency}\n                />\n              </>\n            ) : (\n              'Market price '\n            )}\n            <PriceExchangeIcon\n              onClick={() => {\n                setMainPrice(!mainPrice);\n              }}\n            />\n          </StyledCurrency>\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default PriceIndication;\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n  fontSize: 13,\n});\n","import { Currency, ETHER, WETH } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useCurrencyBalance } from 'state/wallet/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { formatTokenAmount } from 'utils';\nimport { useWETHContract } from 'hooks/useContract';\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE };\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useTwapWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): {\n  wrapType: WrapType;\n  execute?: undefined | (() => Promise<void>);\n  inputError?: string;\n} {\n  const { chainId, account } = useActiveWeb3React();\n  const wethContract = useWETHContract();\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency);\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [\n    inputCurrency,\n    typedValue,\n  ]);\n  const addTransaction = useTransactionAdder();\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) {\n      return NOT_APPLICABLE;\n    }\n\n    const sufficientBalance =\n      inputAmount && balance && !balance.lessThan(inputAmount);\n\n    if (inputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                const txReceipt = await wethContract.deposit({\n                  value: `0x${inputAmount.raw.toString(16)}`,\n                });\n\n                addTransaction(txReceipt, {\n                  summary: `Wrap ${formatTokenAmount(\n                    inputAmount,\n                  )} MATIC to WMATIC`,\n                });\n                await txReceipt.wait();\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient ETH balance',\n      };\n    } else {\n      return NOT_APPLICABLE;\n    }\n  }, [\n    wethContract,\n    chainId,\n    inputCurrency,\n    outputCurrency,\n    inputAmount,\n    balance,\n    addTransaction,\n  ]);\n}\n","import { CurrencyAmount, Trade } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box, Button, styled, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { getTokenValue } from 'state/twap/utils';\nimport TxDetails from './TxDetails';\nimport Disclaimer from './Disclaimer';\nimport InfoTooltip from '../InfoTooltip';\nimport PriceIndication from '../PriceIndication';\nimport { Field } from 'state/twap/actions';\n\ninterface ModalContentProps {\n  onConfirm: () => void;\n}\n\nconst ModalContent: React.FC<ModalContentProps> = ({ onConfirm }) => {\n  const { t } = useTranslation();\n  const {\n    typedPriceOutputValue,\n    parsedAmount,\n    marketPrice,\n    currencies,\n  } = useDerivedTwapInfo();\n  const { allowLimitPrice, priceAsCurrencyAmount } = useTwapState();\n\n  const outputAsCurrencyAmount =\n    typedPriceOutputValue &&\n    tryParseAmount(\n      typedPriceOutputValue.toSignificant(6),\n      currencies[Field.OUTPUT],\n    );\n\n  return (\n    <StyledContainer>\n      <StyledCards>\n        {parsedAmount && <Card currencyAmount={parsedAmount} title='From' />}\n        {outputAsCurrencyAmount && (\n          <Card\n            tooltip={t('confirmationToInputTooltip')}\n            currencyAmount={outputAsCurrencyAmount}\n            title='To'\n            prefix={allowLimitPrice ? '≥' : '~'}\n          />\n        )}\n      </StyledCards>\n      {allowLimitPrice ? (\n        <PriceIndication\n          tooltip={t('confirmationLimitOrderTooltip')}\n          executionPrice={priceAsCurrencyAmount}\n          title='Limit Price'\n        />\n      ) : (\n        <PriceIndication\n          tooltip={t('confirmationLimitOrderTooltip')}\n          executionPrice={marketPrice}\n          title='Limit Price'\n          customText='None'\n        />\n      )}\n      {typedPriceOutputValue && (\n        <TxDetails outputAmount={typedPriceOutputValue} />\n      )}\n      <Disclaimer />\n      <Box className='transactionText'>\n        <Button onClick={onConfirm} className='swapButton'>\n          Confirm Order\n        </Button>\n      </Box>\n    </StyledContainer>\n  );\n};\n\nexport default ModalContent;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCards = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\ntype CardProps = {\n  currencyAmount: CurrencyAmount;\n  title: string;\n  tooltip?: string;\n  prefix?: string;\n};\n\nconst Card = ({ currencyAmount, title, tooltip, prefix }: CardProps) => {\n  const usdPrice = useUSDCPrice(currencyAmount.currency);\n\n  return (\n    <StyledCard className='swapBox bg-secondary2'>\n      <StyledCardTop>\n        {tooltip ? (\n          <InfoTooltip text={tooltip}>\n            <Typography>{title}</Typography>\n          </InfoTooltip>\n        ) : (\n          <Typography>{title}</Typography>\n        )}\n        <Typography>\n          ~$\n          {usdPrice && getTokenValue(usdPrice, currencyAmount)}\n        </Typography>\n      </StyledCardTop>\n      <StyledCardBottom>\n        <StyledCurrency>\n          <CurrencyLogo currency={currencyAmount.currency} size={'24px'} />\n          <Typography>{currencyAmount.currency?.symbol}</Typography>\n        </StyledCurrency>\n        {prefix ? (\n          <Typography>\n            {prefix} {formatTokenAmount(currencyAmount)}\n          </Typography>\n        ) : (\n          <Typography>{formatTokenAmount(currencyAmount)}</Typography>\n        )}\n      </StyledCardBottom>\n    </StyledCard>\n  );\n};\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCardBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 18,\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n\nconst StyledCardTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  width: '100%',\n});\n","import { currencyEquals, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  TransactionConfirmationModal,\n  TransactionErrorContent,\n  ConfirmationModalContent,\n} from 'components';\nimport { formatTokenAmount } from 'utils';\nimport 'components/styles/ConfirmSwapModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport ModalContent from './ModalContent';\n\ninterface ConfirmTwapModalProps {\n  isOpen: boolean;\n  originalTrade: Trade | undefined;\n  attemptingTxn: boolean;\n  txPending?: boolean;\n  txHash: string | undefined;\n  recipient: string | null;\n  allowedSlippage: number;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n  swapErrorMessage: string | undefined;\n  onDismiss: () => void;\n}\n\nconst ConfirmTwapModal: React.FC<ConfirmTwapModalProps> = ({\n  onConfirm,\n  onDismiss,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  txPending,\n}) => {\n  const { t } = useTranslation();\n\n  const modalContent = useCallback(() => {\n    return <ModalContent onConfirm={onConfirm} />;\n  }, [onConfirm]);\n\n  // text to show while loading\n  const pendingText = '';\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <ConfirmationModalContent\n          title={t('confirmTx')}\n          onDismiss={onDismiss}\n          content={modalContent}\n        />\n      ),\n    [t, onDismiss, modalContent, swapErrorMessage],\n  );\n\n  return (\n    <TransactionConfirmationModal\n      style={{ maxHeight: '90vh', overflow: 'auto' }}\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      txPending={txPending}\n      content={confirmationContent}\n      pendingText={pendingText}\n      modalContent={txPending ? t('submittedTxSwap') : t('swapSuccess')}\n    />\n  );\n};\n\nexport default ConfirmTwapModal;\n","import { MaxUint256 } from '@ethersproject/constants';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { TokenAmount, CurrencyAmount, ETHER } from '@uniswap/sdk';\nimport { useCallback, useMemo } from 'react';\nimport { useTokenAllowance } from 'data/Allowances';\nimport {\n  useTransactionAdder,\n  useHasPendingApproval,\n} from 'state/transactions/hooks';\nimport { calculateGasMargin } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { useTokenContract } from 'hooks/useContract';\nimport { TWAP_CONTRACT_ADDRESS } from './consts';\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React();\n  const token =\n    amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const currentAllowance = useTokenAllowance(\n    token,\n    account ?? undefined,\n    spender,\n  );\n  const pendingApproval = useHasPendingApproval(token?.address, spender);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED;\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n\n  const tokenContract = useTokenContract(token?.address);\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null');\n      return;\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas\n      .approve(spender, MaxUint256)\n      .catch(() => {\n        // general fallback for tokens who restrict approval amounts\n        useExact = true;\n        return tokenContract.estimateGas.approve(\n          spender,\n          amountToApprove.raw.toString(),\n        );\n      });\n\n    return tokenContract\n      .approve(\n        spender,\n        useExact ? amountToApprove.raw.toString() : MaxUint256,\n        {\n          gasLimit: calculateGasMargin(estimatedGas),\n        },\n      )\n      .then(async (response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender },\n        });\n        try {\n          await response.wait();\n        } catch (e) {\n          console.debug('Failed to approve token', e);\n          throw e;\n        }\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error);\n        throw error;\n      });\n  }, [\n    approvalState,\n    token,\n    tokenContract,\n    amountToApprove,\n    spender,\n    addTransaction,\n  ]);\n\n  return [approvalState, approve];\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useTwapApproveCallbackFromTrade(\n  amountToTrade?: CurrencyAmount,\n): [ApprovalState, () => Promise<void>] {\n  const { chainId } = useActiveWeb3React();\n\n  return useApproveCallback(\n    amountToTrade,\n    chainId ? TWAP_CONTRACT_ADDRESS : undefined,\n  );\n}\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { CurrencyAmount, Token, Trade } from '@uniswap/sdk';\nimport { Box, Button, CircularProgress, styled } from '@material-ui/core';\nimport { useWalletModalToggle } from 'state/application/hooks';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useToken } from 'hooks/Tokens';\nimport { CurrencyInput } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport { ApprovalState } from 'hooks/useApproveCallback';\nimport { useTransactionFinalizer } from 'state/transactions/hooks';\nimport { addMaticToMetamask, isSupportedNetwork, maxAmountSpend } from 'utils';\nimport { ReactComponent as ExchangeIcon } from 'assets/images/ExchangeIcon.svg';\nimport 'components/styles/Swap.scss';\nimport { useTranslation } from 'react-i18next';\nimport LimitPriceInput from './LimitPriceInput';\nimport Duration from './Duration';\nimport Interval from './Interval';\nimport ChunkSize from './ChunkSize';\nimport ErrorNotification from './ErrorNotification';\nimport { useTwapCallback } from './useTwapCallback';\nimport ConfirmTwapModal from './ConfirmTwapModal';\nimport PriceIndication from './PriceIndication';\nimport { parseUnits } from 'ethers/lib/utils';\nimport useTwapWrapCallback, { WrapType } from './useWrapCallback';\nimport {\n  useInputsValidation,\n  useMinimumAmountOutValidation,\n} from './useValidation';\nimport { useTwapApproveCallbackFromTrade } from './useTwapApproveCallbackFromTrade';\nimport { MATIC_WRAPPED_ADDRESS } from './consts';\n\nconst Twap: React.FC = () => {\n  const { t } = useTranslation();\n  const { account } = useActiveWeb3React();\n  const { typedValue, recipient, allowLimitPrice } = useTwapState();\n\n  const {\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    typedPriceOutputValue,\n    marketPrice,\n  } = useDerivedTwapInfo();\n\n  const isMinAmountValid = useMinimumAmountOutValidation();\n\n  const finalizedTransaction = useTransactionFinalizer();\n  const [wrapLoading, setWrapLoading] = useState(false);\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useTwapWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue,\n  );\n\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onWrapDone,\n  } = useTwapActionHandlers();\n  const searchToken = useToken(MATIC_WRAPPED_ADDRESS);\n\n  const handleCurrencySelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection],\n  );\n\n  const onWrapHandler = async () => {\n    if (!onWrap) {\n      return;\n    }\n    try {\n      setWrapLoading(true);\n      await onWrap();\n      handleCurrencySelect(searchToken);\n      onWrapDone();\n    } catch (error) {\n    } finally {\n      setWrapLoading(false);\n    }\n  };\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const [approving, setApproving] = useState(false);\n  const [approval, approveCallback] = useTwapApproveCallbackFromTrade(\n    parsedAmount,\n  );\n\n  const inputsError = useInputsValidation();\n\n  const parsedAmounts = useMemo(() => {\n    return {\n      [Field.INPUT]: parsedAmount,\n      [Field.OUTPUT]: typedPriceOutputValue,\n    };\n  }, [parsedAmount, typedPriceOutputValue]);\n\n  const formattedAmounts = useMemo(() => {\n    return {\n      [Field.INPUT]: typedValue || '',\n      [Field.OUTPUT]: typedPriceOutputValue?.toSignificant(6) || '',\n    };\n  }, [typedValue, typedPriceOutputValue]);\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] &&\n      currencyBalances[Field.INPUT] &&\n      currencyBalances[Field.INPUT]?.toExact() &&\n      typedValue &&\n      parseUnits(typedValue, parsedAmounts[Field.INPUT]?.currency.decimals).gt(\n        parseUnits(\n          currencyBalances[Field.INPUT]?.toExact() || '0',\n          parsedAmounts[Field.INPUT]?.currency.decimals,\n        ),\n      ),\n  );\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n  const { ethereum } = window as any;\n  const isValid = !swapInputError;\n\n  const showApproveFlow =\n    approval === ApprovalState.NOT_APPROVED ||\n    approval === ApprovalState.PENDING ||\n    (approvalSubmitted && approval === ApprovalState.APPROVED);\n\n  const toggleWalletModal = useWalletModalToggle();\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const connectWallet = () => {\n    if (ethereum && !isSupportedNetwork(ethereum)) {\n      addMaticToMetamask();\n    } else {\n      toggleWalletModal();\n    }\n  };\n\n  const handleOtherCurrencySelect = useCallback(\n    (outputCurrency) => {\n      if (outputCurrency.symbol === 'MATIC' && searchToken) {\n        setApprovalSubmitted(false);\n        onCurrencySelection(Field.OUTPUT, searchToken);\n      } else {\n        setApprovalSubmitted(false);\n        onCurrencySelection(Field.OUTPUT, outputCurrency);\n      }\n    },\n    [onCurrencySelection, searchToken],\n  );\n\n  const swapButtonText = useMemo(() => {\n    if (account) {\n      if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n        return t('selectToken');\n      } else if (\n        formattedAmounts[Field.INPUT] === '' &&\n        formattedAmounts[Field.OUTPUT] === ''\n      ) {\n        return t('enterAmount');\n      } else if (userHasSpecifiedInputOutput) {\n        return t('insufficientLiquidityTrade');\n      } else if (showWrap) {\n        return wrapType === WrapType.WRAP\n          ? t('wrap')\n          : wrapType === WrapType.UNWRAP\n          ? t('unWrap')\n          : '';\n      } else if (inputsError) {\n        return inputsError;\n      } else if (!isMinAmountValid) {\n        return 'Trade size must be equal to at least 1 USD';\n      } else {\n        return swapInputError ?? 'Place order';\n      }\n    } else {\n      return ethereum && !isSupportedNetwork(ethereum)\n        ? t('switchPolygon')\n        : t('connectWallet');\n    }\n  }, [\n    t,\n    formattedAmounts,\n    currencies,\n    account,\n    ethereum,\n    userHasSpecifiedInputOutput,\n    showWrap,\n    wrapType,\n    swapInputError,\n    inputsError,\n    isMinAmountValid,\n  ]);\n\n  const twapButtonDisabled = useMemo(() => {\n    if (account) {\n      if (showWrap) {\n        return Boolean(wrapInputError);\n      } else if (userHasSpecifiedInputOutput) {\n        return true;\n      } else if (showApproveFlow) {\n        return !isValid || approval !== ApprovalState.APPROVED;\n      } else if (!isMinAmountValid) {\n        return true;\n      } else if (inputsError) {\n        return Boolean(inputsError);\n      } else {\n        return !isValid;\n      }\n    } else {\n      return false;\n    }\n  }, [\n    account,\n    showWrap,\n    wrapInputError,\n    userHasSpecifiedInputOutput,\n    showApproveFlow,\n    approval,\n    isValid,\n    inputsError,\n    isMinAmountValid,\n  ]);\n\n  const [\n    {\n      showConfirm,\n      txPending,\n      tradeToConfirm,\n      swapErrorMessage,\n      attemptingTxn,\n      txHash,\n    },\n    setTwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    txPending?: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    txPending: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(value);\n    },\n    [onUserInput],\n  );\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(\n    currencyBalances[Field.INPUT],\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleHalfInput = useCallback(() => {\n    maxAmountInput &&\n      onUserInput((Number(maxAmountInput.toExact()) / 2).toString());\n  }, [maxAmountInput, onUserInput]);\n\n  const atMaxAmountInput = Boolean(\n    maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput),\n  );\n\n  const onSwap = () => {\n    if (showWrap) {\n      onWrapHandler();\n    } else {\n      setTwapState({\n        tradeToConfirm: undefined,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        showConfirm: true,\n        txHash: undefined,\n      });\n    }\n  };\n\n  const twapCallback = useTwapCallback();\n\n  const handleTwap = useCallback(async () => {\n    if (!twapCallback) {\n      return;\n    }\n\n    try {\n      setTwapState({\n        attemptingTxn: true,\n        tradeToConfirm: undefined,\n        showConfirm: true,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n        txPending: true,\n      });\n\n      await twapCallback();\n      console.log('lalalal');\n\n      setTwapState({\n        attemptingTxn: false,\n        tradeToConfirm: undefined,\n        showConfirm: true,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n        txPending: false,\n      });\n    } catch (error) {\n      console.log(error);\n      setTwapState({\n        attemptingTxn: false,\n        tradeToConfirm: undefined,\n        showConfirm: true,\n        swapErrorMessage: (error as any).message,\n        txHash: undefined,\n        txPending: false,\n      });\n    } finally {\n    }\n  }, [\n    tradeToConfirm,\n    account,\n    recipient,\n    showConfirm,\n    twapCallback,\n    finalizedTransaction,\n  ]);\n\n  useEffect(() => {\n    if (!currencies[Field.INPUT] && searchToken) {\n      onCurrencySelection(Field.INPUT, searchToken);\n    }\n  }, [onCurrencySelection, currencies, searchToken]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setTwapState({\n      tradeToConfirm: undefined,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash]);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setTwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput('');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  return (\n    <Box>\n      <ErrorNotification />\n      {showConfirm && (\n        <ConfirmTwapModal\n          isOpen={showConfirm}\n          originalTrade={tradeToConfirm}\n          onAcceptChanges={handleAcceptChanges}\n          attemptingTxn={attemptingTxn}\n          txPending={txPending}\n          txHash={txHash}\n          recipient={recipient}\n          allowedSlippage={allowedSlippage}\n          onConfirm={handleTwap}\n          swapErrorMessage={swapErrorMessage}\n          onDismiss={handleConfirmDismiss}\n        />\n      )}\n      <CurrencyInput\n        title={`${t('from')}:`}\n        id='swap-currency-input'\n        currency={currencies[Field.INPUT]}\n        onHalf={handleHalfInput}\n        onMax={handleMaxInput}\n        showHalfButton={true}\n        showMaxButton={!atMaxAmountInput}\n        otherCurrency={currencies[Field.OUTPUT]}\n        handleCurrencySelect={handleCurrencySelect}\n        amount={formattedAmounts[Field.INPUT]}\n        setAmount={handleTypeInput}\n      />\n\n      <Box className='exchangeSwap'>\n        <ExchangeIcon onClick={onSwitchTokens} />\n      </Box>\n      <CurrencyInput\n        title={`${t('toEstimate')}:`}\n        id='swap-currency-output'\n        currency={currencies[Field.OUTPUT]}\n        showPrice={Boolean(marketPrice)}\n        showMaxButton={false}\n        otherCurrency={currencies[Field.INPUT]}\n        handleCurrencySelect={handleOtherCurrencySelect}\n        amount={formattedAmounts[Field.OUTPUT] || ''}\n        setAmount={() => null}\n        disabled\n        prefix={allowLimitPrice ? '≥' : '~'}\n        tooltip={\n          allowLimitPrice ? t('twapToInputLimitOrder') : t('twapToInput')\n        }\n      />\n      {marketPrice && (\n        <PriceIndication executionPrice={marketPrice} title='Current Price' />\n      )}\n      <StyledFlex>\n        <LimitPriceInput />\n        <Duration />\n        <ChunkSize currency={currencies[Field.INPUT]} />\n        <Interval />\n      </StyledFlex>\n\n      <Box className='swapButtonWrapper'>\n        {showApproveFlow && !showWrap && (\n          <Box width='48%'>\n            <Button\n              fullWidth\n              disabled={\n                approving ||\n                approval !== ApprovalState.NOT_APPROVED ||\n                approvalSubmitted\n              }\n              onClick={async () => {\n                setApproving(true);\n                try {\n                  await approveCallback();\n                  setApproving(false);\n                } catch (err) {\n                  setApproving(false);\n                }\n              }}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Box className='content'>\n                  {t('approving')} <CircularProgress size={16} />\n                </Box>\n              ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                t('approved')\n              ) : (\n                `${t('approve')} ${currencies[Field.INPUT]?.symbol}`\n              )}\n            </Button>\n          </Box>\n        )}\n        <StyledButtonContainer\n          width={showApproveFlow && !showWrap ? '48%' : '100%'}\n        >\n          <Button\n            fullWidth\n            disabled={(twapButtonDisabled as boolean) || wrapLoading}\n            onClick={account ? onSwap : connectWallet}\n          >\n            {wrapLoading ? (\n              <CircularProgress style={{ color: 'white', zoom: 0.8 }} />\n            ) : (\n              swapButtonText\n            )}\n          </Button>\n        </StyledButtonContainer>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Twap;\n\nconst StyledButtonContainer = styled(Box)({\n  '& .Mui-disabled': {\n    backgroundImage: 'unset!important',\n    color: 'white!important',\n  },\n});\n\nconst StyledFlex = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n","import { useTransactionAdder } from 'state/transactions/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { useTwapContract } from './contract/useContract';\nimport {\n  tryParseAmount,\n  useDerivedTwapInfo,\n  useTwapState,\n} from 'state/twap/hooks';\nimport moment from 'moment';\nimport { MINUTE } from './consts';\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\n\nexport function useTwapCallback() {\n  const { account } = useActiveWeb3React();\n  const { interval, INPUT, OUTPUT, chunkSize, deadline } = useTwapState();\n  const { parsedAmount, minimumAmountOut } = useDerivedTwapInfo();\n\n  const contract = useTwapContract();\n\n  const addTransaction = useTransactionAdder();\n\n  const callback = async () => {\n    const srcAmount = parsedAmount?.raw.toString();\n    const srcBidAmount =\n      chunkSize &&\n      tryParseAmount(chunkSize, parsedAmount?.currency)?.raw.toString();\n    const dstMinAmount = minimumAmountOut?.toString();\n\n    if (!INPUT.currencyId || !OUTPUT.currencyId) {\n      throw new Error('currencies missing');\n    }\n    if (!contract) {\n      throw new Error('Contract error');\n    }\n    if (!account) {\n      throw new Error('account missing');\n    }\n    if (!deadline) {\n      throw new Error('Deadline missing');\n    }\n\n    if (!interval.milliseconds) {\n      throw new Error('Interval missing');\n    }\n\n    if (!srcBidAmount) {\n      throw new Error('Source bid amount missing');\n    }\n\n    if (!srcAmount) {\n      throw new Error('Source missing');\n    }\n    if (!dstMinAmount) {\n      throw new Error('Dest min amount missing');\n    }\n\n    const delay = interval.milliseconds / 1000;\n\n    return contract.ask(\n      '0xeFE1B6096838949156e5130604434A2a13c68C68',\n      INPUT.currencyId,\n      OUTPUT.currencyId,\n      srcAmount,\n      srcBidAmount,\n      dstMinAmount,\n      moment(deadline)\n        .add(MINUTE, 'milliseconds')\n        .unix(),\n      delay,\n    );\n  };\n\n  return callback;\n}\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SettingsIcon } from 'assets/images/SettingsIcon.svg';\nimport { useIsProMode } from 'state/application/hooks';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { useCurrency } from 'hooks/Tokens';\nimport { Swap, SettingsModal, ToggleSwitch } from 'components';\nimport {\n  GelatoLimitOrderPanel,\n  GelatoLimitOrdersHistoryPanel,\n} from '@gelatonetwork/limit-orders-react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Twap from './Twap/Twap';\nimport InfoTooltip from './Twap/InfoTooltip';\n\nconst SWAP_NORMAL = 0;\nconst SWAP_LIMIT = 1;\nconst TWAP = 2;\n\nconst SwapMain: React.FC = () => {\n  const [swapIndex, setSwapIndex] = useState(TWAP);\n  const [openSettingsModal, setOpenSettingsModal] = useState(false);\n  const { isProMode, updateIsProMode } = useIsProMode();\n\n  const parsedQuery = useParsedQueryString();\n  const currency0 = useCurrency(\n    parsedQuery && parsedQuery.currency0\n      ? (parsedQuery.currency0 as string)\n      : undefined,\n  );\n  const currency1 = useCurrency(\n    parsedQuery && parsedQuery.currency1\n      ? (parsedQuery.currency1 as string)\n      : undefined,\n  );\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {openSettingsModal && (\n        <SettingsModal\n          open={openSettingsModal}\n          onClose={() => setOpenSettingsModal(false)}\n        />\n      )}\n      <Box\n        className={`flex flex-wrap items-center justify-between ${\n          isProMode ? ' proModeWrapper' : ''\n        }`}\n      >\n        <Box display='flex'>\n          <Box\n            className={`${\n              swapIndex === SWAP_NORMAL ? 'activeSwap' : ''\n            } swapItem headingItem\n            `}\n            onClick={() => setSwapIndex(SWAP_NORMAL)}\n          >\n            <p>{t('market')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === SWAP_LIMIT ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(SWAP_LIMIT)}\n          >\n            <p>{t('limit')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === TWAP ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(TWAP)}\n          >\n            <InfoTooltip text={t('twapTab')}>\n              <p>{t('twap')}</p>\n            </InfoTooltip>\n          </Box>\n        </Box>\n        <Box my={1} className='flex items-center'>\n          {!isProMode && (\n            <Box className='flex items-center' mr={1}>\n              <span\n                className='text-secondary text-uppercase'\n                style={{ marginRight: 8 }}\n              >\n                {t('proMode')}\n              </span>\n              <ToggleSwitch\n                toggled={isProMode}\n                onToggle={() => updateIsProMode(!isProMode)}\n              />\n            </Box>\n          )}\n          <Box className='headingItem' marginRight={isProMode ? 2.5 : 0}>\n            <SettingsIcon onClick={() => setOpenSettingsModal(true)} />\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={isProMode ? '0 24px' : '0'} mt={3.5}>\n        {swapIndex === SWAP_NORMAL && (\n          <Swap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n        {swapIndex === SWAP_LIMIT && (\n          <Box className='limitOrderPanel'>\n            <GelatoLimitOrderPanel />\n            <GelatoLimitOrdersHistoryPanel />\n            <Box mt={2} textAlign='center'>\n              <small>\n                <Trans\n                  i18nKey='limitOrderDisclaimer'\n                  components={{\n                    bold: <b />,\n                    alink: (\n                      <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://www.certik.org/projects/gelato'\n                      />\n                    ),\n                  }}\n                />\n              </small>\n            </Box>\n          </Box>\n        )}\n        {swapIndex === TWAP && <Twap />}\n      </Box>\n    </>\n  );\n};\n\nexport default SwapMain;\n","import React from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { GlobalConst } from 'constants/index';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatCompact, getDaysCurrentYear } from 'utils';\nimport { useCurrency } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\n\nconst LiquidityPoolRow: React.FC<{\n  pair: any;\n  key: number;\n}> = ({ pair, key }) => {\n  const { breakpoints } = useTheme();\n  const daysCurrentYear = getDaysCurrentYear();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const { t } = useTranslation();\n\n  const dayVolumeUSD =\n    Number(\n      pair.oneDayVolumeUSD ? pair.oneDayVolumeUSD : pair.oneDayVolumeUntracked,\n    ) *\n    GlobalConst.utils.FEEPERCENT *\n    daysCurrentYear *\n    100;\n  const trackReserveUSD = Number(\n    pair.oneDayVolumeUSD ? pair.trackedReserveUSD : pair.reserveUSD,\n  );\n  const apy =\n    isNaN(dayVolumeUSD) || trackReserveUSD === 0\n      ? 0\n      : dayVolumeUSD / trackReserveUSD;\n  const liquidity = pair.trackedReserveUSD\n    ? pair.trackedReserveUSD\n    : pair.reserveUSD;\n  const volume = pair.oneDayVolumeUSD\n    ? pair.oneDayVolumeUSD\n    : pair.oneDayVolumeUntracked;\n  const token0 = useCurrency(pair.token0.id);\n  const token1 = useCurrency(pair.token1.id);\n  return (\n    <Box key={key} className='liquidityContent'>\n      <Box className='flex items-center' width={isMobile ? 1 : 0.5}>\n        <DoubleCurrencyLogo\n          currency0={token0 ?? undefined}\n          currency1={token1 ?? undefined}\n          size={28}\n        />\n        <small style={{ marginLeft: 12 }}>\n          {pair.token0.symbol.toUpperCase()} /{' '}\n          {pair.token1.symbol.toUpperCase()}\n        </small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.2}\n        mt={isMobile ? 2.5 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('tvl')}</small>}\n        <small>${formatCompact(liquidity)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('24hVol')}</small>}\n        <small>${formatCompact(volume)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className={`flex ${isMobile ? 'justify-between' : 'justify-end'}`}\n      >\n        {isMobile && <small className='text-secondary'>{t('apy')}</small>}\n        <small\n          className={`text-right ${apy < 0 ? 'text-error' : 'text-success'}`}\n        >\n          {apy.toFixed(2)}%\n        </small>\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(LiquidityPoolRow);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport { Token } from '@uniswap/sdk';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst LiquidityPools: React.FC<{\n  token1: Token;\n  token2: Token;\n}> = ({ token1, token2 }) => {\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const { t } = useTranslation();\n  const { ethPrice } = useEthPrice();\n\n  const liquidityPairs = useMemo(\n    () =>\n      tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              if (liquidityFilterIndex === 0) {\n                return true;\n              } else if (liquidityFilterIndex === 1) {\n                return (\n                  pair.token0.id === token1Address ||\n                  pair.token1.id === token1Address\n                );\n              } else {\n                return (\n                  pair.token0.id === token2Address ||\n                  pair.token1.id === token2Address\n                );\n              }\n            })\n            .slice(0, 5)\n        : [],\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\n  );\n\n  const whiteListAddressList = useMemo(\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\n    [allTokenList],\n  );\n\n  useEffect(() => {\n    if (!ethPrice.price) return;\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n\n      const formattedPairs = tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              return (\n                whiteListAddressList.includes(pair?.token0?.id) &&\n                whiteListAddressList.includes(pair?.token1?.id)\n              );\n            })\n            .map((pair: any) => {\n              return pair.id;\n            })\n        : [];\n\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n\n  return (\n    <>\n      <Box\n        className='flex items-center justify-between'\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\n      >\n        <Box className='flex items-center'>\n          <p className='weight-600' style={{ marginRight: 8 }}>\n            {t('liquidityPools')}\n          </p>\n          <small className='text-secondary'>\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\n          </small>\n        </Box>\n        <Box\n          className='flex cursor-pointer text-secondary'\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\n        >\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n        </Box>\n      </Box>\n      {!liquidityPoolClosed && (\n        <>\n          <Divider />\n          <Box width={1}>\n            <Box padding={2} className='flex liquidityMain'>\n              <Box width={0.5} className='flex liquidityFilter'>\n                <small\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(0)}\n                >\n                  {t('all')}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(1)}\n                >\n                  {token1.symbol?.toUpperCase()}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(2)}\n                >\n                  {token2.symbol?.toUpperCase()}\n                </small>\n              </Box>\n              {!isMobile && (\n                <>\n                  <Box width={0.2}>\n                    <small>{t('tvl')}</small>\n                  </Box>\n                  <Box width={0.15}>\n                    <small>{t('24hVol')}</small>\n                  </Box>\n                  <Box width={0.15} className='text-right'>\n                    <small>{t('apy')}</small>\n                  </Box>\n                </>\n              )}\n            </Box>\n            {liquidityPairs.map((pair: any, ind: any) => (\n              <LiquidityPoolRow pair={pair} key={ind} />\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LiquidityPools;\n","import React from 'react';\n\nconst SwapProChart: React.FC<{\n  pairName: string;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n}> = ({ pairAddress, pairName, pairTokenReversed }) => {\n  return (\n    <iframe\n      src={`https://mode.quickswap.exchange?pairAddress=${pairAddress}&pairName=${pairName}&tokenReversed=${pairTokenReversed}`}\n      height='100%'\n      width='100%'\n      frameBorder='0'\n    />\n  );\n};\n\nexport default React.memo(SwapProChart);\n","import React from 'react';\nimport SwapProChart from './SwapProChart';\nimport { Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { Height } from '@material-ui/icons';\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex';\nimport 'react-reflex/styles.css';\nimport { formatNumber, shortenTx, getEtherscanLink } from 'utils';\nimport dayjs from 'dayjs';\nimport { useActiveWeb3React } from 'hooks';\nimport { TableVirtuoso } from 'react-virtuoso';\nimport { useTranslation } from 'react-i18next';\n\nconst SwapProChartTrade: React.FC<{\n  showChart: boolean;\n  showTrades: boolean;\n  token1: Token;\n  token2: Token;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n  transactions?: any[];\n}> = ({\n  showChart,\n  showTrades,\n  token1,\n  token2,\n  pairAddress,\n  pairTokenReversed,\n  transactions,\n}) => {\n  const { chainId } = useActiveWeb3React();\n  const { t } = useTranslation();\n\n  const TradesTable = () => (\n    <TableVirtuoso\n      data={transactions}\n      components={{\n        Table: ({ ...props }) => <table className='tradeTable' {...props} />,\n      }}\n      fixedHeaderContent={() => (\n        <tr>\n          <th align='left'>{t('date')}</th>\n          <th align='left'>{t('type')}</th>\n          <th align='right'>{t('usd')}</th>\n          <th align='right'>{token1.symbol}</th>\n          <th align='right'>{token2.symbol}</th>\n          <th align='right'>{t('price')}</th>\n          <th align='right'>{t('txn')}</th>\n        </tr>\n      )}\n      itemContent={(index, tx) => {\n        const txType = Number(tx.amount0In) > 0 ? 'sell' : 'buy';\n        const txAmount0 =\n          Number(tx.amount0In) > 0 ? tx.amount0In : tx.amount0Out;\n        const txAmount1 =\n          Number(tx.amount1In) > 0 ? tx.amount1In : tx.amount1Out;\n        const token1Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount0\n            : txAmount1;\n        const token2Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount1\n            : txAmount0;\n        const txPrice = Number(tx.amountUSD) / token1Amount;\n        return (\n          <>\n            <td align='left'>\n              {dayjs\n                .unix(tx.transaction.timestamp)\n                .format('MMM DD, hh:mm:ss a')}\n            </td>\n            <td className={txType} align='left'>\n              {txType.toUpperCase()}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(tx.amountUSD)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token1Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token2Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(txPrice)}\n            </td>\n            <td className={txType} align='right'>\n              {chainId ? (\n                <a\n                  href={getEtherscanLink(\n                    chainId,\n                    tx.transaction.id,\n                    'transaction',\n                  )}\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  {shortenTx(tx.transaction.id)}\n                </a>\n              ) : (\n                shortenTx(tx.transaction.id)\n              )}\n            </td>\n          </>\n        );\n      }}\n    />\n  );\n\n  return (\n    <ReflexContainer orientation='horizontal'>\n      {showChart && (\n        <ReflexElement className='top-pane' minSize={200}>\n          <SwapProChart\n            pairName={`${token1.symbol}/${token2.symbol}`}\n            pairAddress={pairAddress}\n            pairTokenReversed={pairTokenReversed}\n          />\n        </ReflexElement>\n      )}\n      {showChart && showTrades && (\n        <ReflexSplitter>\n          <Box\n            width={1}\n            height='2px'\n            className='flex justify-center items-center'\n          >\n            <Height />\n          </Box>\n        </ReflexSplitter>\n      )}\n      {showTrades && (\n        <ReflexElement className='bottom-pane' minSize={200}>\n          <TradesTable />\n        </ReflexElement>\n      )}\n    </ReflexContainer>\n  );\n};\n\nexport default React.memo(SwapProChartTrade);\n","import React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\ndayjs.extend(utc);\n\nconst SwapInfoTx: React.FC<{\n  transactions?: any[];\n}> = ({ transactions }) => {\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime\n    .subtract(subtractTimeAmount, subtractTimeType)\n    .unix();\n\n  const filteredTxs = transactions?.filter(\n    (tx) => tx.transaction.timestamp >= firstTime,\n  );\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\n  const volume = filteredTxs\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\n    : undefined;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ButtonSwitch\n        height={32}\n        value={txFilter}\n        onChange={setTxFilter}\n        items={[\n          { label: `5${t('min')}`, value: '5_minute' },\n          { label: `1${t('hour')}`, value: '1_hour' },\n          { label: `6${t('hour')}`, value: '6_hour' },\n          { label: `24${t('hour')}`, value: '24_hour' },\n        ]}\n      />\n      <Box className='swapTxInfo'>\n        <Box>\n          <small className='text-secondary'>{t('transactions')}:</small>\n          {filteredTxs ? (\n            <small>{filteredTxs.length}</small>\n          ) : (\n            <Skeleton width={60} height={14} />\n          )}\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('buys')}:</small>\n          <small>\n            {filteredBuyTxs ? (\n              filteredBuyTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('sells')}:</small>\n          <small>\n            {filteredSellTxs ? (\n              filteredSellTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('volume')}:</small>\n          <small>\n            {filteredTxs ? (\n              volume > 1000 ? (\n                formatCompact(volume)\n              ) : (\n                formatNumber(volume)\n              )\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default React.memo(SwapInfoTx);\n","import React, { useState, useEffect } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { SwapHoriz } from '@material-ui/icons';\nimport { Currency, Token } from '@uniswap/sdk';\nimport { CurrencyLogo } from 'components';\nimport { getTokenInfo, formatNumber } from 'utils';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwapInfoTx from './SwapInfoTx';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst SwapProInfo: React.FC<{\n  token1?: Token;\n  token2?: Token;\n  transactions?: any[];\n}> = ({ token1, token2, transactions }) => {\n  const { t } = useTranslation();\n  const [token1Data, setToken1Data] = useState<any>(null);\n  const [token2Data, setToken2Data] = useState<any>(null);\n  const token1Address = token1?.address;\n  const token2Address = token2?.address;\n  const currency1 = token1 ? unwrappedToken(token1) : undefined;\n  const currency2 = token2 ? unwrappedToken(token2) : undefined;\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    (async () => {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        if (token1Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token1Address,\n          );\n          if (tokenInfo) {\n            setToken1Data(tokenInfo[0]);\n          }\n        }\n        if (token2Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token2Address,\n          );\n          if (tokenInfo) {\n            setToken2Data(tokenInfo[0]);\n          }\n        }\n      }\n    })();\n  }, [token1Address, token2Address, ethPrice.price, ethPrice.oneDayPrice]);\n\n  const TokenInfo: React.FC<{ currency: Currency; tokenData: any }> = ({\n    currency,\n    tokenData,\n  }) => {\n    const priceUpPercent = Number(tokenData?.priceChangeUSD);\n    return (\n      <>\n        <Box p={1} display='flex'>\n          <CurrencyLogo currency={currency} />\n          <Box ml={1} flex={1}>\n            <Box className='flex justify-between'>\n              <small>{currency.symbol}</small>\n              {tokenData ? (\n                <small>${formatNumber(tokenData?.priceUSD)}</small>\n              ) : (\n                <Skeleton width={60} height={14} />\n              )}\n            </Box>\n            {tokenData ? (\n              <span>\n                {t('24h')}:{' '}\n                <span\n                  className={priceUpPercent > 0 ? 'text-success' : 'text-error'}\n                >\n                  {formatNumber(priceUpPercent)}%\n                </span>\n              </span>\n            ) : (\n              <Skeleton width={60} height={12} />\n            )}\n          </Box>\n        </Box>\n        <Divider />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Box p={1}>\n        <p className='text-uppercase'>{t('info')}:</p>\n      </Box>\n      <Divider />\n      {currency1 && <TokenInfo currency={currency1} tokenData={token1Data} />}\n      {currency2 && <TokenInfo currency={currency2} tokenData={token2Data} />}\n      {currency1 && currency2 && (\n        <>\n          <Box py={2} px={1}>\n            <Box mb={1} px={1} className='flex items-center justify-between'>\n              <small>\n                {currency1.symbol} / {currency2.symbol}\n              </small>\n              <Box className='swapIcon'>\n                <SwapHoriz />\n              </Box>\n            </Box>\n            <SwapInfoTx transactions={transactions} />\n          </Box>\n          <Divider />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SwapProInfo);\n","import React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface SwapProFilterProps {\n  infoPos: string;\n  setInfoPos: (pos: string) => void;\n  showChart: boolean;\n  setShowChart: (value: boolean) => void;\n  showTrades: boolean;\n  setShowTrades: (value: boolean) => void;\n}\n\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\n  infoPos,\n  setInfoPos,\n  showChart,\n  setShowChart,\n  showTrades,\n  setShowTrades,\n}) => {\n  const { t } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n\n  const infoPosItems = swapPositions.map((pos) => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos,\n    };\n  });\n\n  return (\n    <Box className='swapFilter'>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showChart}\n          disabled={!showTrades}\n          onChange={(evt) => setShowChart(evt.target.checked)}\n        />\n        <small>{t('chart')}</small>\n      </Box>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showTrades}\n          disabled={!showChart}\n          onChange={(evt) => setShowTrades(evt.target.checked)}\n        />\n        <small>{t('trades')}</small>\n      </Box>\n      <Box className='flex items-center'>\n        <small className='text-uppercase'>{t('info')}:</small>\n        <Box ml={1}>\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\n        </Box>\n      </Box>\n      <Box\n        className='replayButton'\n        onClick={() => {\n          setInfoPos(t('right'));\n          setShowChart(true);\n          setShowTrades(true);\n        }}\n      >\n        <Replay />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwapProFilter;\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\n\nconst SwapPage: React.FC = () => {\n  const { isProMode, updateIsProMode } = useIsProMode();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState<any[] | undefined>(\n    undefined,\n  );\n  const [infoPos, setInfoPos] = useState('right');\n\n  const { currencies } = useDerivedSwapInfo();\n  const { chainId } = useActiveWeb3React();\n\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\n\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3} id='swap-page'>\n      {!isProMode && (\n        <Box className='pageHeading'>\n          <h4>{t('swap')}</h4>\n          <Box className='helpWrapper'>\n            <small>{t('help')}</small>\n            <HelpIcon />\n          </Box>\n        </Box>\n      )}\n      {!isProMode ? (\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Box className='wrapper'>\n              <SwapMain />\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={7}>\n            <Box className='flex flex-wrap justify-between fullWidth'>\n              {token1 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token1} />\n                </Box>\n              )}\n              {token2 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token2} />\n                </Box>\n              )}\n            </Box>\n            {token1 && token2 && (\n              <Box className='wrapper' marginTop='32px'>\n                <LiquidityPools token1={token1} token2={token2} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box\n          className='border-top border-bottom bg-palette flex flex-wrap'\n          minHeight='calc(100vh - 140px)'\n        >\n          <Box\n            width={isMobile ? 1 : '450px'}\n            padding='20px 0'\n            className={isMobile ? '' : 'border-right'}\n          >\n            <Box\n              className='flex justify-between items-center'\n              padding='0 24px'\n              mb={3}\n            >\n              <h4>{t('swap')}</h4>\n              <Box className='flex items-center' mr={1}>\n                <span\n                  className='text-secondary text-uppercase'\n                  style={{ marginRight: 8 }}\n                >\n                  {t('proMode')}\n                </span>\n                <ToggleSwitch\n                  toggled={isProMode}\n                  onToggle={() => updateIsProMode(!isProMode)}\n                />\n              </Box>\n            </Box>\n            <SwapMain />\n          </Box>\n          {infoPos === 'left' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left border-right'}\n              width={isMobile ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n          <Box className='swapProWrapper'>\n            <SwapProFilter\n              infoPos={infoPos}\n              setInfoPos={setInfoPos}\n              showChart={showChart}\n              setShowChart={setShowChart}\n              showTrades={showTrades}\n              setShowTrades={setShowTrades}\n            />\n            {token1 && token2 && pairId && (\n              <SwapProChartTrade\n                showChart={showChart}\n                showTrades={showTrades}\n                token1={token1}\n                token2={token2}\n                pairAddress={pairId}\n                pairTokenReversed={pairTokenReversed}\n                transactions={transactions}\n              />\n            )}\n          </Box>\n          {infoPos === 'right' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left'}\n              width={isTablet ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SwapPage;\n"],"sourceRoot":""}