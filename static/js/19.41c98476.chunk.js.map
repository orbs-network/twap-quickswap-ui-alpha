{"version":3,"sources":["pages/AnalyticsPage/AnalyticsTokens.tsx"],"names":["AnalyticsTokens","t","useTranslation","useState","tokensFilter","setTokensFilter","topTokens","updateTopTokens","bookmarkTokens","useBookmarkTokens","ethPrice","useEthPrice","favoriteTokens","useMemo","filter","token","indexOf","id","useEffect","a","price","oneDayPrice","getTopTokens","GlobalConst","utils","ANALYTICS_TOKENS_COUNT","topTokensData","fetchTopTokens","width","mb","hideArrow","my","px","className","onClick","length","data","variant","height"],"mappings":"6OAmFeA,UA1EmB,WAChC,IAAQC,EAAMC,cAAND,EACR,EAAwCE,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAAqCF,mBAAuB,MAA5D,mBAAOG,EAAP,KAAkBC,EAAlB,KACQC,EAAmBC,cAAnBD,eACAE,EAAaC,cAAbD,SAEFE,EAAiBC,mBAAQ,WAC7B,OAAIP,EACKA,EAAUQ,QACf,SAACC,GAAD,OAAgBP,EAAeQ,QAAQD,EAAME,KAAO,KAG/C,KAER,CAACX,EAAWE,IAkBf,OAhBAU,qBAAU,YACY,uCAAG,4BAAAC,EAAA,0DACjBT,EAASU,QAASV,EAASW,YADV,gCAESC,aAC1BZ,EAASU,MACTV,EAASW,YACTE,IAAYC,MAAMC,wBALD,QAEbC,EAFa,SAQjBnB,EAAgBmB,GARC,2CAAH,qDAYpBC,KACC,CAACjB,EAASU,MAAOV,EAASW,cAG3B,eAAC,IAAD,CAAKO,MAAM,OAAOC,GAAI,EAAtB,UACE,cAAC,IAAD,CAAWC,WAAW,IACtB,eAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,UAAU,8BAA7B,UACE,cAAC,IAAD,CACEA,UAAS,uBACU,IAAjB7B,EAAqB,eAAiB,iBAExC8B,QAAS,kBAAM7B,EAAgB,IAJjC,SAME,mBAAG4B,UAAU,aAAb,SAA2BhC,EAAE,kBAE/B,cAAC,IAAD,CACEgC,UAAS,uBACU,IAAjB7B,EAAqB,eAAiB,iBAExC8B,QAAS,kBAAM7B,EAAgB,IAJjC,SAME,mBAAG4B,UAAU,aAAb,SAA2BhC,EAAE,kBAE/B,cAAC,IAAD,CACEgC,UAAS,uBACU,IAAjB7B,EAAqB,eAAiB,iBAExC8B,QAAS,kBAAM7B,EAAgB,IAJjC,SAME,mBAAG4B,UAAU,aAAb,SAA2BhC,EAAE,qBAGjC,cAAC,IAAD,CAAKgC,UAAU,QAAf,SACG3B,GAAkC,MAArBA,EAAU6B,OACtB,cAAC,IAAD,CAAaC,KAAuB,IAAjBhC,EAAqBE,EAAYM,IAEpD,cAAC,IAAD,CAAUyB,QAAQ,OAAOT,MAAM,OAAOU,OAAQ","file":"static/js/19.41c98476.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Box } from '@material-ui/core';\nimport { TopMovers, TokensTable } from 'components';\nimport { useBookmarkTokens, useEthPrice } from 'state/application/hooks';\nimport { getTopTokens } from 'utils';\nimport { Skeleton } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport { GlobalConst } from 'constants/index';\n\nconst AnalyticsTokens: React.FC = () => {\n  const { t } = useTranslation();\n  const [tokensFilter, setTokensFilter] = useState(0);\n\n  const [topTokens, updateTopTokens] = useState<any[] | null>(null);\n  const { bookmarkTokens } = useBookmarkTokens();\n  const { ethPrice } = useEthPrice();\n\n  const favoriteTokens = useMemo(() => {\n    if (topTokens) {\n      return topTokens.filter(\n        (token: any) => bookmarkTokens.indexOf(token.id) > -1,\n      );\n    } else {\n      return [];\n    }\n  }, [topTokens, bookmarkTokens]);\n\n  useEffect(() => {\n    const fetchTopTokens = async () => {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        const topTokensData = await getTopTokens(\n          ethPrice.price,\n          ethPrice.oneDayPrice,\n          GlobalConst.utils.ANALYTICS_TOKENS_COUNT,\n        );\n        if (topTokensData) {\n          updateTopTokens(topTokensData);\n        }\n      }\n    };\n    fetchTopTokens();\n  }, [ethPrice.price, ethPrice.oneDayPrice]);\n\n  return (\n    <Box width='100%' mb={3}>\n      <TopMovers hideArrow={true} />\n      <Box my={4} px={2} className='flex flex-wrap items-center'>\n        <Box\n          className={`tokensFilter ${\n            tokensFilter === 0 ? 'text-primary' : 'text-disabled'\n          }`}\n          onClick={() => setTokensFilter(0)}\n        >\n          <p className='weight-600'>{t('allCryptos')}</p>\n        </Box>\n        <Box\n          className={`tokensFilter ${\n            tokensFilter === 1 ? 'text-primary' : 'text-disabled'\n          }`}\n          onClick={() => setTokensFilter(1)}\n        >\n          <p className='weight-600'>{t('favourites')}</p>\n        </Box>\n        <Box\n          className={`tokensFilter ${\n            tokensFilter === 2 ? 'text-primary' : 'text-disabled'\n          }`}\n          onClick={() => setTokensFilter(2)}\n        >\n          <p className='weight-600'>{t('newListing')}</p>\n        </Box>\n      </Box>\n      <Box className='panel'>\n        {topTokens && topTokens.length === 200 ? (\n          <TokensTable data={tokensFilter === 0 ? topTokens : favoriteTokens} />\n        ) : (\n          <Skeleton variant='rect' width='100%' height={150} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AnalyticsTokens;\n"],"sourceRoot":""}