{"version":3,"sources":["assets/images/HelpIcon1.svg","assets/images/SettingsIcon.svg","pages/SwapPage/Twap/InfoTooltip.tsx","pages/SwapPage/Twap/PriceIndication.tsx","pages/SwapPage/Twap/LimitPriceInput.tsx","pages/SwapPage/Twap/TimeSelect.tsx","pages/SwapPage/Twap/Duration.tsx","pages/SwapPage/Twap/Interval.tsx","pages/SwapPage/Twap/ChunkSize.tsx","pages/SwapPage/Twap/ErrorNotification.tsx","pages/SwapPage/Twap/Orders/OrderTx.tsx","pages/SwapPage/Twap/Orders/Orders.tsx","pages/SwapPage/Twap/useTwapCallback.ts","pages/SwapPage/Twap/ConfirmTwapModal/TxDetails.tsx","pages/SwapPage/Twap/ConfirmTwapModal/Disclaimer.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ModalContent.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ConfirmTwapModal.tsx","pages/SwapPage/Twap/Twap.tsx","pages/SwapPage/SwapMain.tsx","pages/SwapPage/LiquidityPoolRow.tsx","pages/SwapPage/LiquidityPools.tsx","pages/SwapPage/SwapProChart.tsx","pages/SwapPage/SwapProChartTrade.tsx","pages/SwapPage/SwapInfoTx.tsx","pages/SwapPage/SwapProInfo.tsx","pages/SwapPage/SwapProFilter.tsx","pages/SwapPage/SwapPage.tsx"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHelpIcon1","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","d","transform","style","fill","ForwardRef","SvgSettingsIcon","rx","InfoTooltip","text","children","StyledContainer","placement","styled","Box","display","alignItems","gap","PriceIndication","executionPrice","customText","useState","mainPrice","setMainPrice","currencies","useDerivedTwapInfo","useTranslation","t","className","Field","INPUT","OUTPUT","symbol","invert","toSignificant","PriceExchangeIcon","onClick","LimitPriceInput","trade","calculatedPrice","calculatedPriceInPriceFormat","allowLimitPrice","useTwapState","dispatch","useDispatch","value","StyledCard","StyledPrice","toggled","onToggle","setAllowLimitPrice","Typography","disabled","align","placeholder","onUserInput","val","setPrice","onChange","undefined","marginTop","flex","marginRight","TimeSelect","selected","onUpdate","StyledTitle","margin","StyledRight","displayValue","milliseconds","timeToMilliseconds","type","format","getFormatTypeFromMilliseconds","millisecondsToTime","console","log","StyledSelect","event","color","opacity","MenuItem","TimeSelectFormat","DAYS","HOURS","MINUTES","Select","theme","borderBottom","palette","primary","main","justifyContent","whiteSpace","Duration","onDuration","useTwapActionHandlers","duration","onInterval","interval","selfEdit","IconButton","setSelfEdit","paddingRight","ChunkSize","currency","totalChunks","chunkSize","inInput","onChunkSize","usdPrice","Number","useUSDCPrice","useEffect","isValidChunkSize","originalValue","StyledTop","StyledCurrency","marginBottom","size","StyledBottom","toString","toLocaleString","flexDirection","marginLeft","ErrorNotification","error","handleClose","setTimeout","setError","Snackbar","open","autoHideDuration","onClose","Alert","severity","variant","OrderTx","tx","status","fromTokenId","toTokenId","fromTokenAmount","toTokenAmount","currencyPrice","minimumReceived","finishedChunks","fromCurrency","useCurrency","toCurrency","showCancel","TxStatus","OPEN","percent","StyledOrder","StyledOrderTop","StyledOrderTopCurrency","Button","StyledOrderText","StyledOrderRows","name","StyledProgressContainer","StyledProgressLeft","StyledLinearProgress","StyledProgressNumbers","LinearProgress","borderRadius","fontSize","Token","StyledToken","TxRow","StyledOrderRow","padding","paddingTop","data","createTxData","mappedData","mapTxData","Orders","setValue","StyledTabsContainer","Tabs","_event","newValue","textColor","scrollButtons","map","index","StyledTab","label","a11yProps","isEmpty","StyledTabPanel","StyledEmptyListText","emptyOrdersText","StyledOrdersList","SwapCallbackState","other","role","hidden","aria-labelledby","textAlign","overflow","maxHeight","Tab","minWidth","span","useTwapCallArguments","allowedSlippage","GlobalConst","utils","INITIAL_ALLOWED_SLIPPAGE","recipientAddressOrName","useActiveWeb3React","account","chainId","library","useENS","recipientAddress","address","recipient","deadline","useTransactionDeadline","contract","useRouterContract","useMemo","tradeVersion","Version","v2","swapMethods","push","Router","swapCallParameters","feeOnTransfer","Percent","JSBI","BigInt","BIPS_BASE","ttl","toNumber","DEFAULT_DEADLINE_FROM_NOW","tradeType","TradeType","EXACT_INPUT","parameters","calculateInterval","time","moment","days","hours","minutes","str","TxDetails","outputAmount","limitOrderAllowed","StyledDetails","add","tooltip","formatTokenAmount","fontWeight","Row","StyledRow","Disclaimer","ModalContent","onConfirm","typedPriceOutputValue","inputAmount","result","tryParseAmount","calculatedOutputAmount","StyledCards","currencyAmount","Card","StyledCardTop","getTokenValue","StyledCardBottom","ConfirmTwapModal","originalTrade","onAcceptChanges","onDismiss","swapErrorMessage","isOpen","attemptingTxn","txHash","txPending","showAcceptChanges","Boolean","tradeB","tradeA","currencyEquals","equalTo","modalContent","useCallback","pendingText","amount1","symbol1","amount2","symbol2","confirmationContent","message","content","hash","Twap","currency0","currency1","currencyBgClass","independentField","typedValue","v1Trade","v2Trade","currencyBalances","parsedAmount","swapInputError","inputError","toggledVersion","useToggledVersion","finalizedTransaction","useTransactionFinalizer","useExpertModeManager","isExpertMode","useWrapCallback","wrapType","onWrap","execute","wrapInputError","allTokens","useAllTokens","showWrap","WrapType","NOT_APPLICABLE","tradesByVersion","v1","onSwitchTokens","onCurrencySelection","onChangeRecipient","onInInputChange","useENSAddress","useUserSlippageTolerance","approving","setApproving","useApproveCallbackFromTrade","approval","approveCallback","dependentField","parsedAmounts","formattedAmounts","toExact","route","userHasSpecifiedInputOutput","greaterThan","noRoute","priceImpactWithoutFee","computeTradePriceBreakdown","approvalSubmitted","setApprovalSubmitted","ethereum","window","priceImpactSeverity","warningSeverity","isValid","showApproveFlow","ApprovalState","NOT_APPROVED","PENDING","APPROVED","toggleWalletModal","useWalletModalToggle","handleCurrencySelect","inputCurrency","handleOtherCurrencySelect","outputCurrency","swapCalls","addTransaction","useTransactionAdder","state","INVALID","callback","LOADING","VALID","a","Promise","all","methodName","args","options","isZero","estimateGas","then","gasEstimate","catch","gasError","debug","callStatic","Error","callError","errorMessage","reason","estimatedCalls","successfulEstimation","find","el","ix","list","errorCalls","filter","gasLimit","calculateGasMargin","from","response","inputSymbol","outputSymbol","base","withRecipient","isAddress","shortenAddress","withVersion","toUpperCase","summary","code","useTwapCallback","twapCallback","twapCallbackError","swapButtonText","WRAP","UNWRAP","isSupportedNetwork","twapButtonDisabled","showConfirm","tradeToConfirm","setTwapState","handleTypeInput","handleTypeOutput","maxAmountInput","maxAmountSpend","handleMaxInput","handleHalfInput","atMaxAmountInput","ETHER","handleAcceptChanges","handleConfirmDismiss","handleTwap","confirmPriceImpactWithoutFee","wait","receipt","ReactGA","category","action","join","inInputAmount","inInputCurrency","onHalf","onMax","showHalfButton","showMaxButton","otherCurrency","amount","setAmount","bgClass","ExchangeIcon","showPrice","Interval","fullWidth","CircularProgress","StyledButtonContainer","addMaticToMetamask","backgroundImage","SwapMain","swapIndex","setSwapIndex","openSettingsModal","setOpenSettingsModal","useIsProMode","isProMode","updateIsProMode","parsedQuery","useParsedQueryString","my","mr","SettingsIcon","mt","Trans","i18nKey","components","bold","alink","rel","href","LiquidityPoolRow","pair","breakpoints","useTheme","daysCurrentYear","getDaysCurrentYear","isMobile","useMediaQuery","down","dayVolumeUSD","oneDayVolumeUSD","oneDayVolumeUntracked","FEEPERCENT","trackReserveUSD","trackedReserveUSD","reserveUSD","apy","isNaN","liquidity","volume","token0","token1","formatCompact","toFixed","React","memo","LiquidityPools","token2","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","toLowerCase","token2Address","allTokenList","ethPrice","useEthPrice","liquidityPairs","slice","whiteListAddressList","item","price","getTokenPairs","formattedPairs","includes","getBulkPairData","pairData","KeyboardArrowDown","KeyboardArrowUp","Divider","ind","SwapProChart","pairAddress","pairName","pairTokenReversed","src","frameBorder","SwapProChartTrade","showChart","showTrades","transactions","TradesTable","Table","fixedHeaderContent","itemContent","txType","amount0In","txAmount0","amount0Out","txAmount1","amount1In","amount1Out","token1Amount","token2Amount","txPrice","amountUSD","dayjs","unix","transaction","timestamp","formatNumber","getEtherscanLink","shortenTx","orientation","minSize","Height","extend","utc","SwapInfoTx","txFilter","setTxFilter","subtractTimeAmount","split","subtractTimeType","firstTime","subtract","filteredTxs","filteredBuyTxs","filteredSellTxs","reduce","total","items","Skeleton","SwapProInfo","token1Data","setToken1Data","token2Data","setToken2Data","unwrappedToken","currency2","oneDayPrice","getTokenInfo","tokenInfo","TokenInfo","tokenData","priceUpPercent","priceChangeUSD","p","ml","priceUSD","py","px","mb","SwapHoriz","SwapProFilter","infoPos","setInfoPos","setShowChart","setShowTrades","infoPosItems","pos","condition","Checkbox","checked","evt","Replay","SwapPage","isTablet","pairId","setPairId","setPairTokenReversed","setTransactions","Math","floor","Date","now","currentTime","setCurrentTime","useDerivedSwapInfo","wrappedCurrency","setInterval","_currentTime","clearInterval","getPairAddress","tokenReversed","getPairId","getSwapTransactions","txns","filteredTxns","txn","getTradesData","minHeight","Grid","container","spacing","xs","sm","md","lg","token"],"mappings":"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","file":"static/js/11.e4d3371b.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHelpIcon1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Path 11469\",\n    d: \"M10.78-7.061c0-1.268-.918-1.919-2.319-1.919a3.829 3.829 0 0 0-2.353.78l.167 1.068a3.446 3.446 0 0 1 2.069-.8c.767 0 1.2.334 1.2.918 0 .617-.417.968-1.6 1.4l-.334.117.133 1.518.784-.15.067-.734c1.218-.396 2.186-.997 2.186-2.198zm-2 5.306V-3.09H7.493v1.335zM.352-5.192a7.851 7.851 0 0 0 7.992 8.008 7.855 7.855 0 0 0 8.008-8.008 7.831 7.831 0 0 0-8.008-7.992A7.827 7.827 0 0 0 .352-5.192zm1.1 0a6.789 6.789 0 0 1 6.891-6.941 6.789 6.789 0 0 1 6.891 6.941 6.793 6.793 0 0 1-6.89 6.957 6.793 6.793 0 0 1-6.891-6.957z\",\n    transform: \"translate(-.352 13.184)\",\n    style: {\n      fill: \"#636780\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpIcon1);\nexport default __webpack_public_path__ + \"static/media/HelpIcon1.66c8c791.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettingsIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Component 37 \\\\u2013 6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    \"data-name\": \"Rectangle 18293\",\n    width: 40,\n    height: 40,\n    rx: 20,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Settings 2\",\n    d: \"M20 11.823V8.177c-1.79-.638-2.272-.668-2.522-1.274s.069-.974.882-2.686L15.782 1.64c-1.688.8-2.073 1.137-2.687.883S12.456 1.782 11.823 0H8.177C7.541 1.787 7.511 2.271 6.9 2.522c-.627.261-1-.083-2.686-.883L1.64 4.217c.814 1.713 1.135 2.078.882 2.683S1.788 7.541 0 8.177v3.646c1.783.633 2.271.667 2.523 1.273s-.068.972-.883 2.686l2.577 2.578c1.666-.792 2.058-1.144 2.686-.882.607.252.637.733 1.274 2.522h3.645c.632-1.776.666-2.269 1.281-2.526s.988.083 2.679.885l2.578-2.578c-.812-1.708-1.135-2.077-.882-2.686s.733-.635 2.522-1.272zm-4.062.637a3.3 3.3 0 0 0 .407 2.982l-.9.9a3.288 3.288 0 0 0-2.978-.408 3.309 3.309 0 0 0-1.823 2.4H9.362a3.3 3.3 0 0 0-1.819-2.4 3.307 3.307 0 0 0-2.983.407l-.9-.9a3.3 3.3 0 0 0 .406-2.983 3.307 3.307 0 0 0-2.4-1.818V9.362a3.3 3.3 0 0 0 2.4-1.82 3.3 3.3 0 0 0-.407-2.983l.9-.9a3.3 3.3 0 0 0 2.983.407 3.3 3.3 0 0 0 1.819-2.4h1.279a3.3 3.3 0 0 0 1.82 2.4 3.308 3.308 0 0 0 2.983-.407l.9.9a3.307 3.307 0 0 0-.407 2.983 3.3 3.3 0 0 0 2.4 1.819v1.279a3.3 3.3 0 0 0-2.4 1.819zM10 7.5A2.5 2.5 0 1 1 7.5 10 2.5 2.5 0 0 1 10 7.5zm0-1.667A4.167 4.167 0 1 0 14.167 10 4.166 4.166 0 0 0 10 5.833z\",\n    transform: \"translate(10 10)\",\n    style: {\n      fill: \"#696c80\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettingsIcon);\nexport default __webpack_public_path__ + \"static/media/SettingsIcon.5b7ed28d.svg\";\nexport { ForwardRef as ReactComponent };","import { CustomTooltip } from 'components';\nimport React, { ReactNode } from 'react';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { Box, styled } from '@material-ui/core';\n\ninterface Props {\n  text: string;\n  children: ReactNode;\n}\n\nfunction InfoTooltip({ text, children }: Props) {\n  if (!text) {\n    return null;\n  }\n  return (\n    <StyledContainer>\n      {children}\n      <CustomTooltip title={text} placement='right'>\n        <HelpOutlineIcon style={{ width: 15 }} />\n      </CustomTooltip>\n    </StyledContainer>\n  );\n}\n\nexport default InfoTooltip;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n","import React, { useState } from 'react';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { Box } from '@material-ui/core';\nimport { Price, Trade } from '@uniswap/sdk';\nimport { Field } from 'state/twap/actions';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n  executionPrice?: Price;\n  title?: string;\n  customText?: string;\n}\n\nfunction PriceIndication({ executionPrice, title, customText }: Props) {\n  const [mainPrice, setMainPrice] = useState(false);\n  const { currencies } = useDerivedTwapInfo();\n  const { t } = useTranslation();\n\n  return (\n    <Box className='swapPrice'>\n      {title ? <small>{title}:</small> : <small></small>}\n      {customText ? (\n        <small>{customText}</small>\n      ) : (\n        <>\n          <small>\n            1{' '}\n            {\n              (mainPrice ? currencies[Field.INPUT] : currencies[Field.OUTPUT])\n                ?.symbol\n            }{' '}\n            ={' '}\n            {executionPrice ? (\n              <>\n                {(mainPrice\n                  ? executionPrice\n                  : executionPrice.invert()\n                ).toSignificant(6)}{' '}\n                {\n                  (mainPrice\n                    ? currencies[Field.OUTPUT]\n                    : currencies[Field.INPUT]\n                  )?.symbol\n                }{' '}\n              </>\n            ) : (\n              'Market price '\n            )}\n            <PriceExchangeIcon\n              onClick={() => {\n                setMainPrice(!mainPrice);\n              }}\n            />\n          </small>\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default PriceIndication;\n","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Trade } from '@uniswap/sdk';\nimport { NumericalInput, ToggleSwitch } from 'components';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Field, setAllowLimitPrice, setPrice } from 'state/twap/actions';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { togglePriceAmount } from 'state/twap/utils';\nimport InfoTooltip from './InfoTooltip';\nimport PriceIndication from './PriceIndication';\n\ninterface Props {\n  trade?: Trade;\n}\n\nfunction LimitPriceInput({ trade }: Props) {\n  const {\n    calculatedPrice,\n    calculatedPriceInPriceFormat,\n  } = useDerivedTwapInfo();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n\n  const dispatch = useDispatch();\n\n  const onChange = (value: string) => {\n    dispatch(setPrice(value));\n  };\n\n  const onToggle = () => dispatch(setAllowLimitPrice(!allowLimitPrice));\n\n  const value = allowLimitPrice ? calculatedPrice : '';\n\n  return (\n    <StyledContainer>\n      <StyledCard className={`swapBox bg-secondary2`}>\n        <StyledPrice>\n          <ToggleSwitch toggled={!!allowLimitPrice} onToggle={onToggle} />\n          <InfoTooltip text='Some text'>\n            <Typography>Limit Price</Typography>\n          </InfoTooltip>\n        </StyledPrice>\n        <NumericalInput\n          disabled={!allowLimitPrice}\n          value={value || ''}\n          align='right'\n          placeholder={allowLimitPrice ? '0.00' : 'None'}\n          onUserInput={(val) => {\n            onChange(val);\n          }}\n        />\n      </StyledCard>\n\n      {trade && (\n        <PriceIndication\n          executionPrice={\n            allowLimitPrice ? calculatedPriceInPriceFormat : undefined\n          }\n        />\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default LimitPriceInput;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n});\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  '& .styledInput': {\n    flex: 1,\n  },\n});\n\nconst StyledPrice = styled(Box)({\n  marginRight: 10,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 15,\n});\n","import {\n  Box,\n  duration,\n  IconButton,\n  MenuItem,\n  Select,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { NumericalInput } from 'components';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { TimeSelectFormat, TwapTimeSelect } from 'state/twap/reducer';\nimport InfoTooltip from './InfoTooltip';\nimport {\n  getFormatTypeFromMilliseconds,\n  millisecondsToTime,\n  timeToMilliseconds,\n} from './utils';\n\ninterface Props {\n  selected: TwapTimeSelect;\n  title: string;\n  disabled?: boolean;\n\n  onUpdate: ({\n    type,\n    displayValue,\n    milliseconds,\n  }: {\n    type: TimeSelectFormat;\n    displayValue?: string;\n    milliseconds?: number;\n  }) => void;\n}\n\nfunction TimeSelect({ selected, title, onUpdate, disabled }: Props) {\n  const onChange = (value: string) => {\n    const milliseconds = timeToMilliseconds(selected.type, value) || 0;\n    let displayValue = value;\n\n    if (!milliseconds) {\n      onUpdate({\n        type: selected.type,\n        displayValue,\n        milliseconds,\n      });\n      return;\n    }\n\n    const format = getFormatTypeFromMilliseconds(milliseconds || 0);\n\n    if (format !== selected.type) {\n      displayValue = millisecondsToTime(format, milliseconds) || '';\n      console.log(displayValue, milliseconds);\n    }\n    onUpdate({\n      type: format,\n      displayValue,\n      milliseconds,\n    });\n  };\n\n  const onSelect = (event: any) => {\n    onUpdate({\n      type: event.target.value,\n    });\n  };\n  return (\n    <>\n      <InfoTooltip text='Some text'>\n        <StyledTitle style={{ margin: 0 }}>{title}</StyledTitle>\n      </InfoTooltip>\n\n      <StyledRight>\n        <NumericalInput\n          disabled={disabled}\n          value={selected.displayValue || ''}\n          align='right'\n          placeholder='0.0'\n          onUserInput={(val) => {\n            if (val !== '0' && val !== '.') {\n              onChange(val);\n            }\n          }}\n        />\n        <StyledSelect\n          disabled={disabled}\n          value={selected.type}\n          onChange={onSelect}\n          color='primary'\n          style={{\n            opacity: disabled ? 0.7 : 1,\n          }}\n        >\n          <MenuItem value={TimeSelectFormat.DAYS}>Days</MenuItem>\n          <MenuItem value={TimeSelectFormat.HOURS}>Hours</MenuItem>\n          <MenuItem value={TimeSelectFormat.MINUTES}>Minutes</MenuItem>\n        </StyledSelect>\n      </StyledRight>\n    </>\n  );\n}\n\nexport default TimeSelect;\n\nconst StyledSelect = styled(Select)(({ theme }: { theme: Theme }) => ({\n  color: 'white!important',\n  '&:before': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '&:after': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '& svg': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst StyledRight = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  gap: 20,\n  '& .styledInput': {},\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n","import { Box, styled } from '@material-ui/core';\nimport React from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\n\nfunction Duration() {\n  const { onDuration } = useTwapActionHandlers();\n  const duration = useTwapState().duration;\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <TimeSelect onUpdate={onDuration} selected={duration} title='Duration' />\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, IconButton, styled } from '@material-ui/core';\nimport React from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { useDispatch } from 'react-redux';\nimport { setSelfEdit } from 'state/twap/actions';\n\nfunction Duration() {\n  const { onInterval } = useTwapActionHandlers();\n  const interval = useTwapState().interval;\n  const selfEdit = useTwapState().selfEdit;\n\n  const dispatch = useDispatch();\n\n  const onEdit = () => {\n    dispatch(setSelfEdit(true));\n  };\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <TimeSelect\n        disabled={!selfEdit}\n        onUpdate={onInterval}\n        selected={interval}\n        title='Trade Interval'\n      />\n      {!selfEdit && (\n        <IconButton onClick={onEdit}>\n          <EditOutlinedIcon color='primary' />\n        </IconButton>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingRight: 20,\n});\n","import { Avatar, Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Currency } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput } from 'components';\nimport React, { useEffect, useState } from 'react';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { isValidChunkSize } from 'state/twap/utils';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport InfoTooltip from './InfoTooltip';\n\ninterface Props {\n  currency: Currency | undefined;\n}\n\nfunction ChunkSize({ currency }: Props) {\n  const { totalChunks, chunkSize, inInput } = useTwapState();\n  const { onChunkSize } = useTwapActionHandlers();\n  const usdPrice = Number(useUSDCPrice(currency)?.toSignificant() ?? 0);\n\n  const onChange = (value: string) => {\n    onChunkSize(value);\n  };\n\n  useEffect(() => {\n    if (inInput && !isValidChunkSize(inInput, chunkSize)) {\n      onChunkSize(inInput?.originalValue);\n    }\n  }, [inInput, chunkSize, onChunkSize]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <InfoTooltip text='Some text'>\n          <StyledTitle style={{ margin: 0 }}>Trade Size</StyledTitle>\n        </InfoTooltip>\n        <NumericalInput\n          value={chunkSize || ''}\n          align='right'\n          placeholder='0.00'\n          onUserInput={(val) => {\n            onChange(val);\n          }}\n        />\n        {currency && (\n          <StyledCurrency style={{ marginBottom: 0 }}>\n            <CurrencyLogo currency={currency} size={'24px'} />\n            {currency?.symbol}\n          </StyledCurrency>\n        )}\n      </StyledTop>\n      <StyledBottom>\n        <small className='text-secondary'>\n          Total trades: {totalChunks?.toString() ?? 0}\n        </small>\n        <small className='text-secondary'>\n          ${chunkSize ? (usdPrice * Number(chunkSize)).toLocaleString() : '0'}\n        </small>\n      </StyledBottom>\n    </StyledContainer>\n  );\n}\n\nexport default ChunkSize;\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n});\n\nconst StyledBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 10,\n});\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n\nconst StyledCurrency = styled(Typography)({\n  marginLeft: 20,\n  display: 'flex',\n  gap: 10,\n});\n","import { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport { setError } from 'state/twap/actions';\nimport { useTwapState } from 'state/twap/hooks';\nimport React from 'react';\n\nfunction ErrorNotification() {\n  const { error } = useTwapState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setTimeout(() => {\n      dispatch(setError(undefined));\n    }, 400);\n  };\n\n  return (\n    <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity='error' variant='filled'>\n        {error}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport default ErrorNotification;\n","import { Box, Button, LinearProgress, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport React from 'react';\nimport { TransactionDataType, TxStatus } from '../types';\nimport { styled } from '@material-ui/styles';\nimport { useCurrency } from 'hooks/Tokens';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { Currency } from '@uniswap/sdk';\ntype TransactionProps = {\n  tx: TransactionDataType;\n  status: TxStatus;\n};\n\nconst OrderTx = ({ tx, status }: TransactionProps) => {\n  const {\n    fromTokenId,\n    toTokenId,\n    fromTokenAmount,\n    toTokenAmount,\n    currencyPrice,\n    executionPrice,\n    minimumReceived,\n    totalChunks,\n    finishedChunks,\n  } = tx;\n\n  const fromCurrency = useCurrency(fromTokenId);\n  const toCurrency = useCurrency(toTokenId);\n\n  const showCancel = status === TxStatus.OPEN;\n\n  const percent = (finishedChunks / totalChunks) * 100;\n\n  return (\n    <StyledOrder className='bg-secondary2'>\n      <StyledOrderTop>\n        <StyledOrderTopCurrency>\n          <Token currency={fromCurrency} />\n\n          <ArrowRightAltIcon />\n          <Token currency={toCurrency} />\n        </StyledOrderTopCurrency>\n        {showCancel && <Button>Cancel</Button>}\n      </StyledOrderTop>\n      <StyledOrderText>\n        Sell {fromTokenAmount} {fromCurrency?.symbol} for {toTokenAmount}{' '}\n        {toCurrency?.symbol}\n      </StyledOrderText>\n      <StyledOrderRows>\n        <TxRow\n          name='Current price'\n          text={`1 ${fromCurrency?.symbol} = ${currencyPrice} ${toCurrency?.symbol}`}\n        />\n        <TxRow\n          name='Limit price'\n          text={`1 ${fromCurrency?.symbol} = ${executionPrice} ${toCurrency?.symbol}`}\n        />\n        <TxRow\n          name='Minimum Received'\n          text={` 1 ${fromCurrency?.symbol} = ${minimumReceived} ${toCurrency?.symbol}`}\n        />\n        <TxRow\n          name='Expiry Date'\n          text={`1 ${fromCurrency?.symbol} = ${minimumReceived} ${toCurrency?.symbol}`}\n        />\n      </StyledOrderRows>\n      <StyledProgressContainer>\n        <StyledProgressLeft>\n          <StyledLinearProgress\n            variant='determinate'\n            value={percent}\n            color='primary'\n          />\n          <StyledProgressNumbers>\n            <Typography>0%</Typography>\n            <Typography>100%</Typography>\n          </StyledProgressNumbers>\n        </StyledProgressLeft>\n\n        <Typography>\n          {finishedChunks}/{totalChunks} Matic\n        </Typography>\n      </StyledProgressContainer>\n    </StyledOrder>\n  );\n};\n\nexport default OrderTx;\n\nconst StyledProgressNumbers = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst StyledLinearProgress = styled(LinearProgress)({\n  height: 10,\n  borderRadius: 10,\n  width: '100%',\n});\n\nconst StyledProgressLeft = styled(Box)({\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledProgressContainer = styled(Box)({\n  marginTop: 20,\n  display: 'flex',\n  alignItems: 'flex-start',\n  gap: 30,\n  '& p': {\n    fontSize: 14,\n  },\n});\n\ntype TokenProps = {\n  currency?: Currency | null;\n};\n\nconst Token = ({ currency }: TokenProps) => {\n  if (!currency) {\n    return null;\n  }\n  return (\n    <StyledToken>\n      {currency && <CurrencyLogo currency={currency} size={'28px'} />}\n      <Typography>{currency?.symbol}</Typography>\n    </StyledToken>\n  );\n};\n\nconst StyledToken = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n  '& p': {\n    fontSize: 15,\n  },\n});\n\ntype TxRowProps = {\n  text: string;\n  name: string;\n};\n\nconst TxRow = ({ text, name }: TxRowProps) => {\n  return (\n    <StyledOrderRow>\n      <small>{name}:</small>\n      <Typography>{text}</Typography>\n    </StyledOrderRow>\n  );\n};\n\nconst StyledOrder = styled(Box)({\n  padding: 20,\n  borderRadius: 10,\n});\n\nconst StyledOrderRows = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 5,\n  paddingTop: 10,\n});\n\nconst StyledOrderRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 14,\n  },\n});\n\nconst StyledOrderText = styled(Typography)({});\n\nconst StyledOrderTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  height: 40,\n  marginBottom: 15,\n});\n\nconst StyledOrderTopCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n","import React, { useState } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { styled } from '@material-ui/styles';\nimport { createTxData, emptyOrdersText, mapTxData } from '../utils';\nimport OrderTx from './OrderTx';\nimport { TxStatus } from '../types';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { IconButton } from '@material-ui/core';\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\nconst data = createTxData();\nconst mappedData = mapTxData(data);\n\nexport default function Orders() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (_event: any, newValue: number) => {\n    setValue(newValue);\n  };\n  const length = Object.keys(mappedData).length;\n\n  return (\n    <StyledContainer>\n      <StyledTabsContainer>\n        <Tabs\n          className='tabs'\n          value={value}\n          onChange={handleChange}\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n        >\n          {Object.keys(mappedData).map((key, index) => {\n            return (\n              <StyledTab\n                style={{\n                  width: `calc(100% / ${length})`,\n                }}\n                label={key}\n                {...a11yProps(index)}\n                key={index}\n              />\n            );\n          })}\n        </Tabs>\n        <IconButton className='refresh' color='secondary'>\n          <CachedIcon />\n        </IconButton>\n      </StyledTabsContainer>\n      {Object.keys(mappedData).map((key, index) => {\n        const isEmpty = !mappedData[key].length;\n        return (\n          <StyledTabPanel value={value} index={index} key={index}>\n            {isEmpty ? (\n              <StyledEmptyListText>\n                {emptyOrdersText[key as TxStatus]}\n              </StyledEmptyListText>\n            ) : (\n              <StyledOrdersList>\n                {mappedData[key].map((tx, index) => {\n                  return (\n                    <OrderTx tx={tx} key={index} status={key as TxStatus} />\n                  );\n                })}\n              </StyledOrdersList>\n            )}\n          </StyledTabPanel>\n        );\n      })}\n    </StyledContainer>\n  );\n}\n\nconst StyledContainer = styled(Box)({\n  width: '100%',\n  marginTop: 20,\n  borderRadius: 10,\n  paddingTop: 10,\n});\n\nconst StyledTabsContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& .tabs': {\n    flex: 1,\n    paddingRight: 50,\n  },\n});\n\nconst StyledTabPanel = styled(TabPanel)({\n  paddingTop: 20,\n});\n\nconst StyledEmptyListText = styled(Typography)({\n  width: '100%',\n  textAlign: 'center',\n  marginTop: 20,\n});\n\nconst StyledOrdersList = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 30,\n  padding: 0,\n  overflow: 'auto',\n  maxHeight: 500,\n});\n\nconst StyledTab = styled(Tab)({\n  minWidth: 'unset',\n  span: {\n    fontSize: 20,\n  },\n});\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Contract } from '@ethersproject/contracts';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport {\n  JSBI,\n  Percent,\n  Router,\n  SwapParameters,\n  Trade,\n  TradeType,\n} from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { GlobalConst } from 'constants/index';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport {\n  calculateGasMargin,\n  isZero,\n  isAddress,\n  shortenAddress,\n  formatTokenAmount,\n} from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { useRouterContract } from 'hooks/useContract';\nimport useENS from 'hooks/useENS';\nimport { Version } from 'hooks/useToggledVersion';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract;\n  parameters: SwapParameters;\n}\n\ninterface SuccessfulCall {\n  call: SwapCall;\n  gasEstimate: BigNumber;\n}\n\ninterface FailedCall {\n  call: SwapCall;\n  error: Error;\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall;\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useTwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = GlobalConst.utils.INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React();\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\n  const recipient =\n    recipientAddressOrName === null ? account : recipientAddress;\n  const deadline = useTransactionDeadline();\n  const contract = useRouterContract();\n\n  return useMemo(() => {\n    const tradeVersion = Version.v2;\n    if (\n      !trade ||\n      !recipient ||\n      !library ||\n      !account ||\n      !tradeVersion ||\n      !chainId\n    )\n      return [];\n\n    if (!contract) {\n      return [];\n    }\n\n    const swapMethods = [];\n\n    switch (tradeVersion) {\n      case Version.v2:\n        swapMethods.push(\n          Router.swapCallParameters(trade, {\n            feeOnTransfer: false,\n            allowedSlippage: new Percent(\n              JSBI.BigInt(allowedSlippage),\n              GlobalConst.utils.BIPS_BASE,\n            ),\n            recipient,\n            ttl: deadline\n              ? deadline.toNumber()\n              : GlobalConst.utils.DEFAULT_DEADLINE_FROM_NOW,\n          }),\n        );\n\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\n          swapMethods.push(\n            Router.swapCallParameters(trade, {\n              feeOnTransfer: true,\n              allowedSlippage: new Percent(\n                JSBI.BigInt(allowedSlippage),\n                GlobalConst.utils.BIPS_BASE,\n              ),\n              recipient,\n              ttl: deadline\n                ? deadline.toNumber()\n                : GlobalConst.utils.DEFAULT_DEADLINE_FROM_NOW,\n            }),\n          );\n        }\n        break;\n    }\n    return swapMethods.map((parameters) => ({ parameters, contract }));\n  }, [\n    account,\n    allowedSlippage,\n    chainId,\n    deadline,\n    library,\n    recipient,\n    trade,\n    contract,\n  ]);\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useTwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = GlobalConst.utils.INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): {\n  state: SwapCallbackState;\n  callback:\n    | null\n    | (() => Promise<{ response: TransactionResponse; summary: string }>);\n  error: string | null;\n} {\n  const { account, chainId, library } = useActiveWeb3React();\n\n  const swapCalls = useTwapCallArguments(\n    trade,\n    allowedSlippage,\n    recipientAddressOrName,\n  );\n\n  const addTransaction = useTransactionAdder();\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\n  const recipient =\n    recipientAddressOrName === null ? account : recipientAddress;\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return {\n        state: SwapCallbackState.INVALID,\n        callback: null,\n        error: 'Missing dependencies',\n      };\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return {\n          state: SwapCallbackState.INVALID,\n          callback: null,\n          error: 'Invalid recipient',\n        };\n      } else {\n        return {\n          state: SwapCallbackState.LOADING,\n          callback: null,\n          error: null,\n        };\n      }\n    }\n\n    const tradeVersion = Version.v2;\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<{\n        response: TransactionResponse;\n        summary: string;\n      }> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call;\n            const options = !value || isZero(value) ? {} : { value };\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate: gasEstimate.add(100000),\n                };\n              })\n              .catch((gasError) => {\n                console.debug(\n                  'Gas estimate failed, trying eth_call to extract error',\n                  call,\n                );\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.debug(\n                      'Unexpected successful call after failed estimate gas',\n                      call,\n                      gasError,\n                      result,\n                    );\n                    return {\n                      call,\n                      error: new Error(\n                        'Unexpected issue with estimating the gas. Please try again.',\n                      ),\n                    };\n                  })\n                  .catch((callError) => {\n                    console.debug('Call threw error', call, callError);\n                    let errorMessage: string;\n                    switch (callError.reason) {\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                        errorMessage =\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.';\n                        break;\n                      default:\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`;\n                    }\n                    return { call, error: new Error(errorMessage) };\n                  });\n              });\n          }),\n        );\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el &&\n            (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        );\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter(\n            (call): call is FailedCall => 'error' in call,\n          );\n          if (errorCalls.length > 0)\n            throw errorCalls[errorCalls.length - 1].error;\n          throw new Error(\n            'Unexpected error. Please contact support: none of the calls threw an error',\n          );\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation;\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value)\n            ? { value, from: account }\n            : { from: account }),\n        })\n          .then((response: TransactionResponse) => {\n            const inputSymbol = trade.inputAmount.currency.symbol;\n            const outputSymbol = trade.outputAmount.currency.symbol;\n            const inputAmount = formatTokenAmount(trade.inputAmount);\n            const outputAmount = formatTokenAmount(trade.outputAmount);\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`;\n\n            const withVersion =\n              tradeVersion === Version.v2\n                ? withRecipient\n                : `${withRecipient} on ${(tradeVersion as any).toUpperCase()}`;\n\n            addTransaction(response, {\n              summary: withVersion,\n            });\n\n            return { response, summary: withVersion };\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.');\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value);\n              throw new Error(`Swap failed: ${error.message}`);\n            }\n          });\n      },\n      error: null,\n    };\n  }, [\n    trade,\n    library,\n    account,\n    chainId,\n    recipient,\n    recipientAddressOrName,\n    swapCalls,\n    addTransaction,\n  ]);\n}\n","import { Box, styled, Tooltip, Typography } from '@material-ui/core';\nimport { CurrencyAmount } from '@uniswap/sdk';\nimport { CustomTooltip } from 'components';\nimport moment, { Duration } from 'moment';\nimport React from 'react';\nimport { useTwapState } from 'state/twap/hooks';\nimport { formatTokenAmount } from 'utils';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nconst calculateInterval = (value?: number) => {\n  if (!value) {\n    return '0';\n  }\n  const time = moment.duration(value);\n  const days = time.days();\n  const hours = time.hours();\n  const minutes = time.minutes();\n\n  let str = '';\n\n  if (days) {\n    str += `${days} Days `;\n  }\n  if (hours) {\n    str += `${hours} Hours `;\n  }\n  if (minutes) {\n    str += `${minutes} Minutes`;\n  }\n  return str;\n};\n\ninterface Props {\n  outputAmount: CurrencyAmount;\n  limitOrderAllowed?: boolean;\n}\n\nfunction TxDetails({ outputAmount, limitOrderAllowed }: Props) {\n  const { duration, totalChunks, interval } = useTwapState();\n\n  return (\n    <StyledDetails className='swapBox bg-secondary2'>\n      <Row\n        title='Expiration date:'\n        value={moment()\n          .add(duration.milliseconds, 'milliseconds')\n          .format('DD/MM/YYYY HH:mm')}\n        tooltip='some text'\n      />\n      <Row\n        title='Minimum Received Per Trade:'\n        value={limitOrderAllowed ? formatTokenAmount(outputAmount) : 'None'}\n        tooltip='some text'\n      />\n\n      <Row title='Total Trades:' value={totalChunks || 0} tooltip='some text' />\n      <Row\n        title='Trade Interval:'\n        value={calculateInterval(interval.milliseconds)}\n        tooltip='some text'\n      />\n    </StyledDetails>\n  );\n}\n\nexport default TxDetails;\n\nconst StyledDetails = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n  '& p': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: 10,\n    fontSize: 14,\n    '& span': {\n      fontWeight: 600,\n    },\n  },\n});\n\ntype RowProps = {\n  title: string;\n  value: string | number;\n  tooltip?: string;\n};\n\nconst Row = ({ title, value, tooltip }: RowProps) => {\n  return (\n    <StyledRow>\n      {tooltip ? (\n        <CustomTooltip title={tooltip} placement='right'>\n          <Typography>\n            {title} <HelpOutlineIcon style={{ width: 15 }} />\n          </Typography>\n        </CustomTooltip>\n      ) : (\n        <Typography>{title}</Typography>\n      )}\n      <Typography>\n        <span>{value}</span>\n      </Typography>\n    </StyledRow>\n  );\n};\n\nconst StyledRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport React from 'react';\n\nfunction Disclaimer() {\n  return (\n    <StyledContainer className='swapBox bg-secondary2'>\n      <Typography variant='h2'>Real Execution Price:</Typography>\n      <Typography>\n        - Your gas fees are paid for by the spread between your specified Price\n        and the Real Execution Price - Gas fees are volatile and thus the exact\n        market price at which your order will execute is unpredictable - It\n        might take much longer than you expected, to reach the price that fills\n        your order + fees Fee on Transfer Tokens: - Fee on transfer tokens\n        should not be used with this system (use at own risk) Expiry Dates: -\n        Your limit order has an expiry date, after which it might not be\n        executed any more\n      </Typography>\n    </StyledContainer>\n  );\n}\n\nexport default Disclaimer;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 15,\n  '& h2': {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n});\n","import { CurrencyAmount, Trade } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box, Button, styled, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { getTokenValue } from 'state/twap/utils';\nimport TxDetails from './TxDetails';\nimport Disclaimer from './Disclaimer';\nimport PriceIndication from '../PriceIndication';\n\nconst calculatedOutputAmount = (\n  trade: Trade,\n  typedPriceOutputValue?: string,\n) => {\n  let result;\n  if (typedPriceOutputValue) {\n    result = tryParseAmount(typedPriceOutputValue, trade.outputAmount.currency);\n  }\n  return result || trade.outputAmount;\n};\n\ninterface ModalContentProps {\n  trade: Trade;\n  allowedSlippage: number;\n  showAcceptChanges: boolean;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n}\n\nconst ModalContent: React.FC<ModalContentProps> = ({ trade, onConfirm }) => {\n  const { t } = useTranslation();\n  const {\n    typedPriceOutputValue,\n    calculatedPriceInPriceFormat,\n  } = useDerivedTwapInfo();\n  const { allowLimitPrice } = useTwapState();\n\n  const inputAmount = trade.inputAmount;\n  const outputAmount = useMemo(\n    () => calculatedOutputAmount(trade, typedPriceOutputValue),\n    [trade, typedPriceOutputValue],\n  );\n\n  return (\n    <StyledContainer>\n      <StyledCards>\n        <Card currencyAmount={inputAmount} title='From' />\n        <Card currencyAmount={outputAmount} title='To' />\n      </StyledCards>\n      {allowLimitPrice ? (\n        <PriceIndication\n          executionPrice={calculatedPriceInPriceFormat}\n          title='Limit Price'\n        />\n      ) : (\n        <PriceIndication\n          executionPrice={undefined}\n          title='Limit Price'\n          customText='None'\n        />\n      )}\n      <TxDetails\n        outputAmount={outputAmount}\n        limitOrderAllowed={allowLimitPrice}\n      />\n      <Disclaimer />\n      <Box className='transactionText'>\n        <Button onClick={onConfirm} className='swapButton'>\n          Confirm Order\n        </Button>\n      </Box>\n    </StyledContainer>\n  );\n};\n\nexport default ModalContent;\n\nconst StyledContainer = styled(Box)({});\n\nconst StyledCards = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\ntype CardProps = {\n  currencyAmount: CurrencyAmount;\n  title: string;\n};\n\nconst Card = ({ currencyAmount, title }: CardProps) => {\n  const usdPrice = useUSDCPrice(currencyAmount.currency);\n\n  return (\n    <StyledCard className='swapBox bg-secondary2'>\n      <StyledCardTop>\n        <Typography>{title}</Typography>\n        <Typography>\n          ~$\n          {usdPrice && getTokenValue(usdPrice, currencyAmount)}\n        </Typography>\n      </StyledCardTop>\n      <StyledCardBottom>\n        <StyledCurrency>\n          <CurrencyLogo currency={currencyAmount.currency} size={'24px'} />\n          <Typography>{currencyAmount.currency?.symbol}</Typography>\n        </StyledCurrency>\n        <Typography>{formatTokenAmount(currencyAmount)}</Typography>\n      </StyledCardBottom>\n    </StyledCard>\n  );\n};\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCardBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 18,\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n\nconst StyledCardTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  width: '100%',\n});\n","import { currencyEquals, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  TransactionConfirmationModal,\n  TransactionErrorContent,\n  ConfirmationModalContent,\n} from 'components';\nimport { formatTokenAmount } from 'utils';\nimport 'components/styles/ConfirmSwapModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport ModalContent from './ModalContent';\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(\n      tradeA.outputAmount.currency,\n      tradeB.outputAmount.currency,\n    ) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  );\n}\n\ninterface ConfirmTwapModalProps {\n  isOpen: boolean;\n  trade: Trade | undefined;\n  originalTrade: Trade | undefined;\n  attemptingTxn: boolean;\n  txPending?: boolean;\n  txHash: string | undefined;\n  recipient: string | null;\n  allowedSlippage: number;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n  swapErrorMessage: string | undefined;\n  onDismiss: () => void;\n}\n\nconst ConfirmTwapModal: React.FC<ConfirmTwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  txPending,\n}) => {\n  const { t } = useTranslation();\n  const showAcceptChanges = useMemo(\n    () =>\n      Boolean(\n        trade &&\n          originalTrade &&\n          tradeMeaningfullyDiffers(trade, originalTrade),\n      ),\n    [originalTrade, trade],\n  );\n\n  const modalContent = useCallback(() => {\n    return trade ? (\n      <ModalContent\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        onConfirm={onConfirm}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null;\n  }, [allowedSlippage, onAcceptChanges, showAcceptChanges, trade, onConfirm]);\n\n  // text to show while loading\n  const pendingText = t('swappingFor', {\n    amount1: formatTokenAmount(trade?.inputAmount),\n    symbol1: trade?.inputAmount?.currency?.symbol,\n    amount2: formatTokenAmount(trade?.outputAmount),\n    symbol2: trade?.outputAmount?.currency?.symbol,\n  });\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <ConfirmationModalContent\n          title={t('confirmTx')}\n          onDismiss={onDismiss}\n          content={modalContent}\n        />\n      ),\n    [t, onDismiss, modalContent, swapErrorMessage],\n  );\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      txPending={txPending}\n      content={confirmationContent}\n      pendingText={pendingText}\n      modalContent={txPending ? t('submittedTxSwap') : t('swapSuccess')}\n    />\n  );\n};\n\nexport default ConfirmTwapModal;\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { Currency, CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk';\nimport ReactGA from 'react-ga';\nimport { ArrowDown } from 'react-feather';\nimport { Box, Button, CircularProgress, styled } from '@material-ui/core';\nimport { useWalletModalToggle } from 'state/application/hooks';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport {\n  useExpertModeManager,\n  useUserSlippageTolerance,\n} from 'state/user/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { CurrencyInput, AdvancedSwapDetails, AddressInput } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport {\n  ApprovalState,\n  useApproveCallbackFromTrade,\n} from 'hooks/useApproveCallback';\nimport { useTransactionFinalizer } from 'state/transactions/hooks';\nimport useENSAddress from 'hooks/useENSAddress';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport useToggledVersion, { Version } from 'hooks/useToggledVersion';\nimport {\n  addMaticToMetamask,\n  isSupportedNetwork,\n  confirmPriceImpactWithoutFee,\n  maxAmountSpend,\n} from 'utils';\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { ReactComponent as ExchangeIcon } from 'assets/images/ExchangeIcon.svg';\nimport 'components/styles/Swap.scss';\nimport { useTranslation } from 'react-i18next';\nimport LimitPriceInput from './LimitPriceInput';\nimport Duration from './Duration';\nimport Interval from './Interval';\nimport ChunkSize from './ChunkSize';\nimport { BigNumber } from 'ethers';\nimport ErrorNotification from './ErrorNotification';\nimport Orders from './Orders/Orders';\nimport { useTwapCallback } from './useTwapCallback';\nimport ConfirmTwapModal from './ConfirmTwapModal';\nimport PriceIndication from './PriceIndication';\n\nconst Twap: React.FC<{\n  currency0?: Currency;\n  currency1?: Currency;\n  currencyBgClass?: string;\n}> = ({ currency0, currency1, currencyBgClass }) => {\n  const { t } = useTranslation();\n  const { account } = useActiveWeb3React();\n  const { independentField, typedValue, recipient } = useTwapState();\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    typedPriceOutputValue,\n  } = useDerivedTwapInfo();\n\n  const toggledVersion = useToggledVersion();\n  const finalizedTransaction = useTransactionFinalizer();\n  const [isExpertMode] = useExpertModeManager();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue,\n  );\n  const allTokens = useAllTokens();\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n  const tradesByVersion = {\n    [Version.v1]: v1Trade,\n    [Version.v2]: v2Trade,\n  };\n\n  const trade = showWrap ? undefined : tradesByVersion[toggledVersion];\n\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n    onInInputChange,\n  } = useTwapActionHandlers();\n\n  const { address: recipientAddress } = useENSAddress(recipient);\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const [approving, setApproving] = useState(false);\n  const [approval, approveCallback] = useApproveCallbackFromTrade(\n    trade,\n    allowedSlippage,\n  );\n\n  console.log({ approval });\n\n  const dependentField: Field =\n    independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const parsedAmounts = useMemo(() => {\n    return showWrap\n      ? {\n          [Field.INPUT]: parsedAmount,\n          [Field.OUTPUT]: parsedAmount,\n        }\n      : {\n          [Field.INPUT]:\n            independentField === Field.INPUT\n              ? parsedAmount\n              : trade?.inputAmount,\n          [Field.OUTPUT]:\n            independentField === Field.OUTPUT\n              ? parsedAmount\n              : trade?.outputAmount,\n        };\n  }, [parsedAmount, independentField, trade, showWrap]);\n\n  const formattedAmounts = useMemo(() => {\n    return {\n      [independentField]: typedValue,\n      [dependentField]: showWrap\n        ? parsedAmounts[independentField]?.toExact() ?? ''\n        : parsedAmounts[dependentField]?.toExact() ?? '',\n    };\n  }, [independentField, typedValue, dependentField, showWrap, parsedAmounts]);\n\n  const route = trade?.route;\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] &&\n      currencies[Field.OUTPUT] &&\n      parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  );\n  const noRoute = !route;\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n  const { ethereum } = window as any;\n  const [mainPrice, setMainPrice] = useState(true);\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n  const isValid = !swapInputError;\n\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode);\n\n  const toggleWalletModal = useWalletModalToggle();\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const connectWallet = () => {\n    if (ethereum && !isSupportedNetwork(ethereum)) {\n      addMaticToMetamask();\n    } else {\n      toggleWalletModal();\n    }\n  };\n\n  const handleCurrencySelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection],\n  );\n\n  const handleOtherCurrencySelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection],\n  );\n\n  const { callback: twapCallback, error: twapCallbackError } = useTwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n  );\n\n  const swapButtonText = useMemo(() => {\n    if (account) {\n      if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n        return t('selectToken');\n      } else if (\n        formattedAmounts[Field.INPUT] === '' &&\n        formattedAmounts[Field.OUTPUT] === ''\n      ) {\n        return t('enterAmount');\n      } else if (showWrap) {\n        return wrapType === WrapType.WRAP\n          ? t('wrap')\n          : wrapType === WrapType.UNWRAP\n          ? t('unWrap')\n          : '';\n      } else if (noRoute && userHasSpecifiedInputOutput) {\n        return t('insufficientLiquidityTrade');\n      } else {\n        return swapInputError ?? 'Place order';\n      }\n    } else {\n      return ethereum && !isSupportedNetwork(ethereum)\n        ? t('switchPolygon')\n        : t('connectWallet');\n    }\n  }, [\n    t,\n    formattedAmounts,\n    currencies,\n    account,\n    ethereum,\n    noRoute,\n    userHasSpecifiedInputOutput,\n    showWrap,\n    wrapType,\n    swapInputError,\n  ]);\n\n  const twapButtonDisabled = useMemo(() => {\n    if (account) {\n      if (showWrap) {\n        return Boolean(wrapInputError);\n      } else if (noRoute && userHasSpecifiedInputOutput) {\n        return true;\n      } else if (showApproveFlow) {\n        return (\n          !isValid ||\n          approval !== ApprovalState.APPROVED ||\n          (priceImpactSeverity > 3 && !isExpertMode)\n        );\n      } else {\n        return (\n          !isValid ||\n          (priceImpactSeverity > 3 && !isExpertMode) ||\n          !!twapCallbackError\n        );\n      }\n    } else {\n      return false;\n    }\n  }, [\n    account,\n    showWrap,\n    wrapInputError,\n    noRoute,\n    userHasSpecifiedInputOutput,\n    showApproveFlow,\n    approval,\n    priceImpactSeverity,\n    isValid,\n    twapCallbackError,\n    isExpertMode,\n  ]);\n\n  const [\n    {\n      showConfirm,\n      txPending,\n      tradeToConfirm,\n      swapErrorMessage,\n      attemptingTxn,\n      txHash,\n    },\n    setTwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    txPending?: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    txPending: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value);\n    },\n    [onUserInput],\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value);\n    },\n    [onUserInput],\n  );\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(\n    currencyBalances[Field.INPUT],\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleHalfInput = useCallback(() => {\n    maxAmountInput &&\n      onUserInput(\n        Field.INPUT,\n        (Number(maxAmountInput.toExact()) / 2).toString(),\n      );\n  }, [maxAmountInput, onUserInput]);\n\n  const atMaxAmountInput = Boolean(\n    maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput),\n  );\n\n  const onSwap = () => {\n    if (showWrap && onWrap) {\n      onWrap();\n    } else if (isExpertMode) {\n      handleTwap();\n    } else {\n      setTwapState({\n        tradeToConfirm: trade,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        showConfirm: true,\n        txHash: undefined,\n      });\n    }\n  };\n\n  useEffect(() => {\n    onCurrencySelection(Field.INPUT, Token.ETHER);\n  }, [onCurrencySelection, allTokens]);\n\n  useEffect(() => {\n    if (currency0) {\n      onCurrencySelection(Field.INPUT, currency0);\n    }\n    if (currency1) {\n      onCurrencySelection(Field.OUTPUT, currency1);\n    }\n  }, [onCurrencySelection, currency0, currency1]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setTwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setTwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleTwap = useCallback(() => {\n    if (\n      priceImpactWithoutFee &&\n      !confirmPriceImpactWithoutFee(priceImpactWithoutFee)\n    ) {\n      return;\n    }\n    if (!twapCallback) {\n      return;\n    }\n    setTwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined,\n    });\n    twapCallback()\n      .then(async ({ response, summary }) => {\n        setTwapState({\n          attemptingTxn: false,\n          txPending: true,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: undefined,\n          txHash: response.hash,\n        });\n\n        try {\n          const receipt = await response.wait();\n          finalizedTransaction(receipt, {\n            summary,\n          });\n          setTwapState({\n            attemptingTxn: false,\n            txPending: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: undefined,\n            txHash: response.hash,\n          });\n          ReactGA.event({\n            category: 'Swap',\n            action:\n              recipient === null\n                ? 'Swap w/o Send'\n                : (recipientAddress ?? recipient) === account\n                ? 'Swap w/o Send + recipient'\n                : 'Swap w/ Send',\n            label: [\n              trade?.inputAmount?.currency?.symbol,\n              trade?.outputAmount?.currency?.symbol,\n            ].join('/'),\n          });\n        } catch (error) {\n          setTwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: (error as any).message,\n            txHash: undefined,\n          });\n        }\n      })\n      .catch((error) => {\n        setTwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [\n    tradeToConfirm,\n    account,\n    priceImpactWithoutFee,\n    recipient,\n    recipientAddress,\n    showConfirm,\n    twapCallback,\n    finalizedTransaction,\n    trade,\n  ]);\n\n  const inInputAmount = formattedAmounts[Field.INPUT];\n  const inInputCurrency = currencies[Field.INPUT];\n\n  useEffect(() => {\n    onInInputChange(inInputAmount, inInputCurrency);\n  }, [inInputAmount, inInputCurrency, onInInputChange]);\n\n  return (\n    <Box>\n      <ErrorNotification />\n      {showConfirm && (\n        <ConfirmTwapModal\n          isOpen={showConfirm}\n          trade={trade}\n          originalTrade={tradeToConfirm}\n          onAcceptChanges={handleAcceptChanges}\n          attemptingTxn={attemptingTxn}\n          txPending={txPending}\n          txHash={txHash}\n          recipient={recipient}\n          allowedSlippage={allowedSlippage}\n          onConfirm={handleTwap}\n          swapErrorMessage={swapErrorMessage}\n          onDismiss={handleConfirmDismiss}\n        />\n      )}\n      <CurrencyInput\n        title={`${t('from')}:`}\n        id='swap-currency-input'\n        currency={currencies[Field.INPUT]}\n        onHalf={handleHalfInput}\n        onMax={handleMaxInput}\n        showHalfButton={true}\n        showMaxButton={!atMaxAmountInput}\n        otherCurrency={currencies[Field.OUTPUT]}\n        handleCurrencySelect={handleCurrencySelect}\n        amount={formattedAmounts[Field.INPUT]}\n        setAmount={handleTypeInput}\n        bgClass={currencyBgClass}\n      />\n\n      <Box className='exchangeSwap'>\n        <ExchangeIcon onClick={onSwitchTokens} />\n      </Box>\n      <CurrencyInput\n        title={`${t('toEstimate')}:`}\n        id='swap-currency-output'\n        currency={currencies[Field.OUTPUT]}\n        showPrice={Boolean(trade && trade.executionPrice)}\n        showMaxButton={false}\n        otherCurrency={currencies[Field.INPUT]}\n        handleCurrencySelect={handleOtherCurrencySelect}\n        amount={typedPriceOutputValue || formattedAmounts[Field.OUTPUT]}\n        setAmount={handleTypeOutput}\n        bgClass={currencyBgClass}\n        disabled\n      />\n      {trade && trade.executionPrice && (\n        <PriceIndication\n          executionPrice={trade?.executionPrice}\n          title='Current Price'\n        />\n      )}\n      <LimitPriceInput trade={trade} />\n      <Duration />\n      <ChunkSize currency={currencies[Field.INPUT]} />\n      <Interval />\n\n      {!showWrap && isExpertMode && (\n        <Box className='recipientInput'>\n          <Box className='recipientInputHeader'>\n            {recipient !== null ? (\n              <ArrowDown size='16' color='white' />\n            ) : (\n              <Box />\n            )}\n            <Button\n              onClick={() => onChangeRecipient(recipient !== null ? null : '')}\n            >\n              {recipient !== null\n                ? `- ${t('removeSend')}`\n                : `+ ${t('addSendOptional')}`}\n            </Button>\n          </Box>\n          {recipient !== null && (\n            <AddressInput\n              label={t('recipient')}\n              placeholder={t('walletOrENS')}\n              value={recipient}\n              onChange={onChangeRecipient}\n            />\n          )}\n        </Box>\n      )}\n      <Box className='swapButtonWrapper'>\n        {showApproveFlow && (\n          <Box width='48%'>\n            <Button\n              fullWidth\n              disabled={\n                approving ||\n                approval !== ApprovalState.NOT_APPROVED ||\n                approvalSubmitted\n              }\n              onClick={async () => {\n                setApproving(true);\n                try {\n                  await approveCallback();\n                  setApproving(false);\n                } catch (err) {\n                  setApproving(false);\n                }\n              }}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Box className='content'>\n                  {t('approving')} <CircularProgress size={16} />\n                </Box>\n              ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                t('approved')\n              ) : (\n                `${t('approve')} ${currencies[Field.INPUT]?.symbol}`\n              )}\n            </Button>\n          </Box>\n        )}\n        <StyledButtonContainer width={showApproveFlow ? '48%' : '100%'}>\n          <Button\n            fullWidth\n            disabled={twapButtonDisabled as boolean}\n            onClick={account ? onSwap : connectWallet}\n          >\n            {swapButtonText}\n          </Button>\n        </StyledButtonContainer>\n      </Box>\n      <Orders />\n    </Box>\n  );\n};\n\nexport default Twap;\n\nconst StyledButtonContainer = styled(Box)({\n  '& .Mui-disabled': {\n    backgroundImage: 'unset!important',\n    color: 'white!important',\n  },\n});\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SettingsIcon } from 'assets/images/SettingsIcon.svg';\nimport { useIsProMode } from 'state/application/hooks';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { useCurrency } from 'hooks/Tokens';\nimport { Swap, SettingsModal, ToggleSwitch } from 'components';\nimport {\n  GelatoLimitOrderPanel,\n  GelatoLimitOrdersHistoryPanel,\n} from '@gelatonetwork/limit-orders-react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Twap from './Twap/Twap';\n\nconst SWAP_NORMAL = 0;\nconst SWAP_LIMIT = 1;\nconst TWAP = 2;\n\nconst SwapMain: React.FC = () => {\n  const [swapIndex, setSwapIndex] = useState(TWAP);\n  const [openSettingsModal, setOpenSettingsModal] = useState(false);\n  const { isProMode, updateIsProMode } = useIsProMode();\n\n  const parsedQuery = useParsedQueryString();\n  const currency0 = useCurrency(\n    parsedQuery && parsedQuery.currency0\n      ? (parsedQuery.currency0 as string)\n      : undefined,\n  );\n  const currency1 = useCurrency(\n    parsedQuery && parsedQuery.currency1\n      ? (parsedQuery.currency1 as string)\n      : undefined,\n  );\n  const { t } = useTranslation();\n\n  console.log(t('market'));\n\n  return (\n    <>\n      {openSettingsModal && (\n        <SettingsModal\n          open={openSettingsModal}\n          onClose={() => setOpenSettingsModal(false)}\n        />\n      )}\n      <Box\n        className={`flex flex-wrap items-center justify-between ${\n          isProMode ? ' proModeWrapper' : ''\n        }`}\n      >\n        <Box display='flex'>\n          <Box\n            className={`${\n              swapIndex === SWAP_NORMAL ? 'activeSwap' : ''\n            } swapItem headingItem\n            `}\n            onClick={() => setSwapIndex(SWAP_NORMAL)}\n          >\n            <p>{t('market')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === SWAP_LIMIT ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(SWAP_LIMIT)}\n          >\n            <p>{t('limit')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === TWAP ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(TWAP)}\n          >\n            <p>{t('twap')}</p>\n          </Box>\n        </Box>\n        <Box my={1} className='flex items-center'>\n          {!isProMode && (\n            <Box className='flex items-center' mr={1}>\n              <span\n                className='text-secondary text-uppercase'\n                style={{ marginRight: 8 }}\n              >\n                {t('proMode')}\n              </span>\n              <ToggleSwitch\n                toggled={isProMode}\n                onToggle={() => updateIsProMode(!isProMode)}\n              />\n            </Box>\n          )}\n          <Box className='headingItem' marginRight={isProMode ? 2.5 : 0}>\n            <SettingsIcon onClick={() => setOpenSettingsModal(true)} />\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={isProMode ? '0 24px' : '0'} mt={3.5}>\n        {swapIndex === SWAP_NORMAL && (\n          <Swap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n        {swapIndex === SWAP_LIMIT && (\n          <Box className='limitOrderPanel'>\n            <GelatoLimitOrderPanel />\n            <GelatoLimitOrdersHistoryPanel />\n            <Box mt={2} textAlign='center'>\n              <small>\n                <Trans\n                  i18nKey='limitOrderDisclaimer'\n                  components={{\n                    bold: <b />,\n                    alink: (\n                      <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://www.certik.org/projects/gelato'\n                      />\n                    ),\n                  }}\n                />\n              </small>\n            </Box>\n          </Box>\n        )}\n        {swapIndex === TWAP && (\n          <Twap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default SwapMain;\n","import React from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { GlobalConst } from 'constants/index';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatCompact, getDaysCurrentYear } from 'utils';\nimport { useCurrency } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\n\nconst LiquidityPoolRow: React.FC<{\n  pair: any;\n  key: number;\n}> = ({ pair, key }) => {\n  const { breakpoints } = useTheme();\n  const daysCurrentYear = getDaysCurrentYear();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const { t } = useTranslation();\n\n  const dayVolumeUSD =\n    Number(\n      pair.oneDayVolumeUSD ? pair.oneDayVolumeUSD : pair.oneDayVolumeUntracked,\n    ) *\n    GlobalConst.utils.FEEPERCENT *\n    daysCurrentYear *\n    100;\n  const trackReserveUSD = Number(\n    pair.oneDayVolumeUSD ? pair.trackedReserveUSD : pair.reserveUSD,\n  );\n  const apy =\n    isNaN(dayVolumeUSD) || trackReserveUSD === 0\n      ? 0\n      : dayVolumeUSD / trackReserveUSD;\n  const liquidity = pair.trackedReserveUSD\n    ? pair.trackedReserveUSD\n    : pair.reserveUSD;\n  const volume = pair.oneDayVolumeUSD\n    ? pair.oneDayVolumeUSD\n    : pair.oneDayVolumeUntracked;\n  const token0 = useCurrency(pair.token0.id);\n  const token1 = useCurrency(pair.token1.id);\n  return (\n    <Box key={key} className='liquidityContent'>\n      <Box className='flex items-center' width={isMobile ? 1 : 0.5}>\n        <DoubleCurrencyLogo\n          currency0={token0 ?? undefined}\n          currency1={token1 ?? undefined}\n          size={28}\n        />\n        <small style={{ marginLeft: 12 }}>\n          {pair.token0.symbol.toUpperCase()} /{' '}\n          {pair.token1.symbol.toUpperCase()}\n        </small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.2}\n        mt={isMobile ? 2.5 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('tvl')}</small>}\n        <small>${formatCompact(liquidity)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('24hVol')}</small>}\n        <small>${formatCompact(volume)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className={`flex ${isMobile ? 'justify-between' : 'justify-end'}`}\n      >\n        {isMobile && <small className='text-secondary'>{t('apy')}</small>}\n        <small\n          className={`text-right ${apy < 0 ? 'text-error' : 'text-success'}`}\n        >\n          {apy.toFixed(2)}%\n        </small>\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(LiquidityPoolRow);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport { Token } from '@uniswap/sdk';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst LiquidityPools: React.FC<{\n  token1: Token;\n  token2: Token;\n}> = ({ token1, token2 }) => {\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const { t } = useTranslation();\n  const { ethPrice } = useEthPrice();\n\n  const liquidityPairs = useMemo(\n    () =>\n      tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              if (liquidityFilterIndex === 0) {\n                return true;\n              } else if (liquidityFilterIndex === 1) {\n                return (\n                  pair.token0.id === token1Address ||\n                  pair.token1.id === token1Address\n                );\n              } else {\n                return (\n                  pair.token0.id === token2Address ||\n                  pair.token1.id === token2Address\n                );\n              }\n            })\n            .slice(0, 5)\n        : [],\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\n  );\n\n  const whiteListAddressList = useMemo(\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\n    [allTokenList],\n  );\n\n  useEffect(() => {\n    if (!ethPrice.price) return;\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n\n      const formattedPairs = tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              return (\n                whiteListAddressList.includes(pair?.token0?.id) &&\n                whiteListAddressList.includes(pair?.token1?.id)\n              );\n            })\n            .map((pair: any) => {\n              return pair.id;\n            })\n        : [];\n\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n\n  return (\n    <>\n      <Box\n        className='flex items-center justify-between'\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\n      >\n        <Box className='flex items-center'>\n          <p className='weight-600' style={{ marginRight: 8 }}>\n            {t('liquidityPools')}\n          </p>\n          <small className='text-secondary'>\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\n          </small>\n        </Box>\n        <Box\n          className='flex cursor-pointer text-secondary'\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\n        >\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n        </Box>\n      </Box>\n      {!liquidityPoolClosed && (\n        <>\n          <Divider />\n          <Box width={1}>\n            <Box padding={2} className='flex liquidityMain'>\n              <Box width={0.5} className='flex liquidityFilter'>\n                <small\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(0)}\n                >\n                  {t('all')}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(1)}\n                >\n                  {token1.symbol?.toUpperCase()}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(2)}\n                >\n                  {token2.symbol?.toUpperCase()}\n                </small>\n              </Box>\n              {!isMobile && (\n                <>\n                  <Box width={0.2}>\n                    <small>{t('tvl')}</small>\n                  </Box>\n                  <Box width={0.15}>\n                    <small>{t('24hVol')}</small>\n                  </Box>\n                  <Box width={0.15} className='text-right'>\n                    <small>{t('apy')}</small>\n                  </Box>\n                </>\n              )}\n            </Box>\n            {liquidityPairs.map((pair: any, ind: any) => (\n              <LiquidityPoolRow pair={pair} key={ind} />\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LiquidityPools;\n","import React from 'react';\n\nconst SwapProChart: React.FC<{\n  pairName: string;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n}> = ({ pairAddress, pairName, pairTokenReversed }) => {\n  return (\n    <iframe\n      src={`https://mode.quickswap.exchange?pairAddress=${pairAddress}&pairName=${pairName}&tokenReversed=${pairTokenReversed}`}\n      height='100%'\n      width='100%'\n      frameBorder='0'\n    />\n  );\n};\n\nexport default React.memo(SwapProChart);\n","import React from 'react';\nimport SwapProChart from './SwapProChart';\nimport { Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { Height } from '@material-ui/icons';\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex';\nimport 'react-reflex/styles.css';\nimport { formatNumber, shortenTx, getEtherscanLink } from 'utils';\nimport dayjs from 'dayjs';\nimport { useActiveWeb3React } from 'hooks';\nimport { TableVirtuoso } from 'react-virtuoso';\nimport { useTranslation } from 'react-i18next';\n\nconst SwapProChartTrade: React.FC<{\n  showChart: boolean;\n  showTrades: boolean;\n  token1: Token;\n  token2: Token;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n  transactions?: any[];\n}> = ({\n  showChart,\n  showTrades,\n  token1,\n  token2,\n  pairAddress,\n  pairTokenReversed,\n  transactions,\n}) => {\n  const { chainId } = useActiveWeb3React();\n  const { t } = useTranslation();\n\n  const TradesTable = () => (\n    <TableVirtuoso\n      data={transactions}\n      components={{\n        Table: ({ ...props }) => <table className='tradeTable' {...props} />,\n      }}\n      fixedHeaderContent={() => (\n        <tr>\n          <th align='left'>{t('date')}</th>\n          <th align='left'>{t('type')}</th>\n          <th align='right'>{t('usd')}</th>\n          <th align='right'>{token1.symbol}</th>\n          <th align='right'>{token2.symbol}</th>\n          <th align='right'>{t('price')}</th>\n          <th align='right'>{t('txn')}</th>\n        </tr>\n      )}\n      itemContent={(index, tx) => {\n        const txType = Number(tx.amount0In) > 0 ? 'sell' : 'buy';\n        const txAmount0 =\n          Number(tx.amount0In) > 0 ? tx.amount0In : tx.amount0Out;\n        const txAmount1 =\n          Number(tx.amount1In) > 0 ? tx.amount1In : tx.amount1Out;\n        const token1Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount0\n            : txAmount1;\n        const token2Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount1\n            : txAmount0;\n        const txPrice = Number(tx.amountUSD) / token1Amount;\n        return (\n          <>\n            <td align='left'>\n              {dayjs\n                .unix(tx.transaction.timestamp)\n                .format('MMM DD, hh:mm:ss a')}\n            </td>\n            <td className={txType} align='left'>\n              {txType.toUpperCase()}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(tx.amountUSD)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token1Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token2Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(txPrice)}\n            </td>\n            <td className={txType} align='right'>\n              {chainId ? (\n                <a\n                  href={getEtherscanLink(\n                    chainId,\n                    tx.transaction.id,\n                    'transaction',\n                  )}\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  {shortenTx(tx.transaction.id)}\n                </a>\n              ) : (\n                shortenTx(tx.transaction.id)\n              )}\n            </td>\n          </>\n        );\n      }}\n    />\n  );\n\n  return (\n    <ReflexContainer orientation='horizontal'>\n      {showChart && (\n        <ReflexElement className='top-pane' minSize={200}>\n          <SwapProChart\n            pairName={`${token1.symbol}/${token2.symbol}`}\n            pairAddress={pairAddress}\n            pairTokenReversed={pairTokenReversed}\n          />\n        </ReflexElement>\n      )}\n      {showChart && showTrades && (\n        <ReflexSplitter>\n          <Box\n            width={1}\n            height='2px'\n            className='flex justify-center items-center'\n          >\n            <Height />\n          </Box>\n        </ReflexSplitter>\n      )}\n      {showTrades && (\n        <ReflexElement className='bottom-pane' minSize={200}>\n          <TradesTable />\n        </ReflexElement>\n      )}\n    </ReflexContainer>\n  );\n};\n\nexport default React.memo(SwapProChartTrade);\n","import React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\ndayjs.extend(utc);\n\nconst SwapInfoTx: React.FC<{\n  transactions?: any[];\n}> = ({ transactions }) => {\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime\n    .subtract(subtractTimeAmount, subtractTimeType)\n    .unix();\n\n  const filteredTxs = transactions?.filter(\n    (tx) => tx.transaction.timestamp >= firstTime,\n  );\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\n  const volume = filteredTxs\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\n    : undefined;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ButtonSwitch\n        height={32}\n        value={txFilter}\n        onChange={setTxFilter}\n        items={[\n          { label: `5${t('min')}`, value: '5_minute' },\n          { label: `1${t('hour')}`, value: '1_hour' },\n          { label: `6${t('hour')}`, value: '6_hour' },\n          { label: `24${t('hour')}`, value: '24_hour' },\n        ]}\n      />\n      <Box className='swapTxInfo'>\n        <Box>\n          <small className='text-secondary'>{t('transactions')}:</small>\n          {filteredTxs ? (\n            <small>{filteredTxs.length}</small>\n          ) : (\n            <Skeleton width={60} height={14} />\n          )}\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('buys')}:</small>\n          <small>\n            {filteredBuyTxs ? (\n              filteredBuyTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('sells')}:</small>\n          <small>\n            {filteredSellTxs ? (\n              filteredSellTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('volume')}:</small>\n          <small>\n            {filteredTxs ? (\n              volume > 1000 ? (\n                formatCompact(volume)\n              ) : (\n                formatNumber(volume)\n              )\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default React.memo(SwapInfoTx);\n","import React, { useState, useEffect } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { SwapHoriz } from '@material-ui/icons';\nimport { Currency, Token } from '@uniswap/sdk';\nimport { CurrencyLogo } from 'components';\nimport { getTokenInfo, formatNumber } from 'utils';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwapInfoTx from './SwapInfoTx';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst SwapProInfo: React.FC<{\n  token1?: Token;\n  token2?: Token;\n  transactions?: any[];\n}> = ({ token1, token2, transactions }) => {\n  const { t } = useTranslation();\n  const [token1Data, setToken1Data] = useState<any>(null);\n  const [token2Data, setToken2Data] = useState<any>(null);\n  const token1Address = token1?.address;\n  const token2Address = token2?.address;\n  const currency1 = token1 ? unwrappedToken(token1) : undefined;\n  const currency2 = token2 ? unwrappedToken(token2) : undefined;\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    (async () => {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        if (token1Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token1Address,\n          );\n          if (tokenInfo) {\n            setToken1Data(tokenInfo[0]);\n          }\n        }\n        if (token2Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token2Address,\n          );\n          if (tokenInfo) {\n            setToken2Data(tokenInfo[0]);\n          }\n        }\n      }\n    })();\n  }, [token1Address, token2Address, ethPrice.price, ethPrice.oneDayPrice]);\n\n  const TokenInfo: React.FC<{ currency: Currency; tokenData: any }> = ({\n    currency,\n    tokenData,\n  }) => {\n    const priceUpPercent = Number(tokenData?.priceChangeUSD);\n    return (\n      <>\n        <Box p={1} display='flex'>\n          <CurrencyLogo currency={currency} />\n          <Box ml={1} flex={1}>\n            <Box className='flex justify-between'>\n              <small>{currency.symbol}</small>\n              {tokenData ? (\n                <small>${formatNumber(tokenData?.priceUSD)}</small>\n              ) : (\n                <Skeleton width={60} height={14} />\n              )}\n            </Box>\n            {tokenData ? (\n              <span>\n                {t('24h')}:{' '}\n                <span\n                  className={priceUpPercent > 0 ? 'text-success' : 'text-error'}\n                >\n                  {formatNumber(priceUpPercent)}%\n                </span>\n              </span>\n            ) : (\n              <Skeleton width={60} height={12} />\n            )}\n          </Box>\n        </Box>\n        <Divider />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Box p={1}>\n        <p className='text-uppercase'>{t('info')}:</p>\n      </Box>\n      <Divider />\n      {currency1 && <TokenInfo currency={currency1} tokenData={token1Data} />}\n      {currency2 && <TokenInfo currency={currency2} tokenData={token2Data} />}\n      {currency1 && currency2 && (\n        <>\n          <Box py={2} px={1}>\n            <Box mb={1} px={1} className='flex items-center justify-between'>\n              <small>\n                {currency1.symbol} / {currency2.symbol}\n              </small>\n              <Box className='swapIcon'>\n                <SwapHoriz />\n              </Box>\n            </Box>\n            <SwapInfoTx transactions={transactions} />\n          </Box>\n          <Divider />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SwapProInfo);\n","import React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface SwapProFilterProps {\n  infoPos: string;\n  setInfoPos: (pos: string) => void;\n  showChart: boolean;\n  setShowChart: (value: boolean) => void;\n  showTrades: boolean;\n  setShowTrades: (value: boolean) => void;\n}\n\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\n  infoPos,\n  setInfoPos,\n  showChart,\n  setShowChart,\n  showTrades,\n  setShowTrades,\n}) => {\n  const { t } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n\n  const infoPosItems = swapPositions.map((pos) => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos,\n    };\n  });\n\n  return (\n    <Box className='swapFilter'>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showChart}\n          disabled={!showTrades}\n          onChange={(evt) => setShowChart(evt.target.checked)}\n        />\n        <small>{t('chart')}</small>\n      </Box>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showTrades}\n          disabled={!showChart}\n          onChange={(evt) => setShowTrades(evt.target.checked)}\n        />\n        <small>{t('trades')}</small>\n      </Box>\n      <Box className='flex items-center'>\n        <small className='text-uppercase'>{t('info')}:</small>\n        <Box ml={1}>\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\n        </Box>\n      </Box>\n      <Box\n        className='replayButton'\n        onClick={() => {\n          setInfoPos(t('right'));\n          setShowChart(true);\n          setShowTrades(true);\n        }}\n      >\n        <Replay />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwapProFilter;\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\n\nconst SwapPage: React.FC = () => {\n  const { isProMode, updateIsProMode } = useIsProMode();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState<any[] | undefined>(\n    undefined,\n  );\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [infoPos, setInfoPos] = useState('right');\n\n  const { currencies } = useDerivedSwapInfo();\n  const { chainId } = useActiveWeb3React();\n\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\n\n  // this is for refreshing data of trades table every 60 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const _currentTime = Math.floor(Date.now() / 1000);\n      setCurrentTime(_currentTime);\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    async function getPairId(token1Address: string, token2Address: string) {\n      const pairData = await getPairAddress(token1Address, token2Address);\n      if (pairData) {\n        setPairTokenReversed(pairData.tokenReversed);\n        setPairId(pairData.pairId);\n      }\n    }\n    if (token1?.address && token2?.address) {\n      getPairId(token1?.address, token2?.address);\n    }\n  }, [token1?.address, token2?.address]);\n\n  useEffect(() => {\n    (async () => {\n      if (pairId && transactions && transactions.length > 0) {\n        const txns = await getSwapTransactions(\n          pairId,\n          Number(transactions[0].transaction.timestamp),\n        );\n        if (txns) {\n          const filteredTxns = txns.filter(\n            (txn) =>\n              !transactions.filter(\n                (tx) => tx.transaction.id === txn.transaction.id,\n              ).length,\n          );\n          setTransactions([...filteredTxns, ...transactions]);\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentTime]);\n\n  useEffect(() => {\n    async function getTradesData(pairId: string) {\n      setTransactions(undefined);\n      const transactions = await getSwapTransactions(pairId);\n      setTransactions(transactions);\n    }\n    if (pairId && isProMode) {\n      getTradesData(pairId);\n    }\n  }, [pairId, isProMode]);\n\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3} id='swap-page'>\n      {!isProMode && (\n        <Box className='pageHeading'>\n          <h4>{t('swap')}</h4>\n          <Box className='helpWrapper'>\n            <small>{t('help')}</small>\n            <HelpIcon />\n          </Box>\n        </Box>\n      )}\n      {!isProMode ? (\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={12} md={6} lg={5}>\n            <Box className='wrapper'>\n              <SwapMain />\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={7}>\n            <Box className='flex flex-wrap justify-between fullWidth'>\n              {token1 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token1} />\n                </Box>\n              )}\n              {token2 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token2} />\n                </Box>\n              )}\n            </Box>\n            {token1 && token2 && (\n              <Box className='wrapper' marginTop='32px'>\n                <LiquidityPools token1={token1} token2={token2} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box\n          className='border-top border-bottom bg-palette flex flex-wrap'\n          minHeight='calc(100vh - 140px)'\n        >\n          <Box\n            width={isMobile ? 1 : '450px'}\n            padding='20px 0'\n            className={isMobile ? '' : 'border-right'}\n          >\n            <Box\n              className='flex justify-between items-center'\n              padding='0 24px'\n              mb={3}\n            >\n              <h4>{t('swap')}</h4>\n              <Box className='flex items-center' mr={1}>\n                <span\n                  className='text-secondary text-uppercase'\n                  style={{ marginRight: 8 }}\n                >\n                  {t('proMode')}\n                </span>\n                <ToggleSwitch\n                  toggled={isProMode}\n                  onToggle={() => updateIsProMode(!isProMode)}\n                />\n              </Box>\n            </Box>\n            <SwapMain />\n          </Box>\n          {infoPos === 'left' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left border-right'}\n              width={isMobile ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n          <Box className='swapProWrapper'>\n            <SwapProFilter\n              infoPos={infoPos}\n              setInfoPos={setInfoPos}\n              showChart={showChart}\n              setShowChart={setShowChart}\n              showTrades={showTrades}\n              setShowTrades={setShowTrades}\n            />\n            {token1 && token2 && pairId && (\n              <SwapProChartTrade\n                showChart={showChart}\n                showTrades={showTrades}\n                token1={token1}\n                token2={token2}\n                pairAddress={pairId}\n                pairTokenReversed={pairTokenReversed}\n                transactions={transactions}\n              />\n            )}\n          </Box>\n          {infoPos === 'right' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left'}\n              width={isTablet ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SwapPage;\n"],"sourceRoot":""}