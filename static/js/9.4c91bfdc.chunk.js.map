{"version":3,"sources":["assets/images/HelpIcon1.svg","assets/images/SettingsIcon.svg","pages/SwapPage/Twap/LimitPriceInput.tsx","pages/SwapPage/Twap/TimeSelect.tsx","pages/SwapPage/Twap/Duration.tsx","pages/SwapPage/Twap/Interval.tsx","pages/SwapPage/Twap/useValidation.ts","pages/SwapPage/Twap/ChunkSize.tsx","pages/SwapPage/Twap/ErrorNotification.tsx","pages/SwapPage/Twap/contract/useContract.ts","pages/SwapPage/Twap/ConfirmTwapModal/TxDetails.tsx","pages/SwapPage/Twap/ConfirmTwapModal/Disclaimer.tsx","pages/SwapPage/Twap/PriceIndication.tsx","pages/SwapPage/Twap/useWrapCallback.ts","pages/SwapPage/Twap/ConfirmTwapModal/ModalContent.tsx","pages/SwapPage/Twap/ConfirmTwapModal/ConfirmTwapModal.tsx","pages/SwapPage/Twap/useTwapApproveCallbackFromTrade.ts","pages/SwapPage/Twap/Twap.tsx","pages/SwapPage/Twap/useTwapCallback.ts","pages/SwapPage/SwapMain.tsx","pages/SwapPage/LiquidityPoolRow.tsx","pages/SwapPage/LiquidityPools.tsx","pages/SwapPage/SwapProChart.tsx","pages/SwapPage/SwapProChartTrade.tsx","pages/SwapPage/SwapInfoTx.tsx","pages/SwapPage/SwapProInfo.tsx","pages/SwapPage/SwapProFilter.tsx","pages/SwapPage/SwapPage.tsx"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHelpIcon1","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","d","transform","style","fill","ForwardRef","SvgSettingsIcon","rx","LimitPriceInput","useDerivedTwapInfo","currencies","marketPrice","allowLimitPrice","useTwapState","invertLimitPriceValue","price","t","useTranslation","dispatch","useDispatch","onChange","value","currency","Field","INPUT","setPrice","formattedPrice","tryParseAmount","undefined","currenciesMemoized","useMemo","inputCurrency","OUTPUT","outputCurrency","StyledContainer","className","StyledTop","StyledTitle","toggled","onToggle","setAllowLimitPrice","setInvertLimitPriceValue","invert","toSignificant","InfoTooltip","text","Typography","StyledInputContainer","StyledCurrencyDetails","marginRight","symbol","size","disabled","align","placeholder","onUserInput","val","IconButton","onClick","marginLeft","PriceExchangeIcon","styled","Box","display","alignItems","justifyContent","borderBottom","gap","marginTop","flexDirection","TimeSelect","selected","onUpdate","tooltip","margin","StyledRight","displayValue","milliseconds","timeToMilliseconds","type","format","getFormatTypeFromMilliseconds","millisecondsToTime","console","log","StyledSelect","event","color","opacity","MenuItem","TimeSelectFormat","DAYS","HOURS","MINUTES","Select","theme","palette","primary","main","whiteSpace","Duration","onDuration","useTwapActionHandlers","duration","onInterval","interval","selfEdit","partialFillWarning","totalChunks","Number","usePartialFillWarning","useEffect","StyledCard","setSelfEdit","StyledWarning","fontWeight","ChunkSize","chunkSize","parsedAmount","onChunkSize","usdPrice","useUSDCPrice","invalidChunkSize","toExact","StyledCurrency","marginBottom","StyledBottom","toString","toLocaleString","ErrorNotification","error","handleClose","setTimeout","setError","Snackbar","open","autoHideDuration","onClose","Alert","severity","variant","useTwapContract","address","ABI","withSignerIfPossible","useActiveWeb3React","library","account","getContract","useContract","TWAP_CONTRACT_ADDRESS","twapAbi","calculateInterval","time","moment","days","hours","minutes","str","TxDetails","outputAmount","deadline","minimumAmountOutAsCurrencyAmount","StyledDetails","element","fontSize","Row","StyledRow","placement","Disclaimer","Trans","i18nKey","components","Link","rel","href","PriceIndication","WrapType","executionPrice","customText","useState","mainPrice","setMainPrice","ModalContent","onConfirm","typedPriceOutputValue","priceAsCurrencyAmount","outputAsCurrencyAmount","StyledCards","currencyAmount","prefix","Button","Card","StyledCardTop","getTokenValue","StyledCardBottom","formatTokenAmount","ConfirmTwapModal","onDismiss","swapErrorMessage","isOpen","attemptingTxn","txHash","txPending","modalContent","useCallback","confirmationContent","message","content","maxHeight","overflow","hash","pendingText","NOT_APPLICABLE","wrapType","ApprovalState","useTwapApproveCallbackFromTrade","amountToTrade","amountToApprove","spender","token","TokenAmount","currentAllowance","useTokenAllowance","pendingApproval","useHasPendingApproval","approvalState","ETHER","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","useTokenContract","addTransaction","useTransactionAdder","approve","a","useExact","estimateGas","MaxUint256","catch","raw","estimatedGas","gasLimit","calculateGasMargin","then","response","summary","approval","tokenAddress","wait","debug","useApproveCallback","chainId","Twap","typedValue","recipient","currencyBalances","swapInputError","inputError","finalizedTransaction","useTransactionFinalizer","wrapLoading","setWrapLoading","wethContract","useWETHContract","balance","useCurrencyBalance","inputAmount","sufficientBalance","WRAP","execute","deposit","txReceipt","useTwapWrapCallback","onWrap","wrapInputError","onSwitchTokens","onCurrencySelection","searchToken","useToken","MATIC_WRAPPED_ADDRESS","handleCurrencySelect","setApprovalSubmitted","onWrapHandler","showWrap","useUserSlippageTolerance","allowedSlippage","approving","setApproving","approveCallback","inputsError","useInputsValidation","parsedAmounts","formattedAmounts","userHasSpecifiedInputOutput","Boolean","parseUnits","decimals","gt","approvalSubmitted","ethereum","window","isValid","showApproveFlow","toggleWalletModal","useWalletModalToggle","handleOtherCurrencySelect","swapButtonText","UNWRAP","isSupportedNetwork","twapButtonDisabled","showConfirm","tradeToConfirm","setTwapState","handleTypeInput","maxAmountInput","maxAmountSpend","handleMaxInput","handleHalfInput","atMaxAmountInput","equalTo","twapCallback","minimumAmountOut","contract","srcAmount","srcBidAmount","dstMinAmount","currencyId","Error","delay","ask","unix","useTwapCallback","handleTwap","handleAcceptChanges","handleConfirmDismiss","originalTrade","onAcceptChanges","onHalf","onMax","showHalfButton","showMaxButton","otherCurrency","amount","setAmount","ExchangeIcon","showPrice","StyledFlex","Interval","fullWidth","CircularProgress","StyledButtonContainer","addMaticToMetamask","zoom","backgroundImage","SwapMain","swapIndex","setSwapIndex","openSettingsModal","setOpenSettingsModal","useIsProMode","isProMode","updateIsProMode","parsedQuery","useParsedQueryString","currency0","useCurrency","currency1","my","mr","SettingsIcon","padding","mt","textAlign","bold","alink","LiquidityPoolRow","pair","breakpoints","useTheme","daysCurrentYear","getDaysCurrentYear","isMobile","useMediaQuery","down","dayVolumeUSD","oneDayVolumeUSD","oneDayVolumeUntracked","GlobalConst","utils","FEEPERCENT","trackReserveUSD","trackedReserveUSD","reserveUSD","apy","isNaN","liquidity","volume","token0","token1","toUpperCase","formatCompact","toFixed","React","memo","LiquidityPools","token2","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","toLowerCase","token2Address","allTokenList","useAllTokens","ethPrice","useEthPrice","liquidityPairs","filter","slice","whiteListAddressList","map","item","getTokenPairs","formattedPairs","includes","getBulkPairData","pairData","KeyboardArrowDown","KeyboardArrowUp","Divider","ind","SwapProChart","pairAddress","pairName","pairTokenReversed","src","frameBorder","SwapProChartTrade","showChart","showTrades","transactions","TradesTable","data","Table","fixedHeaderContent","itemContent","index","tx","txType","amount0In","txAmount0","amount0Out","txAmount1","amount1In","amount1Out","token1Amount","token2Amount","txPrice","amountUSD","dayjs","transaction","timestamp","formatNumber","getEtherscanLink","shortenTx","orientation","minSize","Height","extend","utc","SwapInfoTx","txFilter","setTxFilter","subtractTimeAmount","split","subtractTimeType","firstTime","subtract","filteredTxs","filteredBuyTxs","filteredSellTxs","reduce","total","items","label","Skeleton","SwapProInfo","token1Data","setToken1Data","token2Data","setToken2Data","unwrappedToken","currency2","oneDayPrice","getTokenInfo","tokenInfo","TokenInfo","tokenData","priceUpPercent","priceChangeUSD","p","ml","flex","priceUSD","py","px","mb","SwapHoriz","SwapProFilter","infoPos","setInfoPos","setShowChart","setShowTrades","infoPosItems","pos","condition","Checkbox","checked","evt","Replay","SwapPage","isTablet","pairId","useDerivedSwapInfo","wrappedCurrency","minHeight","Grid","container","spacing","xs","sm","md","lg"],"mappings":"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","file":"static/js/9.4c91bfdc.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHelpIcon1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Path 11469\",\n    d: \"M10.78-7.061c0-1.268-.918-1.919-2.319-1.919a3.829 3.829 0 0 0-2.353.78l.167 1.068a3.446 3.446 0 0 1 2.069-.8c.767 0 1.2.334 1.2.918 0 .617-.417.968-1.6 1.4l-.334.117.133 1.518.784-.15.067-.734c1.218-.396 2.186-.997 2.186-2.198zm-2 5.306V-3.09H7.493v1.335zM.352-5.192a7.851 7.851 0 0 0 7.992 8.008 7.855 7.855 0 0 0 8.008-8.008 7.831 7.831 0 0 0-8.008-7.992A7.827 7.827 0 0 0 .352-5.192zm1.1 0a6.789 6.789 0 0 1 6.891-6.941 6.789 6.789 0 0 1 6.891 6.941 6.793 6.793 0 0 1-6.89 6.957 6.793 6.793 0 0 1-6.891-6.957z\",\n    transform: \"translate(-.352 13.184)\",\n    style: {\n      fill: \"#636780\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpIcon1);\nexport default __webpack_public_path__ + \"static/media/HelpIcon1.66c8c791.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettingsIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Component 37 \\\\u2013 6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    \"data-name\": \"Rectangle 18293\",\n    width: 40,\n    height: 40,\n    rx: 20,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Settings 2\",\n    d: \"M20 11.823V8.177c-1.79-.638-2.272-.668-2.522-1.274s.069-.974.882-2.686L15.782 1.64c-1.688.8-2.073 1.137-2.687.883S12.456 1.782 11.823 0H8.177C7.541 1.787 7.511 2.271 6.9 2.522c-.627.261-1-.083-2.686-.883L1.64 4.217c.814 1.713 1.135 2.078.882 2.683S1.788 7.541 0 8.177v3.646c1.783.633 2.271.667 2.523 1.273s-.068.972-.883 2.686l2.577 2.578c1.666-.792 2.058-1.144 2.686-.882.607.252.637.733 1.274 2.522h3.645c.632-1.776.666-2.269 1.281-2.526s.988.083 2.679.885l2.578-2.578c-.812-1.708-1.135-2.077-.882-2.686s.733-.635 2.522-1.272zm-4.062.637a3.3 3.3 0 0 0 .407 2.982l-.9.9a3.288 3.288 0 0 0-2.978-.408 3.309 3.309 0 0 0-1.823 2.4H9.362a3.3 3.3 0 0 0-1.819-2.4 3.307 3.307 0 0 0-2.983.407l-.9-.9a3.3 3.3 0 0 0 .406-2.983 3.307 3.307 0 0 0-2.4-1.818V9.362a3.3 3.3 0 0 0 2.4-1.82 3.3 3.3 0 0 0-.407-2.983l.9-.9a3.3 3.3 0 0 0 2.983.407 3.3 3.3 0 0 0 1.819-2.4h1.279a3.3 3.3 0 0 0 1.82 2.4 3.308 3.308 0 0 0 2.983-.407l.9.9a3.307 3.307 0 0 0-.407 2.983 3.3 3.3 0 0 0 2.4 1.819v1.279a3.3 3.3 0 0 0-2.4 1.819zM10 7.5A2.5 2.5 0 1 1 7.5 10 2.5 2.5 0 0 1 10 7.5zm0-1.667A4.167 4.167 0 1 0 14.167 10 4.166 4.166 0 0 0 10 5.833z\",\n    transform: \"translate(10 10)\",\n    style: {\n      fill: \"#696c80\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettingsIcon);\nexport default __webpack_public_path__ + \"static/media/SettingsIcon.5b7ed28d.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, IconButton, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Trade } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput, ToggleSwitch } from 'components';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Field,\n  setAllowLimitPrice,\n  setInvertLimitPriceValue,\n  setPrice,\n} from 'state/twap/actions';\nimport {\n  tryParseAmount,\n  useDerivedTwapInfo,\n  useTwapState,\n} from 'state/twap/hooks';\nimport InfoTooltip from './InfoTooltip';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { useTranslation } from 'react-i18next';\n\nfunction LimitPriceInput() {\n  const { currencies, marketPrice } = useDerivedTwapInfo();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n  const invertLimitPriceValue = useTwapState().invertLimitPriceValue;\n  const price = useTwapState().price;\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const onChange = (value: string) => {\n    const currency = currencies[Field.INPUT];\n    if (currency) {\n      dispatch(\n        setPrice({\n          price: value,\n          formattedPrice: value ? tryParseAmount(value, currency) : undefined,\n        }),\n      );\n    }\n  };\n\n  const onToggle = () => {\n    dispatch(setAllowLimitPrice(!allowLimitPrice));\n    if (invertLimitPriceValue) {\n      dispatch(setInvertLimitPriceValue(false));\n      onChange('');\n    } else {\n      onChange(marketPrice?.invert().toSignificant(6) || '');\n    }\n  };\n\n  const toggleInvert = () => {\n    dispatch(setInvertLimitPriceValue(!invertLimitPriceValue));\n  };\n\n  const currenciesMemoized = useMemo(() => {\n    if (!invertLimitPriceValue) {\n      return {\n        inputCurrency: currencies[Field.INPUT],\n        outputCurrency: currencies[Field.OUTPUT],\n      };\n    }\n    return {\n      inputCurrency: currencies[Field.OUTPUT],\n      outputCurrency: currencies[Field.INPUT],\n    };\n  }, [currencies, invertLimitPriceValue]);\n\n  const { inputCurrency, outputCurrency } = currenciesMemoized;\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <StyledTitle>\n          <ToggleSwitch toggled={!!allowLimitPrice} onToggle={onToggle} />\n          <InfoTooltip\n            text={allowLimitPrice ? t('limitPriceOn') : t('limitPriceOff')}\n          >\n            <Typography>Limit Price</Typography>\n          </InfoTooltip>\n        </StyledTitle>\n        {!allowLimitPrice && <Typography>None</Typography>}\n      </StyledTop>\n      {allowLimitPrice && (\n        <StyledInputContainer>\n          <StyledCurrencyDetails style={{ marginRight: 5 }}>\n            <Typography>1</Typography>\n\n            <Typography>{inputCurrency?.symbol}</Typography>\n            <CurrencyLogo currency={inputCurrency} size={'28px'} />\n          </StyledCurrencyDetails>{' '}\n          <Typography>=</Typography>\n          <NumericalInput\n            disabled={!allowLimitPrice}\n            value={price || ''}\n            align='center'\n            placeholder={allowLimitPrice ? '0.00' : 'None'}\n            onUserInput={(val) => {\n              onChange(val);\n            }}\n          />\n          <StyledCurrencyDetails>\n            <Typography>{outputCurrency?.symbol}</Typography>\n            <CurrencyLogo currency={outputCurrency} size={'28px'} />\n          </StyledCurrencyDetails>\n          <IconButton onClick={toggleInvert} style={{ marginLeft: 10 }}>\n            <PriceExchangeIcon />\n          </IconButton>\n        </StyledInputContainer>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default LimitPriceInput;\n\nconst StyledInputContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  marginLeft: 'auto',\n  '& .styledInput': {\n    width: 150,\n    borderBottom: '1px solid white',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n});\n\nconst StyledCurrencyDetails = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n});\n\nconst StyledContainer = styled(Box)({\n  marginTop: 5,\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 20,\n});\n\nconst StyledTitle = styled(Box)({\n  marginRight: 10,\n  display: 'flex',\n  alignItems: 'center',\n  gap: 15,\n});\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, MenuItem, Select, Theme, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { NumericalInput } from 'components';\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { TimeSelectFormat, TwapTimeSelect } from 'state/twap/reducer';\nimport InfoTooltip from './InfoTooltip';\nimport {\n  getFormatTypeFromMilliseconds,\n  millisecondsToTime,\n  timeToMilliseconds,\n} from './utils';\n\ninterface Props {\n  selected: TwapTimeSelect;\n  title: string;\n  disabled?: boolean;\n  tooltip: string | ReactNode;\n\n  onUpdate: ({\n    type,\n    displayValue,\n    milliseconds,\n  }: {\n    type: TimeSelectFormat;\n    displayValue?: string;\n    milliseconds?: number;\n  }) => void;\n}\n\nfunction TimeSelect({ selected, title, onUpdate, disabled, tooltip }: Props) {\n  const onChange = (value: string) => {\n    const milliseconds = timeToMilliseconds(selected.type, value) || 0;\n    let displayValue = value;\n\n    if (!milliseconds) {\n      onUpdate({\n        type: selected.type,\n        displayValue,\n        milliseconds,\n      });\n      return;\n    }\n\n    const format = getFormatTypeFromMilliseconds(milliseconds || 0);\n\n    if (format !== selected.type) {\n      displayValue = millisecondsToTime(format, milliseconds) || '';\n      console.log(displayValue, milliseconds);\n    }\n    onUpdate({\n      type: format,\n      displayValue,\n      milliseconds,\n    });\n  };\n\n  const onSelect = (event: any) => {\n    onUpdate({\n      type: event.target.value,\n    });\n  };\n  return (\n    <>\n      <InfoTooltip text={tooltip}>\n        <StyledTitle style={{ margin: 0 }}>{title}</StyledTitle>\n      </InfoTooltip>\n\n      <StyledRight>\n        <NumericalInput\n          disabled={disabled}\n          value={selected.displayValue || ''}\n          align='right'\n          placeholder='0'\n          onUserInput={(val) => {\n            if (val !== '0' && val !== '.') {\n              onChange(val);\n            }\n          }}\n        />\n        <StyledSelect\n          disabled={disabled}\n          value={selected.type}\n          onChange={onSelect}\n          color='primary'\n          style={{\n            opacity: disabled ? 0.7 : 1,\n          }}\n        >\n          <MenuItem value={TimeSelectFormat.DAYS}>Days</MenuItem>\n          <MenuItem value={TimeSelectFormat.HOURS}>Hours</MenuItem>\n          <MenuItem value={TimeSelectFormat.MINUTES}>Minutes</MenuItem>\n        </StyledSelect>\n      </StyledRight>\n    </>\n  );\n}\n\nexport default TimeSelect;\n\nconst StyledSelect = styled(Select)(({ theme }: { theme: Theme }) => ({\n  color: 'white!important',\n  '&:before': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '&:after': {\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n  },\n  '& svg': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst StyledRight = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  gap: 20,\n  '& .styledInput': {},\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n","import { Box, styled } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\n\nfunction Duration() {\n  const { onDuration } = useTwapActionHandlers();\n  const duration = useTwapState().duration;\n  const { t } = useTranslation();\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <TimeSelect\n        onUpdate={onDuration}\n        selected={duration}\n        title='Duration'\n        tooltip={t('durationInput')}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, IconButton, styled, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useTwapActionHandlers, useTwapState } from 'state/twap/hooks';\nimport TimeSelect from './TimeSelect';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { useDispatch } from 'react-redux';\nimport { setSelfEdit } from 'state/twap/actions';\nimport { usePartialFillWarning } from './useValidation';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { useTranslation } from 'react-i18next';\nimport { getFormatTypeFromMilliseconds, millisecondsToTime } from './utils';\nfunction Duration() {\n  const { onInterval } = useTwapActionHandlers();\n  const interval = useTwapState().interval;\n  const duration = useTwapState().duration;\n\n  const selfEdit = useTwapState().selfEdit;\n  const { t } = useTranslation();\n\n  const partialFillWarning = usePartialFillWarning();\n\n  const dispatch = useDispatch();\n\n  const onEdit = () => {\n    dispatch(setSelfEdit(true));\n  };\n\n  useEffect(() => {\n    if (\n      duration.milliseconds &&\n      interval.milliseconds &&\n      interval.milliseconds > duration.milliseconds\n    ) {\n      const type = getFormatTypeFromMilliseconds(duration.milliseconds);\n      onInterval({\n        milliseconds: duration.milliseconds,\n        type,\n        displayValue: millisecondsToTime(type, duration.milliseconds),\n      });\n    }\n  }, [interval, duration, onInterval]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledCard>\n        <TimeSelect\n          tooltip={t('tradeInterval')}\n          disabled={!selfEdit}\n          onUpdate={onInterval}\n          selected={interval}\n          title='Trade Interval'\n        />\n        {!selfEdit && (\n          <IconButton onClick={onEdit}>\n            <EditOutlinedIcon color='primary' />\n          </IconButton>\n        )}\n      </StyledCard>\n      {partialFillWarning && (\n        <StyledWarning>\n          <ErrorOutlineIcon color='error' />\n          <Typography color='error'>Partial fill warning</Typography>\n        </StyledWarning>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default Duration;\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst StyledContainer = styled(Box)({});\n\nconst StyledWarning = styled(Box)({\n  marginTop: 15,\n  fontWeight: 500,\n  display: 'flex',\n  gap: 10,\n  opacity: 0.7,\n});\n","import React, { useMemo } from 'react';\nimport { useTwapState } from 'state/twap/hooks';\n\nexport const useInputsValidation = (): string | undefined => {\n  const { duration, interval, totalChunks } = useTwapState();\n\n  return useMemo(() => {\n    if (!duration.milliseconds) {\n      return 'Fill duration';\n    }\n    if (!totalChunks) {\n      return 'Missing Trades';\n    }\n    if (!interval.milliseconds) {\n      return 'Fill Interval';\n    }\n\n    return undefined;\n  }, [duration, interval, totalChunks]);\n};\n\nexport const usePartialFillWarning = (): boolean => {\n  const { duration, interval, totalChunks } = useTwapState();\n\n  return useMemo(() => {\n    if (\n      interval.milliseconds &&\n      duration.milliseconds &&\n      totalChunks &&\n      interval.milliseconds * Number(totalChunks) > duration.milliseconds\n    ) {\n      return true;\n    }\n    return false;\n  }, [interval, duration, totalChunks]);\n};\n","import { Avatar, Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport { Currency } from '@uniswap/sdk';\nimport { CurrencyLogo, NumericalInput } from 'components';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { invalidChunkSize } from 'state/twap/utils';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport InfoTooltip from './InfoTooltip';\n\ninterface Props {\n  currency: Currency | undefined;\n}\n\nfunction ChunkSize({ currency }: Props) {\n  const { totalChunks, chunkSize } = useTwapState();\n  const { parsedAmount } = useDerivedTwapInfo();\n  const { onChunkSize } = useTwapActionHandlers();\n  const { t } = useTranslation();\n  const usdPrice = Number(useUSDCPrice(currency)?.toSignificant() ?? 0);\n\n  const onChange = (value: string) => {\n    onChunkSize(value);\n  };\n\n  useEffect(() => {\n    if (\n      parsedAmount &&\n      invalidChunkSize(parsedAmount, chunkSize) &&\n      chunkSize !== parsedAmount.toExact()\n    ) {\n      onChunkSize(parsedAmount.toExact());\n    }\n  }, [parsedAmount, chunkSize, onChunkSize]);\n\n  return (\n    <StyledContainer className={`swapBox bg-secondary2`}>\n      <StyledTop>\n        <InfoTooltip text={t('tradeSizeInput')}>\n          <StyledTitle style={{ margin: 0 }}>Trade Size</StyledTitle>\n        </InfoTooltip>\n        <NumericalInput\n          value={chunkSize || ''}\n          align='right'\n          placeholder='0.00'\n          onUserInput={(val) => {\n            onChange(val);\n          }}\n        />\n        {currency && (\n          <StyledCurrency style={{ marginBottom: 0 }}>\n            <CurrencyLogo currency={currency} size={'24px'} />\n            {currency?.symbol}\n          </StyledCurrency>\n        )}\n      </StyledTop>\n      <StyledBottom>\n        <small className='text-secondary'>\n          Total trades: {totalChunks?.toString() ?? 0}\n        </small>\n        <small className='text-secondary'>\n          ${chunkSize ? (usdPrice * Number(chunkSize)).toLocaleString() : '0'}\n        </small>\n      </StyledBottom>\n    </StyledContainer>\n  );\n}\n\nexport default ChunkSize;\n\nconst StyledTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n});\n\nconst StyledBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 10,\n});\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n});\n\nconst StyledTitle = styled(Typography)({\n  marginRight: 10,\n  whiteSpace: 'nowrap',\n});\n\nconst StyledCurrency = styled(Typography)({\n  marginLeft: 20,\n  display: 'flex',\n  gap: 10,\n});\n","import { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport { setError } from 'state/twap/actions';\nimport { useTwapState } from 'state/twap/hooks';\nimport React from 'react';\n\nfunction ErrorNotification() {\n  const { error } = useTwapState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setTimeout(() => {\n      dispatch(setError(undefined));\n    }, 400);\n  };\n\n  return (\n    <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity='error' variant='filled'>\n        {error}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport default ErrorNotification;\n","import { useMemo } from 'react';\nimport { useActiveWeb3React } from 'hooks';\nimport { TWAP_CONTRACT_ADDRESS } from '../consts';\nimport twapAbi from './abi.json';\nimport Web3 from 'web3';\nimport { TWAP } from './TwapContract';\nimport { AbiItem, isAddress } from 'web3-utils';\nimport { useWeb3React } from '@web3-react/core';\nimport { Contract } from 'ethers';\nimport { getContract } from 'utils';\n\n// export function getContract(\n//   address: string,\n//   ABI: AbiItem[],\n//   library: any,\n// ): any {\n//   if (!address || !isAddress(address)) {\n//     throw Error(`Invalid 'address' parameter '${address}'.`);\n//   }\n//   const web3 = new Web3(library);\n//   return new web3.eth.Contract(ABI as AbiItem[], address);\n// }\n\nfunction useContract(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true,\n): Contract | null {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined,\n      );\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useTwapContract(): Contract | null {\n  return useContract(TWAP_CONTRACT_ADDRESS, twapAbi);\n}\n","import { Box, styled, Typography } from '@material-ui/core';\nimport { CurrencyAmount, Fraction } from '@uniswap/sdk';\nimport { CurrencyLogo, CustomTooltip } from 'components';\nimport moment from 'moment';\nimport React, { ReactNode } from 'react';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { formatTokenAmount } from 'utils';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { useTranslation } from 'react-i18next';\nimport { Field } from 'state/twap/actions';\nimport { parseUnits } from 'ethers/lib/utils';\nimport { BigNumber } from 'ethers';\nconst calculateInterval = (value?: number) => {\n  if (!value) {\n    return '0';\n  }\n  const time = moment.duration(value);\n  const days = time.days();\n  const hours = time.hours();\n  const minutes = time.minutes();\n\n  let str = '';\n\n  if (days) {\n    str += `${days} Days `;\n  }\n  if (hours) {\n    str += `${hours} Hours `;\n  }\n  if (minutes) {\n    str += `${minutes} Minutes`;\n  }\n  return str;\n};\n\ninterface Props {\n  outputAmount: Fraction;\n}\n\nfunction TxDetails({ outputAmount }: Props) {\n  const { totalChunks, interval, deadline, allowLimitPrice } = useTwapState();\n  const { t } = useTranslation();\n  const { currencies, minimumAmountOutAsCurrencyAmount } = useDerivedTwapInfo();\n\n  const outputCurrency = currencies[Field.OUTPUT];\n\n  return (\n    <StyledDetails className='swapBox bg-secondary2'>\n      <Row\n        title='Expiration date:'\n        value={moment(deadline).format('DD/MM/YYYY HH:mm')}\n        tooltip={t('confirmationExpiration')}\n      />\n      <Row\n        title='Minimum Received Per Trade:'\n        element={\n          allowLimitPrice && (\n            <StyledCurrency>\n              <Typography>\n                <span style={{ fontSize: 12 }}>{outputCurrency?.symbol}</span>\n              </Typography>\n              <Typography>\n                <span>{minimumAmountOutAsCurrencyAmount?.toExact()}</span>\n              </Typography>\n              <CurrencyLogo currency={outputCurrency} size='20px' />\n            </StyledCurrency>\n          )\n        }\n        value={!allowLimitPrice ? 'None' : undefined}\n        tooltip={\n          allowLimitPrice\n            ? t('confirmationMinimumReceivedWithLimit')\n            : t('confirmationMinimumReceivedNoLimit')\n        }\n      />\n\n      <Row\n        title='Total Trades:'\n        value={totalChunks || 0}\n        tooltip={t('confirmationTotalTrades')}\n      />\n      <Row\n        title='Trade Interval:'\n        value={calculateInterval(interval.milliseconds)}\n        tooltip={t('confirmationTradeInterval')}\n      />\n    </StyledDetails>\n  );\n}\n\nexport default TxDetails;\n\nconst StyledDetails = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n  '& p': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: 7,\n    fontSize: 13,\n    '& span': {\n      fontWeight: 600,\n    },\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n});\n\ntype RowProps = {\n  title: string;\n  value?: string | number;\n  tooltip?: string;\n  element?: ReactNode;\n};\n\nconst Row = ({ title, value, tooltip, element }: RowProps) => {\n  return (\n    <StyledRow>\n      {tooltip ? (\n        <CustomTooltip title={tooltip} placement='right'>\n          <Typography>\n            {title} <HelpOutlineIcon style={{ width: 15 }} />\n          </Typography>\n        </CustomTooltip>\n      ) : (\n        <Typography>{title}</Typography>\n      )}\n      {value && (\n        <Typography>\n          <span>{value}</span>\n        </Typography>\n      )}\n      {element}\n    </StyledRow>\n  );\n};\n\nconst StyledRow = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n","import { Box, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useTwapState } from 'state/twap/hooks';\n\nfunction Disclaimer() {\n  const { t } = useTranslation();\n  const allowLimitPrice = useTwapState().allowLimitPrice;\n\n  return (\n    <StyledContainer className='swapBox bg-secondary2'>\n      <Typography>{t('disclaimer_p1')}</Typography>\n      {allowLimitPrice ? (\n        <Typography>{t('disclaimer_p2LimitOrderSelected')}</Typography>\n      ) : (\n        <Typography>{t('disclaimer_p2LimitOrderNotSelected')}</Typography>\n      )}\n      <Typography>{t('disclaimer_p3')}</Typography>\n      <Typography>{t('disclaimer_p4')}</Typography>\n      <Typography>{t('disclaimer_p5')}</Typography>\n      <Trans\n        i18nKey='disclaimer_p6'\n        components={{\n          Link: (\n            <a\n              target='_blank'\n              rel='noreferrer \n          noopener'\n              href='https://www.orbs.com/'\n            >\n              link\n            </a>\n          ),\n        }}\n      />\n      <Typography>\n        <Trans\n          i18nKey='disclaimer_p7'\n          components={{\n            Link: (\n              <a\n                target='_blank'\n                rel='noreferrer \n          noopener'\n                href='https://www.orbs.com/'\n              >\n                link\n              </a>\n            ),\n          }}\n        />\n      </Typography>\n    </StyledContainer>\n  );\n}\n\nexport default Disclaimer;\n\nconst StyledContainer = styled(Box)({\n  marginTop: 15,\n  '& h2': {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n  '& a': {\n    color: 'white',\n  },\n});\n","import React, { ReactNode, useState } from 'react';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { Box, styled } from '@material-ui/core';\nimport { Fraction, Price, Trade } from '@uniswap/sdk';\nimport { Field } from 'state/twap/actions';\nimport { useDerivedTwapInfo } from 'state/twap/hooks';\nimport { useTranslation } from 'react-i18next';\nimport InfoTooltip from './InfoTooltip';\nimport { CurrencyLogo } from 'components';\n\ninterface Props {\n  executionPrice?: Fraction;\n  title?: string;\n  customText?: string;\n  tooltip?: string | ReactNode;\n}\n\nfunction PriceIndication({\n  executionPrice,\n  title,\n  customText,\n  tooltip,\n}: Props) {\n  const [mainPrice, setMainPrice] = useState(false);\n  const { currencies } = useDerivedTwapInfo();\n\n  const inputCurrency = currencies[Field.INPUT];\n  const outputCurrency = currencies[Field.OUTPUT];\n\n  return (\n    <Box className='swapPrice'>\n      {tooltip ? (\n        <InfoTooltip text={tooltip}>\n          <small>{title}:</small>\n        </InfoTooltip>\n      ) : (\n        <small>{title}</small>\n      )}\n      {customText ? (\n        <small>{customText}</small>\n      ) : (\n        <>\n          <StyledCurrency>\n            1 {(mainPrice ? inputCurrency : outputCurrency)?.symbol}\n            <CurrencyLogo\n              size='20px'\n              currency={mainPrice ? inputCurrency : outputCurrency}\n            />\n            ={' '}\n            {executionPrice ? (\n              <>\n                {(mainPrice\n                  ? executionPrice.invert()\n                  : executionPrice\n                ).toSignificant(6)}{' '}\n                {(mainPrice ? outputCurrency : inputCurrency)?.symbol}{' '}\n                <CurrencyLogo\n                  size='20px'\n                  currency={mainPrice ? outputCurrency : inputCurrency}\n                />\n              </>\n            ) : (\n              'Market price '\n            )}\n            <PriceExchangeIcon\n              onClick={() => {\n                setMainPrice(!mainPrice);\n              }}\n            />\n          </StyledCurrency>\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default PriceIndication;\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 5,\n  fontSize: 13,\n});\n","import { Currency, ETHER, WETH } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useCurrencyBalance } from 'state/wallet/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { formatTokenAmount } from 'utils';\nimport { useWETHContract } from 'hooks/useContract';\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE };\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useTwapWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): {\n  wrapType: WrapType;\n  execute?: undefined | (() => Promise<void>);\n  inputError?: string;\n} {\n  const { chainId, account } = useActiveWeb3React();\n  const wethContract = useWETHContract();\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency);\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [\n    inputCurrency,\n    typedValue,\n  ]);\n  const addTransaction = useTransactionAdder();\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) {\n      return NOT_APPLICABLE;\n    }\n\n    const sufficientBalance =\n      inputAmount && balance && !balance.lessThan(inputAmount);\n\n    if (inputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                const txReceipt = await wethContract.deposit({\n                  value: `0x${inputAmount.raw.toString(16)}`,\n                });\n\n                addTransaction(txReceipt, {\n                  summary: `Wrap ${formatTokenAmount(\n                    inputAmount,\n                  )} MATIC to WMATIC`,\n                });\n                await txReceipt.wait();\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient ETH balance',\n      };\n    } else {\n      return NOT_APPLICABLE;\n    }\n  }, [\n    wethContract,\n    chainId,\n    inputCurrency,\n    outputCurrency,\n    inputAmount,\n    balance,\n    addTransaction,\n  ]);\n}\n","import { CurrencyAmount, Trade } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box, Button, styled, Typography } from '@material-ui/core';\nimport { CurrencyLogo } from 'components';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { useDerivedTwapInfo, useTwapState } from 'state/twap/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { getTokenValue } from 'state/twap/utils';\nimport TxDetails from './TxDetails';\nimport Disclaimer from './Disclaimer';\nimport InfoTooltip from '../InfoTooltip';\nimport PriceIndication from '../PriceIndication';\nimport { Field } from 'state/twap/actions';\n\ninterface ModalContentProps {\n  onConfirm: () => void;\n}\n\nconst ModalContent: React.FC<ModalContentProps> = ({ onConfirm }) => {\n  const { t } = useTranslation();\n  const {\n    typedPriceOutputValue,\n    parsedAmount,\n    marketPrice,\n    currencies,\n  } = useDerivedTwapInfo();\n  const { allowLimitPrice, priceAsCurrencyAmount } = useTwapState();\n\n  const outputAsCurrencyAmount =\n    typedPriceOutputValue &&\n    tryParseAmount(\n      typedPriceOutputValue.toSignificant(6),\n      currencies[Field.OUTPUT],\n    );\n\n  return (\n    <StyledContainer>\n      <StyledCards>\n        {parsedAmount && <Card currencyAmount={parsedAmount} title='From' />}\n        {outputAsCurrencyAmount && (\n          <Card\n            tooltip={t('confirmationToInputTooltip')}\n            currencyAmount={outputAsCurrencyAmount}\n            title='To'\n            prefix={allowLimitPrice ? '≥' : '~'}\n          />\n        )}\n      </StyledCards>\n      {allowLimitPrice ? (\n        <PriceIndication\n          tooltip={t('confirmationLimitOrderTooltip')}\n          executionPrice={priceAsCurrencyAmount}\n          title='Limit Price'\n        />\n      ) : (\n        <PriceIndication\n          tooltip={t('confirmationLimitOrderTooltip')}\n          executionPrice={marketPrice}\n          title='Limit Price'\n          customText='None'\n        />\n      )}\n      {typedPriceOutputValue && (\n        <TxDetails outputAmount={typedPriceOutputValue} />\n      )}\n      <Disclaimer />\n      <Box className='transactionText'>\n        <Button onClick={onConfirm} className='swapButton'>\n          Confirm Order\n        </Button>\n      </Box>\n    </StyledContainer>\n  );\n};\n\nexport default ModalContent;\n\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCards = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n\ntype CardProps = {\n  currencyAmount: CurrencyAmount;\n  title: string;\n  tooltip?: string;\n  prefix?: string;\n};\n\nconst Card = ({ currencyAmount, title, tooltip, prefix }: CardProps) => {\n  const usdPrice = useUSDCPrice(currencyAmount.currency);\n\n  return (\n    <StyledCard className='swapBox bg-secondary2'>\n      <StyledCardTop>\n        {tooltip ? (\n          <InfoTooltip text={tooltip}>\n            <Typography>{title}</Typography>\n          </InfoTooltip>\n        ) : (\n          <Typography>{title}</Typography>\n        )}\n        <Typography>\n          ~$\n          {usdPrice && getTokenValue(usdPrice, currencyAmount)}\n        </Typography>\n      </StyledCardTop>\n      <StyledCardBottom>\n        <StyledCurrency>\n          <CurrencyLogo currency={currencyAmount.currency} size={'24px'} />\n          <Typography>{currencyAmount.currency?.symbol}</Typography>\n        </StyledCurrency>\n        {prefix ? (\n          <Typography>\n            {prefix} {formatTokenAmount(currencyAmount)}\n          </Typography>\n        ) : (\n          <Typography>{formatTokenAmount(currencyAmount)}</Typography>\n        )}\n      </StyledCardBottom>\n    </StyledCard>\n  );\n};\n\nconst StyledCard = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: 10,\n});\n\nconst StyledCardBottom = styled(Box)({\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  '& p': {\n    fontSize: 18,\n  },\n});\n\nconst StyledCurrency = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: 10,\n});\n\nconst StyledCardTop = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  width: '100%',\n});\n","import { currencyEquals, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  TransactionConfirmationModal,\n  TransactionErrorContent,\n  ConfirmationModalContent,\n} from 'components';\nimport { formatTokenAmount } from 'utils';\nimport 'components/styles/ConfirmSwapModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport ModalContent from './ModalContent';\n\ninterface ConfirmTwapModalProps {\n  isOpen: boolean;\n  originalTrade: Trade | undefined;\n  attemptingTxn: boolean;\n  txPending?: boolean;\n  txHash: string | undefined;\n  recipient: string | null;\n  allowedSlippage: number;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n  swapErrorMessage: string | undefined;\n  onDismiss: () => void;\n}\n\nconst ConfirmTwapModal: React.FC<ConfirmTwapModalProps> = ({\n  onConfirm,\n  onDismiss,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  txPending,\n}) => {\n  const { t } = useTranslation();\n\n  const modalContent = useCallback(() => {\n    return <ModalContent onConfirm={onConfirm} />;\n  }, [onConfirm]);\n\n  // text to show while loading\n  const pendingText = '';\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <ConfirmationModalContent\n          title={t('confirmTx')}\n          onDismiss={onDismiss}\n          content={modalContent}\n        />\n      ),\n    [t, onDismiss, modalContent, swapErrorMessage],\n  );\n\n  return (\n    <TransactionConfirmationModal\n      style={{ maxHeight: '90vh', overflow: 'auto' }}\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      txPending={txPending}\n      content={confirmationContent}\n      pendingText={pendingText}\n      modalContent={txPending ? t('submittedTxSwap') : t('swapSuccess')}\n    />\n  );\n};\n\nexport default ConfirmTwapModal;\n","import { MaxUint256 } from '@ethersproject/constants';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { TokenAmount, CurrencyAmount, ETHER } from '@uniswap/sdk';\nimport { useCallback, useMemo } from 'react';\nimport { useTokenAllowance } from 'data/Allowances';\nimport {\n  useTransactionAdder,\n  useHasPendingApproval,\n} from 'state/transactions/hooks';\nimport { calculateGasMargin } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { useTokenContract } from 'hooks/useContract';\nimport { TWAP_CONTRACT_ADDRESS } from './consts';\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React();\n  const token =\n    amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const currentAllowance = useTokenAllowance(\n    token,\n    account ?? undefined,\n    spender,\n  );\n  const pendingApproval = useHasPendingApproval(token?.address, spender);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED;\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n\n  const tokenContract = useTokenContract(token?.address);\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null');\n      return;\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas\n      .approve(spender, MaxUint256)\n      .catch(() => {\n        // general fallback for tokens who restrict approval amounts\n        useExact = true;\n        return tokenContract.estimateGas.approve(\n          spender,\n          amountToApprove.raw.toString(),\n        );\n      });\n\n    return tokenContract\n      .approve(\n        spender,\n        useExact ? amountToApprove.raw.toString() : MaxUint256,\n        {\n          gasLimit: calculateGasMargin(estimatedGas),\n        },\n      )\n      .then(async (response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender },\n        });\n        try {\n          await response.wait();\n        } catch (e) {\n          console.debug('Failed to approve token', e);\n          throw e;\n        }\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error);\n        throw error;\n      });\n  }, [\n    approvalState,\n    token,\n    tokenContract,\n    amountToApprove,\n    spender,\n    addTransaction,\n  ]);\n\n  return [approvalState, approve];\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useTwapApproveCallbackFromTrade(\n  amountToTrade?: CurrencyAmount,\n): [ApprovalState, () => Promise<void>] {\n  const { chainId } = useActiveWeb3React();\n\n  return useApproveCallback(\n    amountToTrade,\n    chainId ? TWAP_CONTRACT_ADDRESS : undefined,\n  );\n}\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { Currency, CurrencyAmount, Token, Trade } from '@uniswap/sdk';\nimport { Box, Button, CircularProgress, styled } from '@material-ui/core';\nimport { useWalletModalToggle } from 'state/application/hooks';\nimport {\n  tryParseAmount,\n  useDerivedTwapInfo,\n  useTwapActionHandlers,\n  useTwapState,\n} from 'state/twap/hooks';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useAllTokens, useToken } from 'hooks/Tokens';\nimport { CurrencyInput } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport { ApprovalState } from 'hooks/useApproveCallback';\nimport { useTransactionFinalizer } from 'state/transactions/hooks';\nimport { addMaticToMetamask, isSupportedNetwork, maxAmountSpend } from 'utils';\nimport { ReactComponent as ExchangeIcon } from 'assets/images/ExchangeIcon.svg';\nimport 'components/styles/Swap.scss';\nimport { useTranslation } from 'react-i18next';\nimport LimitPriceInput from './LimitPriceInput';\nimport Duration from './Duration';\nimport Interval from './Interval';\nimport ChunkSize from './ChunkSize';\nimport ErrorNotification from './ErrorNotification';\nimport { useTwapCallback } from './useTwapCallback';\nimport ConfirmTwapModal from './ConfirmTwapModal';\nimport PriceIndication from './PriceIndication';\nimport { parseUnits } from 'ethers/lib/utils';\nimport useTwapWrapCallback, { WrapType } from './useWrapCallback';\nimport { useInputsValidation } from './useValidation';\nimport { useTwapApproveCallbackFromTrade } from './useTwapApproveCallbackFromTrade';\nimport moment from 'moment';\nimport { MATIC_WRAPPED_ADDRESS } from './consts';\n\nconst Twap: React.FC = () => {\n  const { t } = useTranslation();\n  const { account } = useActiveWeb3React();\n  const { typedValue, recipient, allowLimitPrice } = useTwapState();\n\n  const {\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    typedPriceOutputValue,\n    marketPrice,\n  } = useDerivedTwapInfo();\n\n  const finalizedTransaction = useTransactionFinalizer();\n  const [wrapLoading, setWrapLoading] = useState(false);\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useTwapWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue,\n  );\n\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n  } = useTwapActionHandlers();\n  const searchToken = useToken(MATIC_WRAPPED_ADDRESS);\n\n  const handleCurrencySelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection],\n  );\n\n  const onWrapHandler = async () => {\n    if (!onWrap) {\n      return;\n    }\n    try {\n      setWrapLoading(true);\n      await onWrap();\n      handleCurrencySelect(searchToken);\n    } catch (error) {\n    } finally {\n      setWrapLoading(false);\n    }\n  };\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const [approving, setApproving] = useState(false);\n  const [approval, approveCallback] = useTwapApproveCallbackFromTrade(\n    parsedAmount,\n  );\n\n  const inputsError = useInputsValidation();\n\n  const parsedAmounts = useMemo(() => {\n    return {\n      [Field.INPUT]: parsedAmount,\n      [Field.OUTPUT]: typedPriceOutputValue,\n    };\n  }, [parsedAmount, typedPriceOutputValue]);\n\n  const formattedAmounts = useMemo(() => {\n    return {\n      [Field.INPUT]: typedValue || '',\n      [Field.OUTPUT]: typedPriceOutputValue?.toSignificant(6) || '',\n    };\n  }, [typedValue, typedPriceOutputValue]);\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] &&\n      currencyBalances[Field.INPUT] &&\n      currencyBalances[Field.INPUT]?.toExact() &&\n      typedValue &&\n      parseUnits(typedValue, parsedAmounts[Field.INPUT]?.currency.decimals).gt(\n        parseUnits(\n          currencyBalances[Field.INPUT]?.toExact() || '0',\n          parsedAmounts[Field.INPUT]?.currency.decimals,\n        ),\n      ),\n  );\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n  const { ethereum } = window as any;\n  const isValid = !swapInputError;\n\n  const showApproveFlow =\n    approval === ApprovalState.NOT_APPROVED ||\n    approval === ApprovalState.PENDING ||\n    (approvalSubmitted && approval === ApprovalState.APPROVED);\n\n  const toggleWalletModal = useWalletModalToggle();\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const connectWallet = () => {\n    if (ethereum && !isSupportedNetwork(ethereum)) {\n      addMaticToMetamask();\n    } else {\n      toggleWalletModal();\n    }\n  };\n\n  const handleOtherCurrencySelect = useCallback(\n    (outputCurrency) => {\n      if (outputCurrency.symbol === 'MATIC' && searchToken) {\n        setApprovalSubmitted(false);\n        onCurrencySelection(Field.OUTPUT, searchToken);\n      } else {\n        setApprovalSubmitted(false);\n        onCurrencySelection(Field.OUTPUT, outputCurrency);\n      }\n    },\n    [onCurrencySelection, searchToken],\n  );\n\n  const swapButtonText = useMemo(() => {\n    if (account) {\n      if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n        return t('selectToken');\n      } else if (\n        formattedAmounts[Field.INPUT] === '' &&\n        formattedAmounts[Field.OUTPUT] === ''\n      ) {\n        return t('enterAmount');\n      } else if (userHasSpecifiedInputOutput) {\n        return t('insufficientLiquidityTrade');\n      } else if (showWrap) {\n        return wrapType === WrapType.WRAP\n          ? t('wrap')\n          : wrapType === WrapType.UNWRAP\n          ? t('unWrap')\n          : '';\n      } else if (inputsError) {\n        return inputsError;\n      } else {\n        return swapInputError ?? 'Place order';\n      }\n    } else {\n      return ethereum && !isSupportedNetwork(ethereum)\n        ? t('switchPolygon')\n        : t('connectWallet');\n    }\n  }, [\n    t,\n    formattedAmounts,\n    currencies,\n    account,\n    ethereum,\n    userHasSpecifiedInputOutput,\n    showWrap,\n    wrapType,\n    swapInputError,\n    inputsError,\n  ]);\n\n  const twapButtonDisabled = useMemo(() => {\n    if (account) {\n      if (showWrap) {\n        return Boolean(wrapInputError);\n      } else if (userHasSpecifiedInputOutput) {\n        return true;\n      } else if (showApproveFlow) {\n        return !isValid || approval !== ApprovalState.APPROVED;\n      } else if (inputsError) {\n        return Boolean(inputsError);\n      } else {\n        return !isValid;\n      }\n    } else {\n      return false;\n    }\n  }, [\n    account,\n    showWrap,\n    wrapInputError,\n    userHasSpecifiedInputOutput,\n    showApproveFlow,\n    approval,\n    isValid,\n    inputsError,\n  ]);\n\n  const [\n    {\n      showConfirm,\n      txPending,\n      tradeToConfirm,\n      swapErrorMessage,\n      attemptingTxn,\n      txHash,\n    },\n    setTwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    txPending?: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    txPending: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(value);\n    },\n    [onUserInput],\n  );\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(\n    currencyBalances[Field.INPUT],\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleHalfInput = useCallback(() => {\n    maxAmountInput &&\n      onUserInput((Number(maxAmountInput.toExact()) / 2).toString());\n  }, [maxAmountInput, onUserInput]);\n\n  const atMaxAmountInput = Boolean(\n    maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput),\n  );\n\n  const onSwap = () => {\n    if (showWrap) {\n      onWrapHandler();\n    } else {\n      setTwapState({\n        tradeToConfirm: undefined,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        showConfirm: true,\n        txHash: undefined,\n      });\n    }\n  };\n\n  const twapCallback = useTwapCallback();\n\n  const handleTwap = useCallback(async () => {\n    if (!twapCallback) {\n      return;\n    }\n\n    try {\n      setTwapState({\n        attemptingTxn: true,\n        tradeToConfirm: undefined,\n        showConfirm: true,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n        txPending: true,\n      });\n\n      await twapCallback();\n      console.log('lalalal');\n\n      setTwapState({\n        attemptingTxn: false,\n        tradeToConfirm: undefined,\n        showConfirm: true,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n        txPending: false,\n      });\n    } catch (error) {\n      console.log(error);\n      setTwapState({\n        attemptingTxn: false,\n        tradeToConfirm: undefined,\n        showConfirm: true,\n        swapErrorMessage: (error as any).message,\n        txHash: undefined,\n        txPending: false,\n      });\n    } finally {\n    }\n  }, [\n    tradeToConfirm,\n    account,\n    recipient,\n    showConfirm,\n    twapCallback,\n    finalizedTransaction,\n  ]);\n\n  useEffect(() => {\n    if (!currencies[Field.INPUT] && searchToken) {\n      onCurrencySelection(Field.INPUT, searchToken);\n    }\n  }, [onCurrencySelection, currencies, searchToken]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setTwapState({\n      tradeToConfirm: undefined,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash]);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setTwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput('');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  return (\n    <Box>\n      <ErrorNotification />\n      {showConfirm && (\n        <ConfirmTwapModal\n          isOpen={showConfirm}\n          originalTrade={tradeToConfirm}\n          onAcceptChanges={handleAcceptChanges}\n          attemptingTxn={attemptingTxn}\n          txPending={txPending}\n          txHash={txHash}\n          recipient={recipient}\n          allowedSlippage={allowedSlippage}\n          onConfirm={handleTwap}\n          swapErrorMessage={swapErrorMessage}\n          onDismiss={handleConfirmDismiss}\n        />\n      )}\n      <CurrencyInput\n        title={`${t('from')}:`}\n        id='swap-currency-input'\n        currency={currencies[Field.INPUT]}\n        onHalf={handleHalfInput}\n        onMax={handleMaxInput}\n        showHalfButton={true}\n        showMaxButton={!atMaxAmountInput}\n        otherCurrency={currencies[Field.OUTPUT]}\n        handleCurrencySelect={handleCurrencySelect}\n        amount={formattedAmounts[Field.INPUT]}\n        setAmount={handleTypeInput}\n      />\n\n      <Box className='exchangeSwap'>\n        <ExchangeIcon onClick={onSwitchTokens} />\n      </Box>\n      <CurrencyInput\n        title={`${t('toEstimate')}:`}\n        id='swap-currency-output'\n        currency={currencies[Field.OUTPUT]}\n        showPrice={Boolean(marketPrice)}\n        showMaxButton={false}\n        otherCurrency={currencies[Field.INPUT]}\n        handleCurrencySelect={handleOtherCurrencySelect}\n        amount={formattedAmounts[Field.OUTPUT] || ''}\n        setAmount={() => null}\n        disabled\n        prefix={allowLimitPrice ? '≥' : '~'}\n        tooltip={\n          allowLimitPrice ? t('twapToInputLimitOrder') : t('twapToInput')\n        }\n      />\n      {marketPrice && (\n        <PriceIndication executionPrice={marketPrice} title='Current Price' />\n      )}\n      <StyledFlex>\n        <LimitPriceInput />\n        <Duration />\n        <ChunkSize currency={currencies[Field.INPUT]} />\n        <Interval />\n      </StyledFlex>\n\n      <Box className='swapButtonWrapper'>\n        {showApproveFlow && !showWrap && (\n          <Box width='48%'>\n            <Button\n              fullWidth\n              disabled={\n                approving ||\n                approval !== ApprovalState.NOT_APPROVED ||\n                approvalSubmitted\n              }\n              onClick={async () => {\n                setApproving(true);\n                try {\n                  await approveCallback();\n                  setApproving(false);\n                } catch (err) {\n                  setApproving(false);\n                }\n              }}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Box className='content'>\n                  {t('approving')} <CircularProgress size={16} />\n                </Box>\n              ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                t('approved')\n              ) : (\n                `${t('approve')} ${currencies[Field.INPUT]?.symbol}`\n              )}\n            </Button>\n          </Box>\n        )}\n        <StyledButtonContainer\n          width={showApproveFlow && !showWrap ? '48%' : '100%'}\n        >\n          <Button\n            fullWidth\n            disabled={(twapButtonDisabled as boolean) || wrapLoading}\n            onClick={account ? onSwap : connectWallet}\n          >\n            {wrapLoading ? (\n              <CircularProgress style={{ color: 'white', zoom: 0.8 }} />\n            ) : (\n              swapButtonText\n            )}\n          </Button>\n        </StyledButtonContainer>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Twap;\n\nconst StyledButtonContainer = styled(Box)({\n  '& .Mui-disabled': {\n    backgroundImage: 'unset!important',\n    color: 'white!important',\n  },\n});\n\nconst StyledFlex = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 10,\n});\n","import { useTransactionAdder } from 'state/transactions/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { useTwapContract } from './contract/useContract';\nimport {\n  tryParseAmount,\n  useDerivedTwapInfo,\n  useTwapState,\n} from 'state/twap/hooks';\nimport moment from 'moment';\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\n\nexport function useTwapCallback() {\n  const { account } = useActiveWeb3React();\n  const { interval, INPUT, OUTPUT, chunkSize, deadline } = useTwapState();\n  const { parsedAmount, minimumAmountOut } = useDerivedTwapInfo();\n\n  const contract = useTwapContract();\n\n  const addTransaction = useTransactionAdder();\n\n  const callback = async () => {\n    const srcAmount = parsedAmount?.raw.toString();\n    const srcBidAmount =\n      chunkSize &&\n      tryParseAmount(chunkSize, parsedAmount?.currency)?.raw.toString();\n    const dstMinAmount = minimumAmountOut?.toString();\n\n    if (!INPUT.currencyId || !OUTPUT.currencyId) {\n      throw new Error('currencies missing');\n    }\n    if (!contract) {\n      throw new Error('Contract error');\n    }\n    if (!account) {\n      throw new Error('account missing');\n    }\n    if (!deadline) {\n      throw new Error('Deadline missing');\n    }\n\n    if (!interval.milliseconds) {\n      throw new Error('Interval missing');\n    }\n\n    if (!srcBidAmount) {\n      throw new Error('Source bid amount missing');\n    }\n\n    if (!srcAmount) {\n      throw new Error('Source missing');\n    }\n    if (!dstMinAmount) {\n      throw new Error('Dest min amount missing');\n    }\n\n    const delay = interval.milliseconds / 1000;\n\n    return contract.ask(\n      '0xeFE1B6096838949156e5130604434A2a13c68C68',\n      INPUT.currencyId,\n      OUTPUT.currencyId,\n      srcAmount,\n      srcBidAmount,\n      dstMinAmount,\n      moment(deadline).unix(),\n      delay,\n    );\n  };\n\n  return callback;\n}\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SettingsIcon } from 'assets/images/SettingsIcon.svg';\nimport { useIsProMode } from 'state/application/hooks';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { useCurrency } from 'hooks/Tokens';\nimport { Swap, SettingsModal, ToggleSwitch } from 'components';\nimport {\n  GelatoLimitOrderPanel,\n  GelatoLimitOrdersHistoryPanel,\n} from '@gelatonetwork/limit-orders-react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Twap from './Twap/Twap';\nimport InfoTooltip from './Twap/InfoTooltip';\n\nconst SWAP_NORMAL = 0;\nconst SWAP_LIMIT = 1;\nconst TWAP = 2;\n\nconst SwapMain: React.FC = () => {\n  const [swapIndex, setSwapIndex] = useState(TWAP);\n  const [openSettingsModal, setOpenSettingsModal] = useState(false);\n  const { isProMode, updateIsProMode } = useIsProMode();\n\n  const parsedQuery = useParsedQueryString();\n  const currency0 = useCurrency(\n    parsedQuery && parsedQuery.currency0\n      ? (parsedQuery.currency0 as string)\n      : undefined,\n  );\n  const currency1 = useCurrency(\n    parsedQuery && parsedQuery.currency1\n      ? (parsedQuery.currency1 as string)\n      : undefined,\n  );\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {openSettingsModal && (\n        <SettingsModal\n          open={openSettingsModal}\n          onClose={() => setOpenSettingsModal(false)}\n        />\n      )}\n      <Box\n        className={`flex flex-wrap items-center justify-between ${\n          isProMode ? ' proModeWrapper' : ''\n        }`}\n      >\n        <Box display='flex'>\n          <Box\n            className={`${\n              swapIndex === SWAP_NORMAL ? 'activeSwap' : ''\n            } swapItem headingItem\n            `}\n            onClick={() => setSwapIndex(SWAP_NORMAL)}\n          >\n            <p>{t('market')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === SWAP_LIMIT ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(SWAP_LIMIT)}\n          >\n            <p>{t('limit')}</p>\n          </Box>\n          <Box\n            className={`${\n              swapIndex === TWAP ? 'activeSwap' : ''\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\n            onClick={() => setSwapIndex(TWAP)}\n          >\n            <InfoTooltip text={t('twapTab')}>\n              <p>{t('twap')}</p>\n            </InfoTooltip>\n          </Box>\n        </Box>\n        <Box my={1} className='flex items-center'>\n          {!isProMode && (\n            <Box className='flex items-center' mr={1}>\n              <span\n                className='text-secondary text-uppercase'\n                style={{ marginRight: 8 }}\n              >\n                {t('proMode')}\n              </span>\n              <ToggleSwitch\n                toggled={isProMode}\n                onToggle={() => updateIsProMode(!isProMode)}\n              />\n            </Box>\n          )}\n          <Box className='headingItem' marginRight={isProMode ? 2.5 : 0}>\n            <SettingsIcon onClick={() => setOpenSettingsModal(true)} />\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={isProMode ? '0 24px' : '0'} mt={3.5}>\n        {swapIndex === SWAP_NORMAL && (\n          <Swap\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n          />\n        )}\n        {swapIndex === SWAP_LIMIT && (\n          <Box className='limitOrderPanel'>\n            <GelatoLimitOrderPanel />\n            <GelatoLimitOrdersHistoryPanel />\n            <Box mt={2} textAlign='center'>\n              <small>\n                <Trans\n                  i18nKey='limitOrderDisclaimer'\n                  components={{\n                    bold: <b />,\n                    alink: (\n                      <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://www.certik.org/projects/gelato'\n                      />\n                    ),\n                  }}\n                />\n              </small>\n            </Box>\n          </Box>\n        )}\n        {swapIndex === TWAP && <Twap />}\n      </Box>\n    </>\n  );\n};\n\nexport default SwapMain;\n","import React from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { GlobalConst } from 'constants/index';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatCompact, getDaysCurrentYear } from 'utils';\nimport { useCurrency } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\n\nconst LiquidityPoolRow: React.FC<{\n  pair: any;\n  key: number;\n}> = ({ pair, key }) => {\n  const { breakpoints } = useTheme();\n  const daysCurrentYear = getDaysCurrentYear();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const { t } = useTranslation();\n\n  const dayVolumeUSD =\n    Number(\n      pair.oneDayVolumeUSD ? pair.oneDayVolumeUSD : pair.oneDayVolumeUntracked,\n    ) *\n    GlobalConst.utils.FEEPERCENT *\n    daysCurrentYear *\n    100;\n  const trackReserveUSD = Number(\n    pair.oneDayVolumeUSD ? pair.trackedReserveUSD : pair.reserveUSD,\n  );\n  const apy =\n    isNaN(dayVolumeUSD) || trackReserveUSD === 0\n      ? 0\n      : dayVolumeUSD / trackReserveUSD;\n  const liquidity = pair.trackedReserveUSD\n    ? pair.trackedReserveUSD\n    : pair.reserveUSD;\n  const volume = pair.oneDayVolumeUSD\n    ? pair.oneDayVolumeUSD\n    : pair.oneDayVolumeUntracked;\n  const token0 = useCurrency(pair.token0.id);\n  const token1 = useCurrency(pair.token1.id);\n  return (\n    <Box key={key} className='liquidityContent'>\n      <Box className='flex items-center' width={isMobile ? 1 : 0.5}>\n        <DoubleCurrencyLogo\n          currency0={token0 ?? undefined}\n          currency1={token1 ?? undefined}\n          size={28}\n        />\n        <small style={{ marginLeft: 12 }}>\n          {pair.token0.symbol.toUpperCase()} /{' '}\n          {pair.token1.symbol.toUpperCase()}\n        </small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.2}\n        mt={isMobile ? 2.5 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('tvl')}</small>}\n        <small>${formatCompact(liquidity)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className='flex justify-between'\n      >\n        {isMobile && <small className='text-secondary'>{t('24hVol')}</small>}\n        <small>${formatCompact(volume)}</small>\n      </Box>\n      <Box\n        width={isMobile ? 1 : 0.15}\n        mt={isMobile ? 1 : 0}\n        className={`flex ${isMobile ? 'justify-between' : 'justify-end'}`}\n      >\n        {isMobile && <small className='text-secondary'>{t('apy')}</small>}\n        <small\n          className={`text-right ${apy < 0 ? 'text-error' : 'text-success'}`}\n        >\n          {apy.toFixed(2)}%\n        </small>\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(LiquidityPoolRow);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport { Token } from '@uniswap/sdk';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst LiquidityPools: React.FC<{\n  token1: Token;\n  token2: Token;\n}> = ({ token1, token2 }) => {\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const { t } = useTranslation();\n  const { ethPrice } = useEthPrice();\n\n  const liquidityPairs = useMemo(\n    () =>\n      tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              if (liquidityFilterIndex === 0) {\n                return true;\n              } else if (liquidityFilterIndex === 1) {\n                return (\n                  pair.token0.id === token1Address ||\n                  pair.token1.id === token1Address\n                );\n              } else {\n                return (\n                  pair.token0.id === token2Address ||\n                  pair.token1.id === token2Address\n                );\n              }\n            })\n            .slice(0, 5)\n        : [],\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\n  );\n\n  const whiteListAddressList = useMemo(\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\n    [allTokenList],\n  );\n\n  useEffect(() => {\n    if (!ethPrice.price) return;\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n\n      const formattedPairs = tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              return (\n                whiteListAddressList.includes(pair?.token0?.id) &&\n                whiteListAddressList.includes(pair?.token1?.id)\n              );\n            })\n            .map((pair: any) => {\n              return pair.id;\n            })\n        : [];\n\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n\n  return (\n    <>\n      <Box\n        className='flex items-center justify-between'\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\n      >\n        <Box className='flex items-center'>\n          <p className='weight-600' style={{ marginRight: 8 }}>\n            {t('liquidityPools')}\n          </p>\n          <small className='text-secondary'>\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\n          </small>\n        </Box>\n        <Box\n          className='flex cursor-pointer text-secondary'\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\n        >\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n        </Box>\n      </Box>\n      {!liquidityPoolClosed && (\n        <>\n          <Divider />\n          <Box width={1}>\n            <Box padding={2} className='flex liquidityMain'>\n              <Box width={0.5} className='flex liquidityFilter'>\n                <small\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(0)}\n                >\n                  {t('all')}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(1)}\n                >\n                  {token1.symbol?.toUpperCase()}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(2)}\n                >\n                  {token2.symbol?.toUpperCase()}\n                </small>\n              </Box>\n              {!isMobile && (\n                <>\n                  <Box width={0.2}>\n                    <small>{t('tvl')}</small>\n                  </Box>\n                  <Box width={0.15}>\n                    <small>{t('24hVol')}</small>\n                  </Box>\n                  <Box width={0.15} className='text-right'>\n                    <small>{t('apy')}</small>\n                  </Box>\n                </>\n              )}\n            </Box>\n            {liquidityPairs.map((pair: any, ind: any) => (\n              <LiquidityPoolRow pair={pair} key={ind} />\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LiquidityPools;\n","import React from 'react';\n\nconst SwapProChart: React.FC<{\n  pairName: string;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n}> = ({ pairAddress, pairName, pairTokenReversed }) => {\n  return (\n    <iframe\n      src={`https://mode.quickswap.exchange?pairAddress=${pairAddress}&pairName=${pairName}&tokenReversed=${pairTokenReversed}`}\n      height='100%'\n      width='100%'\n      frameBorder='0'\n    />\n  );\n};\n\nexport default React.memo(SwapProChart);\n","import React from 'react';\nimport SwapProChart from './SwapProChart';\nimport { Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { Height } from '@material-ui/icons';\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex';\nimport 'react-reflex/styles.css';\nimport { formatNumber, shortenTx, getEtherscanLink } from 'utils';\nimport dayjs from 'dayjs';\nimport { useActiveWeb3React } from 'hooks';\nimport { TableVirtuoso } from 'react-virtuoso';\nimport { useTranslation } from 'react-i18next';\n\nconst SwapProChartTrade: React.FC<{\n  showChart: boolean;\n  showTrades: boolean;\n  token1: Token;\n  token2: Token;\n  pairAddress: string;\n  pairTokenReversed: boolean;\n  transactions?: any[];\n}> = ({\n  showChart,\n  showTrades,\n  token1,\n  token2,\n  pairAddress,\n  pairTokenReversed,\n  transactions,\n}) => {\n  const { chainId } = useActiveWeb3React();\n  const { t } = useTranslation();\n\n  const TradesTable = () => (\n    <TableVirtuoso\n      data={transactions}\n      components={{\n        Table: ({ ...props }) => <table className='tradeTable' {...props} />,\n      }}\n      fixedHeaderContent={() => (\n        <tr>\n          <th align='left'>{t('date')}</th>\n          <th align='left'>{t('type')}</th>\n          <th align='right'>{t('usd')}</th>\n          <th align='right'>{token1.symbol}</th>\n          <th align='right'>{token2.symbol}</th>\n          <th align='right'>{t('price')}</th>\n          <th align='right'>{t('txn')}</th>\n        </tr>\n      )}\n      itemContent={(index, tx) => {\n        const txType = Number(tx.amount0In) > 0 ? 'sell' : 'buy';\n        const txAmount0 =\n          Number(tx.amount0In) > 0 ? tx.amount0In : tx.amount0Out;\n        const txAmount1 =\n          Number(tx.amount1In) > 0 ? tx.amount1In : tx.amount1Out;\n        const token1Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount0\n            : txAmount1;\n        const token2Amount =\n          tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\n            ? txAmount1\n            : txAmount0;\n        const txPrice = Number(tx.amountUSD) / token1Amount;\n        return (\n          <>\n            <td align='left'>\n              {dayjs\n                .unix(tx.transaction.timestamp)\n                .format('MMM DD, hh:mm:ss a')}\n            </td>\n            <td className={txType} align='left'>\n              {txType.toUpperCase()}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(tx.amountUSD)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token1Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(token2Amount)}\n            </td>\n            <td className={txType} align='right'>\n              {formatNumber(txPrice)}\n            </td>\n            <td className={txType} align='right'>\n              {chainId ? (\n                <a\n                  href={getEtherscanLink(\n                    chainId,\n                    tx.transaction.id,\n                    'transaction',\n                  )}\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  {shortenTx(tx.transaction.id)}\n                </a>\n              ) : (\n                shortenTx(tx.transaction.id)\n              )}\n            </td>\n          </>\n        );\n      }}\n    />\n  );\n\n  return (\n    <ReflexContainer orientation='horizontal'>\n      {showChart && (\n        <ReflexElement className='top-pane' minSize={200}>\n          <SwapProChart\n            pairName={`${token1.symbol}/${token2.symbol}`}\n            pairAddress={pairAddress}\n            pairTokenReversed={pairTokenReversed}\n          />\n        </ReflexElement>\n      )}\n      {showChart && showTrades && (\n        <ReflexSplitter>\n          <Box\n            width={1}\n            height='2px'\n            className='flex justify-center items-center'\n          >\n            <Height />\n          </Box>\n        </ReflexSplitter>\n      )}\n      {showTrades && (\n        <ReflexElement className='bottom-pane' minSize={200}>\n          <TradesTable />\n        </ReflexElement>\n      )}\n    </ReflexContainer>\n  );\n};\n\nexport default React.memo(SwapProChartTrade);\n","import React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\ndayjs.extend(utc);\n\nconst SwapInfoTx: React.FC<{\n  transactions?: any[];\n}> = ({ transactions }) => {\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime\n    .subtract(subtractTimeAmount, subtractTimeType)\n    .unix();\n\n  const filteredTxs = transactions?.filter(\n    (tx) => tx.transaction.timestamp >= firstTime,\n  );\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\n  const volume = filteredTxs\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\n    : undefined;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ButtonSwitch\n        height={32}\n        value={txFilter}\n        onChange={setTxFilter}\n        items={[\n          { label: `5${t('min')}`, value: '5_minute' },\n          { label: `1${t('hour')}`, value: '1_hour' },\n          { label: `6${t('hour')}`, value: '6_hour' },\n          { label: `24${t('hour')}`, value: '24_hour' },\n        ]}\n      />\n      <Box className='swapTxInfo'>\n        <Box>\n          <small className='text-secondary'>{t('transactions')}:</small>\n          {filteredTxs ? (\n            <small>{filteredTxs.length}</small>\n          ) : (\n            <Skeleton width={60} height={14} />\n          )}\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('buys')}:</small>\n          <small>\n            {filteredBuyTxs ? (\n              filteredBuyTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('sells')}:</small>\n          <small>\n            {filteredSellTxs ? (\n              filteredSellTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('volume')}:</small>\n          <small>\n            {filteredTxs ? (\n              volume > 1000 ? (\n                formatCompact(volume)\n              ) : (\n                formatNumber(volume)\n              )\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default React.memo(SwapInfoTx);\n","import React, { useState, useEffect } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { SwapHoriz } from '@material-ui/icons';\nimport { Currency, Token } from '@uniswap/sdk';\nimport { CurrencyLogo } from 'components';\nimport { getTokenInfo, formatNumber } from 'utils';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwapInfoTx from './SwapInfoTx';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst SwapProInfo: React.FC<{\n  token1?: Token;\n  token2?: Token;\n  transactions?: any[];\n}> = ({ token1, token2, transactions }) => {\n  const { t } = useTranslation();\n  const [token1Data, setToken1Data] = useState<any>(null);\n  const [token2Data, setToken2Data] = useState<any>(null);\n  const token1Address = token1?.address;\n  const token2Address = token2?.address;\n  const currency1 = token1 ? unwrappedToken(token1) : undefined;\n  const currency2 = token2 ? unwrappedToken(token2) : undefined;\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    (async () => {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        if (token1Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token1Address,\n          );\n          if (tokenInfo) {\n            setToken1Data(tokenInfo[0]);\n          }\n        }\n        if (token2Address) {\n          const tokenInfo = await getTokenInfo(\n            ethPrice.price,\n            ethPrice.oneDayPrice,\n            token2Address,\n          );\n          if (tokenInfo) {\n            setToken2Data(tokenInfo[0]);\n          }\n        }\n      }\n    })();\n  }, [token1Address, token2Address, ethPrice.price, ethPrice.oneDayPrice]);\n\n  const TokenInfo: React.FC<{ currency: Currency; tokenData: any }> = ({\n    currency,\n    tokenData,\n  }) => {\n    const priceUpPercent = Number(tokenData?.priceChangeUSD);\n    return (\n      <>\n        <Box p={1} display='flex'>\n          <CurrencyLogo currency={currency} />\n          <Box ml={1} flex={1}>\n            <Box className='flex justify-between'>\n              <small>{currency.symbol}</small>\n              {tokenData ? (\n                <small>${formatNumber(tokenData?.priceUSD)}</small>\n              ) : (\n                <Skeleton width={60} height={14} />\n              )}\n            </Box>\n            {tokenData ? (\n              <span>\n                {t('24h')}:{' '}\n                <span\n                  className={priceUpPercent > 0 ? 'text-success' : 'text-error'}\n                >\n                  {formatNumber(priceUpPercent)}%\n                </span>\n              </span>\n            ) : (\n              <Skeleton width={60} height={12} />\n            )}\n          </Box>\n        </Box>\n        <Divider />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Box p={1}>\n        <p className='text-uppercase'>{t('info')}:</p>\n      </Box>\n      <Divider />\n      {currency1 && <TokenInfo currency={currency1} tokenData={token1Data} />}\n      {currency2 && <TokenInfo currency={currency2} tokenData={token2Data} />}\n      {currency1 && currency2 && (\n        <>\n          <Box py={2} px={1}>\n            <Box mb={1} px={1} className='flex items-center justify-between'>\n              <small>\n                {currency1.symbol} / {currency2.symbol}\n              </small>\n              <Box className='swapIcon'>\n                <SwapHoriz />\n              </Box>\n            </Box>\n            <SwapInfoTx transactions={transactions} />\n          </Box>\n          <Divider />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SwapProInfo);\n","import React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface SwapProFilterProps {\n  infoPos: string;\n  setInfoPos: (pos: string) => void;\n  showChart: boolean;\n  setShowChart: (value: boolean) => void;\n  showTrades: boolean;\n  setShowTrades: (value: boolean) => void;\n}\n\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\n  infoPos,\n  setInfoPos,\n  showChart,\n  setShowChart,\n  showTrades,\n  setShowTrades,\n}) => {\n  const { t } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n\n  const infoPosItems = swapPositions.map((pos) => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos,\n    };\n  });\n\n  return (\n    <Box className='swapFilter'>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showChart}\n          disabled={!showTrades}\n          onChange={(evt) => setShowChart(evt.target.checked)}\n        />\n        <small>{t('chart')}</small>\n      </Box>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showTrades}\n          disabled={!showChart}\n          onChange={(evt) => setShowTrades(evt.target.checked)}\n        />\n        <small>{t('trades')}</small>\n      </Box>\n      <Box className='flex items-center'>\n        <small className='text-uppercase'>{t('info')}:</small>\n        <Box ml={1}>\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\n        </Box>\n      </Box>\n      <Box\n        className='replayButton'\n        onClick={() => {\n          setInfoPos(t('right'));\n          setShowChart(true);\n          setShowTrades(true);\n        }}\n      >\n        <Replay />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwapProFilter;\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\n\nconst SwapPage: React.FC = () => {\n  const { isProMode, updateIsProMode } = useIsProMode();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState<any[] | undefined>(\n    undefined,\n  );\n  const [infoPos, setInfoPos] = useState('right');\n\n  const { currencies } = useDerivedSwapInfo();\n  const { chainId } = useActiveWeb3React();\n\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\n\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3} id='swap-page'>\n      {!isProMode && (\n        <Box className='pageHeading'>\n          <h4>{t('swap')}</h4>\n          <Box className='helpWrapper'>\n            <small>{t('help')}</small>\n            <HelpIcon />\n          </Box>\n        </Box>\n      )}\n      {!isProMode ? (\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Box className='wrapper'>\n              <SwapMain />\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={7}>\n            <Box className='flex flex-wrap justify-between fullWidth'>\n              {token1 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token1} />\n                </Box>\n              )}\n              {token2 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token2} />\n                </Box>\n              )}\n            </Box>\n            {token1 && token2 && (\n              <Box className='wrapper' marginTop='32px'>\n                <LiquidityPools token1={token1} token2={token2} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box\n          className='border-top border-bottom bg-palette flex flex-wrap'\n          minHeight='calc(100vh - 140px)'\n        >\n          <Box\n            width={isMobile ? 1 : '450px'}\n            padding='20px 0'\n            className={isMobile ? '' : 'border-right'}\n          >\n            <Box\n              className='flex justify-between items-center'\n              padding='0 24px'\n              mb={3}\n            >\n              <h4>{t('swap')}</h4>\n              <Box className='flex items-center' mr={1}>\n                <span\n                  className='text-secondary text-uppercase'\n                  style={{ marginRight: 8 }}\n                >\n                  {t('proMode')}\n                </span>\n                <ToggleSwitch\n                  toggled={isProMode}\n                  onToggle={() => updateIsProMode(!isProMode)}\n                />\n              </Box>\n            </Box>\n            <SwapMain />\n          </Box>\n          {infoPos === 'left' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left border-right'}\n              width={isMobile ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n          <Box className='swapProWrapper'>\n            <SwapProFilter\n              infoPos={infoPos}\n              setInfoPos={setInfoPos}\n              showChart={showChart}\n              setShowChart={setShowChart}\n              showTrades={showTrades}\n              setShowTrades={setShowTrades}\n            />\n            {token1 && token2 && pairId && (\n              <SwapProChartTrade\n                showChart={showChart}\n                showTrades={showTrades}\n                token1={token1}\n                token2={token2}\n                pairAddress={pairId}\n                pairTokenReversed={pairTokenReversed}\n                transactions={transactions}\n              />\n            )}\n          </Box>\n          {infoPos === 'right' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left'}\n              width={isTablet ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SwapPage;\n"],"sourceRoot":""}